local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 79) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v87 = v2(v0(v30, 16));
			if v19 then
				local v110 = 0;
				local v111;
				while true do
					if (v110 == 1) then
						return v111;
					end
					if (v110 == 0) then
						v111 = v5(v87, v19);
						v19 = nil;
						v110 = 1;
					end
				end
			else
				return v87;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v88 = (v31 / ((5 - 3) ^ (v32 - (2 - 1)))) % ((1 + 1) ^ (((v33 - (1 - 0)) - (v32 - (2 - 1))) + (620 - (555 + 64))));
			return v88 - (v88 % 1);
		else
			local v89 = (933 - (857 + (951 - (282 + 595)))) ^ (v32 - (569 - (367 + (1838 - (1523 + 114)))));
			return (((v31 % (v89 + v89)) >= v89) and ((834 + 94) - ((304 - 90) + 713))) or (0 + 0);
		end
	end
	local function v21()
		local v34 = v1(v16, v18, v18);
		v18 = v18 + 1;
		return v34;
	end
	local function v22()
		local v35 = 1065 - (68 + (1954 - (892 + 65)));
		local v36;
		local v37;
		while true do
			if (v35 == (1271 - (226 + 1044))) then
				return (v37 * ((2657 - 1543) - 858)) + v36;
			end
			if (v35 == (117 - (32 + 85))) then
				v36, v37 = v1(v16, v18, v18 + 2);
				v18 = v18 + 2 + 0;
				v35 = 1 + 0;
			end
		end
	end
	local function v23()
		local v38, v39, v40, v41 = v1(v16, v18, v18 + 3);
		v18 = v18 + (6 - 2);
		return (v41 * (30800116 - 14022900)) + (v40 * 65536) + (v39 * (606 - (87 + 263))) + v38;
	end
	local function v24()
		local v42 = 180 - (67 + 113);
		local v43;
		local v44;
		local v45;
		local v46;
		local v47;
		local v48;
		while true do
			if (v42 == (3 + 0)) then
				if (v47 == ((0 - 0) - 0)) then
					if (v46 == (1080 - (1020 + 60))) then
						return v48 * (0 + 0);
					else
						v47 = 3 - 2;
						v45 = 0 - 0;
					end
				elseif (v47 == (2999 - ((2225 - (630 + 793)) + 150))) then
					return ((v46 == (0 - 0)) and (v48 * (((3 - 2) - 0) / (438 - (145 + 293))))) or (v48 * NaN);
				end
				return v8(v48, v47 - (745 + 278)) * (v45 + (v46 / ((999 - ((4332 - 3417) + 82)) ^ 52)));
			end
			if (v42 == (1487 - (998 + 488))) then
				v45 = 2 - 1;
				v46 = (v20(v44, 1 + 0, 26 - 6) * (((449 + 691) - (116 + 1022)) ^ (1219 - (1069 + 118)))) + v43;
				v42 = 4 - (6 - 4);
			end
			if (0 == v42) then
				v43 = v23();
				v44 = v23();
				v42 = (1748 - (760 + 987)) - 0;
			end
			if ((1 + 1) == v42) then
				v47 = v20(v44, 880 - (814 + 45), (1967 - (1789 + 124)) - 23);
				v48 = ((v20(v44, 32 + 0) == (1 + (766 - (745 + 21)))) and -((273 + 519) - (368 + 423))) or (1 + 0);
				v42 = 888 - ((717 - 456) + 624);
			end
		end
	end
	local function v25(v49)
		local v50;
		if not v49 then
			v49 = v23();
			if (v49 == (0 - 0)) then
				return "";
			end
		end
		v50 = v3(v16, v18, (v18 + v49) - (1 + 0));
		v18 = v18 + v49;
		local v51 = {};
		for v67 = 1, #v50 do
			v51[v67] = v2(v1(v3(v50, v67, v67)));
		end
		return v6(v51);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v52 = (function()
			return function(v90, v91, v92, v93, v94, v95, v96, v97)
				local v90 = (function()
					return 0;
				end)();
				local v91 = (function()
					return;
				end)();
				local v92 = (function()
					return;
				end)();
				while true do
					if (v90 ~= #":") then
					else
						if (v91 == #"<") then
							v92 = (function()
								return v93() ~= 0;
							end)();
						elseif (v91 == 2) then
							v92 = (function()
								return v94();
							end)();
						elseif (v91 == #"nil") then
							v92 = (function()
								return v95();
							end)();
						end
						v96[v97] = (function()
							return v92;
						end)();
						break;
					end
					if (v90 == 0) then
						local v117 = (function()
							return 0;
						end)();
						local v118 = (function()
							return;
						end)();
						while true do
							if (v117 == (0 + 0)) then
								v118 = (function()
									return 1905 - (1881 + 24);
								end)();
								while true do
									if (v118 == (0 - 0)) then
										v91 = (function()
											return v93();
										end)();
										v92 = (function()
											return nil;
										end)();
										v118 = (function()
											return 1764 - (454 + 1309);
										end)();
									end
									if (v118 == (1 + 0)) then
										v90 = (function()
											return #"]";
										end)();
										break;
									end
								end
								break;
							end
						end
					end
				end
				return v90, v91, v92, v93, v94, v95, v96, v97;
			end;
		end)();
		local v53 = (function()
			return function(v98, v99, v100)
				local v101 = (function()
					return 0;
				end)();
				local v102 = (function()
					return;
				end)();
				while true do
					if ((0 - 0) ~= v101) then
					else
						v102 = (function()
							return 0 - 0;
						end)();
						while true do
							if (v102 == (0 - 0)) then
								local v122 = (function()
									return 0;
								end)();
								while true do
									if (v122 ~= 0) then
									else
										v98[v99 - #"["] = (function()
											return v100();
										end)();
										return v98, v99, v100;
									end
								end
							end
						end
						break;
					end
				end
			end;
		end)();
		local v54 = (function()
			return {};
		end)();
		local v55 = (function()
			return {};
		end)();
		local v56 = (function()
			return {};
		end)();
		local v57 = (function()
			return {v54,v55,nil,v56};
		end)();
		local v58 = (function()
			return v23();
		end)();
		local v59 = (function()
			return {};
		end)();
		for v69 = #":", v58 do
			FlatIdent_1BCFB, Type, Cons, v21, v24, v25, v59, v69 = (function()
				return v52(FlatIdent_1BCFB, Type, Cons, v21, v24, v25, v59, v69);
			end)();
		end
		v57[#"91("] = (function()
			return v21();
		end)();
		for v70 = #">", v23() do
			local v71 = (function()
				return v21();
			end)();
			if (v20(v71, #"~", #" ") == (285 - (134 + 151))) then
				local v106 = (function()
					return 1665 - (970 + 695);
				end)();
				local v107 = (function()
					return;
				end)();
				local v108 = (function()
					return;
				end)();
				local v109 = (function()
					return;
				end)();
				while true do
					if (v106 ~= 1) then
					else
						local v119 = (function()
							return 0;
						end)();
						while true do
							if ((1 - 0) == v119) then
								v106 = (function()
									return 1992 - (582 + 1408);
								end)();
								break;
							end
							if (0 == v119) then
								v109 = (function()
									return {v22(),v22(),nil,nil};
								end)();
								if (v107 == (0 - 0)) then
									local v127 = (function()
										return 0 - 0;
									end)();
									local v128 = (function()
										return;
									end)();
									while true do
										if (v127 == (1824 - (1195 + 629))) then
											v128 = (function()
												return 0 - 0;
											end)();
											while true do
												if (v128 ~= (241 - (187 + 54))) then
												else
													v109[#"gha"] = (function()
														return v22();
													end)();
													v109[#"0836"] = (function()
														return v22();
													end)();
													break;
												end
											end
											break;
										end
									end
								elseif (v107 == #"/") then
									v109[#"91("] = (function()
										return v23();
									end)();
								elseif (v107 == (782 - (162 + 618))) then
									v109[#"91("] = (function()
										return v23() - (2 ^ 16);
									end)();
								elseif (v107 == #"nil") then
									local v133 = (function()
										return 0;
									end)();
									local v134 = (function()
										return;
									end)();
									while true do
										if ((0 + 0) ~= v133) then
										else
											v134 = (function()
												return 0;
											end)();
											while true do
												if (0 == v134) then
													v109[#"asd"] = (function()
														return v23() - (2 ^ (11 + 5));
													end)();
													v109[#"xnxx"] = (function()
														return v22();
													end)();
													break;
												end
											end
											break;
										end
									end
								end
								v119 = (function()
									return 1;
								end)();
							end
						end
					end
					if (v106 == 0) then
						local v120 = (function()
							return 0 - 0;
						end)();
						while true do
							if (v120 == (0 - 0)) then
								v107 = (function()
									return v20(v71, 1 + 1, #"nil");
								end)();
								v108 = (function()
									return v20(v71, #"asd1", 6);
								end)();
								v120 = (function()
									return 1;
								end)();
							end
							if (v120 ~= 1) then
							else
								v106 = (function()
									return 1;
								end)();
								break;
							end
						end
					end
					if (v106 ~= 2) then
					else
						if (v20(v108, #"[", #"[") == #"{") then
							v109[2] = (function()
								return v59[v109[2]];
							end)();
						end
						if (v20(v108, 1638 - (1373 + 263), 1002 - (451 + 549)) ~= #"/") then
						else
							v109[#"91("] = (function()
								return v59[v109[#"xxx"]];
							end)();
						end
						v106 = (function()
							return 1 + 2;
						end)();
					end
					if (3 ~= v106) then
					else
						if (v20(v108, #"xxx", #"xxx") == #" ") then
							v109[#"asd1"] = (function()
								return v59[v109[#"0313"]];
							end)();
						end
						v54[v70] = (function()
							return v109;
						end)();
						break;
					end
				end
			end
		end
		for v72 = #".", v23() do
			v55, v72, v28 = (function()
				return v53(v55, v72, v28);
			end)();
		end
		return v57;
	end
	local function v29(v61, v62, v63)
		local v64 = v61[1 - (922 - (519 + 403))];
		local v65 = v61[2 - 0];
		local v66 = v61[1387 - (746 + 638)];
		return function(...)
			local v73 = v64;
			local v74 = v65;
			local v75 = v66;
			local v76 = v27;
			local v77 = (1522 - (1435 + 86)) + 0;
			local v78 = -(1 - 0);
			local v79 = {};
			local v80 = {...};
			local v81 = v12("#", ...) - 1;
			local v82 = {};
			local v83 = {};
			for v103 = (1758 - (97 + 80)) - (1535 + 46), v81 do
				if ((v103 >= v75) or (3808 == 2059)) then
					v79[v103 - v75] = v80[v103 + 1];
				else
					v83[v103] = v80[v103 + 1 + 0];
				end
			end
			local v84 = (v81 - v75) + (1 - 0) + 0;
			local v85;
			local v86;
			while true do
				v85 = v73[v77];
				v86 = v85[1];
				if (v86 <= (772 - (306 + 254))) then
					if (v86 <= (7 + 98)) then
						if (v86 <= (101 - 49)) then
							if (v86 <= (1492 - (899 + 568))) then
								if ((v86 <= ((710 - (366 + 336)) + 4)) or (904 > 2409)) then
									if (v86 <= 5) then
										if (v86 <= (4 - 2)) then
											if (v86 <= (603 - (268 + 335))) then
												local v135 = 290 - (60 + 230);
												while true do
													if ((v135 == 3) or (4431 < 872)) then
														v83[v85[574 - (426 + 146)]] = v83[v85[1 + 2]][v85[(2065 - (4 + 601)) - (282 + 1174)]];
														v77 = v77 + (812 - (503 + 66 + 242));
														v85 = v73[v77];
														v135 = 4;
													end
													if (v135 == 5) then
														v77 = v85[8 - 5];
														break;
													end
													if ((2698 > 571) and (v135 == ((669 - (128 + 540)) + 3))) then
														v63[v85[1027 - (706 + 318)]] = v83[v85[1253 - (721 + 530)]];
														v77 = v77 + (1272 - (945 + 326));
														v85 = v73[v77];
														v135 = 5;
													end
													if (v135 == ((571 - (341 + 228)) - 1)) then
														v83[v85[2 + 0]] = v83[v85[3]][v85[4]];
														v77 = v77 + (701 - (271 + 429));
														v85 = v73[v77];
														v135 = 2 + 0;
													end
													if (v135 == (1500 - (1408 + 92))) then
														v83[v85[1088 - (461 + 625)]] = v83[v85[1291 - (993 + 295)]][v85[1 + 3]];
														v77 = v77 + 1;
														v85 = v73[v77];
														v135 = 1172 - (418 + 753);
													end
													if (v135 == 2) then
														v83[v85[1790 - (231 + 1557)]] = v83[v85[2 + 1]][v85[1 + 3]];
														v77 = v77 + 1 + 0;
														v85 = v73[v77];
														v135 = 1 + 2;
													end
												end
											elseif (v86 > 1) then
												local v924 = v85[(702 - 171) - (406 + 123)];
												v83[v924](v13(v83, v924 + ((8005 - 6235) - (1075 + 674 + 20)), v85[1 + 2]));
											else
												local v925;
												local v926, v927;
												local v928;
												v83[v85[1353 - (1329 + 22)]] = v62[v85[1325 - (1249 + 73)]];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v83[v85[1147 - (466 + 679)]] = v83[v85[6 - 3]];
												v77 = v77 + (2 - 1);
												v85 = v73[v77];
												v83[v85[2]] = v85[1903 - (106 + 1794)];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v928 = v85[(704 - (27 + 676)) + 1];
												v926, v927 = v76(v83[v928](v13(v83, v928 + (2 - 1), v85[7 - 4])));
												v78 = (v927 + v928) - (115 - (4 + 110));
												v925 = 584 - (57 + 527);
												for v4264 = v928, v78 do
													local v4265 = (5417 - 3990) - (41 + 1386);
													while true do
														if (v4265 == (103 - (17 + 86))) then
															v925 = v925 + 1 + (0 - 0);
															v83[v4264] = v926[v925];
															break;
														end
													end
												end
												v77 = v77 + 1;
												v85 = v73[v77];
												v928 = v85[3 - 1];
												v83[v928] = v83[v928](v13(v83, v928 + (2 - 1), v78));
												v77 = v77 + 1;
												v85 = v73[v77];
												v83[v85[168 - (122 + 44)]] = v83[v85[5 - 2]];
												v77 = v77 + (3 - 2);
												v85 = v73[v77];
												v83[v85[2 + 0]] = v62[v85[1 + 2]];
												v77 = v77 + (1 - 0);
												v85 = v73[v77];
												if (v83[v85[67 - (30 + 35)]] or (1911 >= 2821)) then
													v77 = v77 + 1 + 0;
												else
													v77 = v85[1260 - (1043 + 214)];
												end
											end
										elseif (v86 <= (11 - (1699 - (219 + 1472)))) then
											v83[v85[1 + 1]] = {};
										elseif ((2082 <= 3592) and (v86 == ((795 + 421) - (323 + 889)))) then
											local v943;
											local v944;
											v83[v85[2]] = v85[3];
											v77 = v77 + 1;
											v85 = v73[v77];
											v944 = v85[5 - 3];
											v83[v944](v83[v944 + 1]);
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2]] = v62[v85[3]];
											v77 = v77 + ((969 - (162 + 226)) - (361 + 219));
											v85 = v73[v77];
											v944 = v85[(569 - 247) - (53 + 267)];
											v943 = v83[v85[1 + 0 + 2]];
											v83[v944 + ((970 - 556) - (15 + 398))] = v943;
											v83[v944] = v943[v85[4]];
											v77 = v77 + ((1873 - (224 + 666)) - (18 + 964));
											v85 = v73[v77];
											v944 = v85[7 - 5];
											v83[v944](v83[v944 + (1681 - (345 + 1335)) + 0]);
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v77 = v85[853 - (20 + 830)];
										else
											local v957 = 0 + 0 + 0;
											local v958;
											local v959;
											while true do
												if (v957 == ((345 - 217) - ((434 - 318) + 10))) then
													v959 = v85[1 + 1 + 0];
													v83[v959](v83[v959 + (739 - (542 + 196))]);
													v77 = v77 + 1;
													v85 = v73[v77];
													v957 = 3;
												end
												if ((v957 == 1) or (4923 < 54)) then
													v85 = v73[v77];
													v83[v85[3 - 1]] = v62[v85[1 + 2]];
													v77 = v77 + 1 + 0;
													v85 = v73[v77];
													v957 = 2;
												end
												if (v957 == (2 + 3)) then
													v85 = v73[v77];
													v959 = v85[2];
													v83[v959](v83[v959 + 1]);
													v77 = v77 + (2 - 1);
													v957 = 15 - 9;
												end
												if ((35 <= 2099) and (v957 == (1557 - (1126 + 425)))) then
													v85 = v73[v77];
													v77 = v85[408 - (118 + 287)];
													break;
												end
												if (v957 == 0) then
													v958 = nil;
													v959 = nil;
													v83[v85[7 - 5]] = v83[v85[1124 - (118 + 1003)]][v85[11 - 7]];
													v77 = v77 + (378 - (142 + 235));
													v957 = 4 - 3;
												end
												if (v957 == (1 + 3)) then
													v958 = v83[v85[980 - (553 + 424)]];
													v83[v959 + (1 - 0)] = v958;
													v83[v959] = v958[v85[(369 - (18 + 347)) + 0]];
													v77 = v77 + 1;
													v957 = 5 + (972 - (556 + 416));
												end
												if (v957 == (2 + 1)) then
													v83[v85[1 + 1]] = v62[v85[1702 - (797 + 902)]];
													v77 = v77 + 1 + 0;
													v85 = v73[v77];
													v959 = v85[2];
													v957 = 8 - 4;
												end
											end
										end
									elseif (v86 <= (22 - 14)) then
										if (v86 <= (13 - 7)) then
											v83[v85[1 + 1]] = v83[v85[14 - (1 + 10)]] - v85[757 - (239 + 514)];
										elseif ((57 == 57) and (v86 == 7)) then
											local v960 = 0 + 0;
											local v961;
											local v962;
											while true do
												if ((4622 >= 2571) and ((1334 - (797 + 532)) == v960)) then
													v83[v962] = v961[v85[3 + 1]];
													v77 = v77 + (4 - 3);
													v85 = v73[v77];
													v960 = 3 + 3;
												end
												if ((13 - 7) == v960) then
													v962 = v85[1204 - (373 + 829)];
													v83[v962](v83[v962 + 1]);
													v77 = v77 + (732 - (476 + 255));
													v960 = 7;
												end
												if (v960 == (1130 - ((1293 - 924) + 761))) then
													v961 = nil;
													v962 = nil;
													v83[v85[2]] = v83[v85[2 + (1073 - (632 + 440))]][v85[4]];
													v960 = 1;
												end
												if ((v960 == 3) or (463 < 137)) then
													v83[v962](v83[v962 + (1 - 0)]);
													v77 = v77 + (1 - 0);
													v85 = v73[v77];
													v960 = 7 - 3;
												end
												if (v960 == 2) then
													v77 = v77 + (239 - (64 + (1383 - (705 + 504))));
													v85 = v73[v77];
													v962 = v85[1 + 1];
													v960 = 3 - (0 - 0);
												end
												if ((1657 > 904) and ((343 - (144 + 192)) == v960)) then
													v85 = v73[v77];
													v77 = v85[219 - (42 + 174)];
													break;
												end
												if (v960 == (1 + 0)) then
													v77 = v77 + 1;
													v85 = v73[v77];
													v83[v85[2 + (0 - 0)]] = v85[2 + 1];
													v960 = 2;
												end
												if (((1508 - (363 + (3058 - (1300 + 617)))) == v960) or (1561 >= 2957)) then
													v962 = v85[1582 - (1183 + 397)];
													v961 = v83[v85[8 - 5]];
													v83[v962 + 1 + 0] = v961;
													v960 = 4 + 1;
												end
											end
										else
											local v963;
											v83[v85[1977 - (1913 + 62)]] = v83[v85[2 + 1]];
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[1935 - (565 + 1368)]] = v85[3];
											v77 = v77 + (3 - 2);
											v85 = v73[v77];
											v963 = v85[2];
											v83[v963](v83[v963 + (1662 - ((6598 - 5121) + 184))]);
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											v83[v85[2 + 0]] = v63[v85[859 - (564 + (2214 - (36 + 1886)))]];
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[8 - 5]][v85[308 - (244 + (225 - 165))]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[478 - (41 + 435)]] = v85[1004 - (938 + 63)];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v963 = v85[1127 - (936 + 189)];
											v83[v963](v83[v963 + (617 - (305 + 311)) + 0]);
											v77 = v77 + (1614 - (1565 + 48));
											v85 = v73[v77];
											v83[v85[2 + 0]] = v83[v85[3]][v85[1142 - (398 + 384 + 356)]];
											v77 = v77 + (268 - (176 + 91));
											v85 = v73[v77];
											v83[v85[2]] = v85[(1462 - (1093 + 362)) - 4] ~= (0 - 0);
											v77 = v77 + (1099 - (734 + 364));
											v85 = v73[v77];
											v83[v85[1094 - (975 + 117)]][v85[1878 - (157 + 1718)]] = v83[v85[1012 - (374 + 634)]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[1 + 1 + 0]] = v63[v85[10 - 7]];
											v77 = v77 + (3 - 2);
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[(2138 - (331 + 786)) - (697 + 321)]][v85[4]];
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[3 - 1]]();
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[3]][v85[4]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[3 - 1]] = v85[7 - 4] ~= 0;
											v77 = v77 + (1228 - (322 + 905));
											v85 = v73[v77];
											v83[v85[1098 - (759 + 337)]][v85[614 - (602 + 9)]] = v83[v85[1193 - (449 + 740)]];
											v77 = v77 + (873 - (826 + 46));
											v85 = v73[v77];
											v83[v85[949 - (245 + 702)]] = v63[v85[(24 - 15) - 6]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[1900 - (260 + 1638)]] = v83[v85[443 - (382 + 58)]][v85[4]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[6 - 4]] = v85[3];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v963 = v85[3 - 1];
											v83[v963](v83[v963 + (2 - 1)]);
											v77 = v77 + (1206 - (902 + 303));
											v85 = v73[v77];
											v83[v85[3 - 1]] = v83[v85[(570 - (255 + 309)) - 3]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[1692 - (1121 + 569)]] = v85[(710 - (484 + 9)) - (22 + 192)];
											v77 = v77 + (684 - (483 + 200));
											v85 = v73[v77];
											v963 = v85[1465 - (1404 + 59)];
											v83[v963](v83[v963 + (2 - 1)]);
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2 - 0]] = v63[v85[768 - (468 + 297)]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[564 - (334 + 228)]] = v83[v85[10 - (7 + 0)]][v85[8 - 4]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[(2 - 0) - 0]] = v85[1 + 2];
											v77 = v77 + (237 - (141 + 95));
											v85 = v73[v77];
											v963 = v85[2 + 0];
											v83[v963](v83[v963 + (2 - 1)]);
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[3]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[5 - 3]] = v85[3 + 0];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v963 = v85[2];
											v83[v963](v83[v963 + (1 - 0)]);
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[165 - (92 + 71)]] = v63[v85[2 + 1]];
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											v83[v85[767 - (574 + 191)]] = v83[v85[3 + 0]][v85[9 - 5]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[851 - (254 + 595)]] = v85[129 - (55 + 71)];
											v77 = v77 + (1 - (0 + 0));
											v85 = v73[v77];
											v963 = v85[(3117 - 1325) - (573 + 1217)];
											v83[v963](v83[v963 + ((1452 - (341 + 1109)) - 1)]);
											v77 = v77 + 1 + 0 + 0 + 0;
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[3]];
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											v83[v85[941 - (714 + 225)]] = v85[8 - 5];
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											v963 = v85[1 + 1];
											v83[v963](v83[v963 + (1 - 0)]);
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[808 - (118 + 688)]] = v63[v85[51 - (25 + 23)]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[3]][v85[1 + 3]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[1888 - (927 + 959)]] = v85[(669 - (483 + 176)) - 7];
											v77 = v77 + (733 - (16 + 716));
											v85 = v73[v77];
											v963 = v85[3 - 1];
											v83[v963](v83[v963 + (98 - (5 + 6 + 65 + 21))]);
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[4 - 2]] = v63[v85[288 - ((1455 - (47 + 1233)) + 77 + 33)]];
											v77 = v77 + (2 - (615 - (421 + 193)));
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[14 - 11]][v85[1800 - (503 + 1293)]];
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[2 + (0 - 0)]] = v85[1064 - (810 + 251)];
											v77 = v77 + 1;
											v85 = v73[v77];
											v963 = v85[2 + 0];
											v83[v963] = v83[v963](v83[v963 + 1 + (0 - 0)]);
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[536 - (37 + 6 + 490)]];
											v77 = v77 + (734 - (711 + 22));
											v85 = v73[v77];
											v83[v85[7 - 5]] = v63[v85[862 - (240 + 619)]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[1 + 1]] = v83[v85[4 - 1]][v85[4]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[1746 - ((5796 - 4452) + 400)]][v85[408 - (255 + 150)]] = v83[v85[4 + 0]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[2]] = v85[3] ~= ((0 + 0) - 0);
											v77 = v77 + (3 - 2);
											v85 = v73[v77];
											v83[v85[1741 - (404 + 1335)]][v85[409 - (183 + 223)]] = v83[v85[4 - 0]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2 + 0]][v85[2 + 1]] = v85[4 + 0];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[340 - (10 + 321 + 6)]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[(64 + 276) - (118 + 220)]] = v85[1 + 2];
											v77 = v77 + (450 - (108 + 341));
											v85 = v73[v77];
											v963 = v85[4 - 2];
											v83[v963](v83[v963 + 1 + 0]);
											v77 = v77 + (4 - 3);
											v85 = v73[v77];
											v83[v85[1495 - (711 + 782)]] = v63[v85[5 - 2]];
											v77 = v77 + (470 - ((2114 - (463 + 1381)) + 199));
											v85 = v73[v77];
											v83[v85[1 + 1]] = v83[v85[1822 - (580 + 1239)]][v85[11 - 7]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[1 + 1]] = v85[2 + 1];
											v77 = v77 + ((2 + 0) - (1 + 0));
											v85 = v73[v77];
											v963 = v85[2 + 0 + 0];
											v83[v963](v83[v963 + 1]);
											v77 = v77 + (1168 - ((1351 - 706) + 522));
											v85 = v73[v77];
											v83[v85[1792 - ((1714 - 704) + 780)]] = v63[v85[3 + 0]];
											v77 = v77 + (4 - 3);
											v85 = v73[v77];
											v83[v85[5 - 3]] = v85[1839 - (1045 + 791)];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2]][v83[v85[3]]] = v85[9 - 5];
											v77 = v77 + ((1162 - (696 + 465)) - 0);
											v85 = v73[v77];
											v83[v85[507 - (351 + 154)]] = v63[v85[1577 - ((1841 - (14 + 546)) + 293)]];
											v77 = v77 + (267 - (28 + 238));
											v85 = v73[v77];
											v83[v85[2]] = v63[v85[3]];
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[2]] = v85[1562 - (1381 + 178)];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[2 + 0]] = v83[v85[2 + 1]][v83[v85[13 - 9]]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[472 - (381 + 89)]] = v63[v85[1 + 2 + 0]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2 + 0]] = v85[4 - 1];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[1158 - (1074 + 82)]] = v83[v85[6 - 3]][v83[v85[1788 - (214 + 1570)]]];
											v77 = v77 + (1456 - (990 + 465));
											v85 = v73[v77];
											v83[v85[2]] = v63[v85[2 + 1]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2]] = v85[2 + (1441 - (413 + 1027))];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2 + 0]] = v83[v85[11 - 8]][v83[v85[4]]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[1818 - (1382 + 434)]] = v63[v85[(4976 - 3247) - (1668 + 58)]];
											v77 = v77 + (627 - (512 + 114));
											v85 = v73[v77];
											v83[v85[2]] = v85[7 - (1528 - (86 + 1438))];
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											v83[v85[6 - 4]] = v83[v85[2 + 1]][v83[v85[1 + 3]]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[723 - (692 + 29)]] = v63[v85[3]];
											v77 = v77 + (3 - 2);
											v85 = v73[v77];
											v83[v85[2]] = v85[1997 - (109 + 347 + 1538)];
											v77 = v77 + (1470 - (1269 + 200));
											v85 = v73[v77];
											v83[v85[(9 - 6) - 1]] = v83[v85[818 - (98 + 717)]][v83[v85[4]]];
											v77 = v77 + (827 - (802 + 24));
											v85 = v73[v77];
											v83[v85[2]] = v63[v85[5 - 2]];
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											v83[v85[1 + 1]] = v85[1 + 2 + 0];
										end
									elseif (v86 <= (2 + 8)) then
										if (v86 == (2 + 4 + 3)) then
											local v1073 = 0;
											local v1074;
											local v1075;
											while true do
												if (v1073 == ((3 + 13) - 10)) then
													v83[v85[6 - 4]][v85[3 + 0]] = v83[v85[2 + 2]];
													v77 = v77 + 1 + 0;
													v85 = v73[v77];
													v83[v85[2 + 0]] = v85[3 + 0];
													v77 = v77 + 1 + 0;
													v1073 = 7;
												end
												if ((1528 < 1737) and (v1073 == (1433 - (797 + 636)))) then
													v1074 = nil;
													v1075 = nil;
													v83[v85[2]] = v83[v85[14 - 11]][v85[4]];
													v77 = v77 + (1620 - (1427 + (637 - 445)));
													v85 = v73[v77];
													v1073 = 1 + (0 - 0);
												end
												if ((v1073 == (4 - 2)) or (972 < 873)) then
													v83[v1075 + 1 + 0] = v1074;
													v83[v1075] = v1074[v85[2 + 2]];
													v77 = v77 + (327 - (192 + 134));
													v85 = v73[v77];
													v83[v85[1278 - ((374 - (11 + 47)) + 960)]] = v83[v85[2 + 1]];
													v1073 = 3 + 0;
												end
												if (((3 + 0) == v1073) or (2026 < 290)) then
													v77 = v77 + 1;
													v85 = v73[v77];
													v1075 = v85[7 - 5];
													v83[v1075] = v83[v1075](v13(v83, v1075 + (552 - (83 + (912 - 444))), v85[1809 - (1202 + 604)]));
													v77 = v77 + ((4 + 0) - 3);
													v1073 = 6 - 2;
												end
												if ((1326 > 388) and (v1073 == (19 - 12))) then
													v85 = v73[v77];
													v77 = v85[(777 - (287 + 162)) - (45 + 280)];
													break;
												end
												if ((1 == 1) and ((1 + 0) == v1073)) then
													v83[v85[2 + 0 + 0]] = v83[v85[2 + 1]][v85[3 + 1]];
													v77 = v77 + 1;
													v85 = v73[v77];
													v1075 = v85[2];
													v1074 = v83[v85[3]];
													v1073 = 1 + 1;
												end
												if (v1073 == (6 - 2)) then
													v85 = v73[v77];
													v83[v85[1913 - (340 + 1571)]] = v83[v85[2 + 1]];
													v77 = v77 + (1773 - (1733 + (1668 - (10 + 1619))));
													v85 = v73[v77];
													v83[v85[5 - 3]] = v83[v85[1037 - (125 + 909)]][v85[1952 - (1096 + 852)]];
													v1073 = 5;
												end
												if (v1073 == 5) then
													v77 = v77 + 1 + 0;
													v85 = v73[v77];
													v83[v85[2 - 0]] = v83[v85[3 + 0]][v85[516 - (409 + 103)]];
													v77 = v77 + (237 - (46 + 190));
													v85 = v73[v77];
													v1073 = 101 - (39 + 12 + 44);
												end
											end
										else
											local v1076;
											v83[v85[2]] = v85[1 + 1 + 1];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[1319 - (1114 + 203)]] = v85[729 - (228 + 498)];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v1076 = v85[2 + 0 + 0];
											v83[v1076](v13(v83, v1076 + (664 - (174 + 489)), v85[7 - 4]));
											v77 = v77 + (1906 - (830 + 1075));
											v85 = v73[v77];
											v83[v85[2]] = v62[v85[(1797 - (403 + 867)) - (303 + 221)]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2]] = v85[1272 - (231 + (1390 - (310 + 42)))];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[1164 - (171 + 991)]] = v85[12 - 9];
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v1076 = v85[4 - (2 + 0)];
											v83[v1076](v13(v83, v1076 + 1 + 0, v85[10 - 7]));
											v77 = v77 + (2 - (1 + 0));
											v85 = v73[v77];
											v83[v85[2 - 0]] = v62[v85[3]];
											v77 = v77 + (3 - 2);
											v85 = v73[v77];
											v83[v85[1250 - (111 + 1137)]] = v85[3];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[160 - (91 + 67)]] = v85[8 - 5];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v1076 = v85[525 - (423 + 100)];
											v83[v1076](v13(v83, v1076 + (1446 - (1170 + 275)) + 0, v85[7 - 4]));
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2]] = v62[v85[2 + 1]];
											v77 = v77 + (772 - (326 + 445));
											v85 = v73[v77];
											v83[v85[(7 + 1) - 6]] = v85[6 - (10 - 7)];
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[2]] = v85[714 - (530 + 181)];
											v77 = v77 + (882 - (614 + 267));
											v85 = v73[v77];
											v1076 = v85[34 - (19 + 13)];
											v83[v1076](v13(v83, v1076 + 1, v85[4 - 1]));
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v77 = v85[3];
										end
									elseif (v86 > (31 - 20)) then
										local v1100;
										v83[v85[2]] = v85[(684 - (424 + 259)) + 2];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[3 - 1]] = v83[v85[1815 - (1293 + 519)]][v83[v85[4]]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[2]] = v85[7 - 4] ~= (0 - 0);
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[8 - 6]] = v85[6 - (11 - 8)];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v1100 = v85[1 + (1065 - (289 + 775))];
										v83[v1100] = v83[v1100](v13(v83, v1100 + (2 - 1), v85[3]));
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[(2 - 1) + 1]] = {};
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2]] = v85[3];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2 + 0]] = v85[1099 - (709 + 387)];
										v77 = v77 + (1859 - (673 + 1185));
										v85 = v73[v77];
										v83[v85[(11 - 6) - 3]][v83[v85[9 - 6]]] = v83[v85[6 - 2]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v1100 = v85[(7 - 5) + 0];
										v83[v1100] = v83[v1100](v13(v83, v1100 + (1 - (0 - 0)), v85[1 + 2]));
									else
										local v1117 = 0;
										while true do
											if (v1117 == (5 - 2)) then
												v83[v85[(10 - 7) - 1]] = v63[v85[1883 - (446 + 1434)]];
												v77 = v77 + ((5969 - 4685) - (1040 + 243));
												v85 = v73[v77];
												v1117 = 11 - 7;
											end
											if (v1117 == (1848 - (559 + 1288))) then
												v83[v85[1933 - (609 + 1322)]] = v63[v85[457 - (13 + 441)]];
												v77 = v77 + (3 - 2);
												v85 = v73[v77];
												v1117 = 5 - 3;
											end
											if (v1117 == (9 - 7)) then
												v83[v85[2]][v85[3]] = v85[1 + 3];
												v77 = v77 + (3 - 2);
												v85 = v73[v77];
												v1117 = 2 + 1;
											end
											if (v1117 == (2 + 2)) then
												v83[v85[5 - 3]] = v83[v85[2 + 1]][v85[4]];
												break;
											end
											if ((1808 <= 2657) and (v1117 == (0 - 0))) then
												v83[v85[2 + 0]][v85[2 + 1]] = v85[3 + 1];
												v77 = v77 + 1;
												v85 = v73[v77];
												v1117 = 1 + (1890 - (946 + 944));
											end
										end
									end
								elseif (v86 <= ((46 - 28) + (0 - 0))) then
									if ((v86 <= (448 - (153 + 280))) or (1592 < 1089)) then
										if (v86 <= 13) then
											v83[v85[5 - (2 + 1)]] = v29(v74[v85[3 + 0]], nil, v63);
										elseif (v86 > (6 + 8)) then
											local v1118 = 0 + 0;
											local v1119;
											local v1120;
											local v1121;
											local v1122;
											while true do
												if (v1118 == (2 + 0)) then
													v77 = v77 + 1;
													v85 = v73[v77];
													v83[v85[2 + 0]] = v83[v85[4 - 1]] + v85[4];
													v77 = v77 + 1 + 0;
													v85 = v73[v77];
													v1118 = 670 - (89 + 578);
												end
												if (v1118 == (0 + 0)) then
													v1119 = nil;
													v1120, v1121 = nil;
													v1122 = nil;
													v83[v85[3 - 1]] = v83[v85[1052 - (572 + 477)]][v83[v85[1 + 3]]];
													v77 = v77 + 1 + 0;
													v1118 = 1 + 0;
												end
												if (v1118 == (91 - (84 + 2))) then
													v1122 = v85[2 - 0];
													v83[v1122] = v83[v1122](v13(v83, v1122 + 1 + 0, v78));
													v77 = v77 + (843 - ((708 - 211) + 345));
													v85 = v73[v77];
													v83[v85[1 + 1]][v83[v85[3]]] = v83[v85[1 + 3]];
													v1118 = 1339 - (605 + 728);
												end
												if ((2687 <= 3266) and (v1118 == (5 + 1))) then
													v77 = v77 + (1 - 0);
													v85 = v73[v77];
													v77 = v85[1 + 2];
													break;
												end
												if (v1118 == (14 - 10)) then
													v78 = (v1121 + v1122) - (1 + 0);
													v1119 = (1443 - (949 + 494)) - 0;
													for v6658 = v1122, v78 do
														v1119 = v1119 + 1 + 0;
														v83[v6658] = v1120[v1119];
													end
													v77 = v77 + 1;
													v85 = v73[v77];
													v1118 = (1724 - (505 + 725)) - (457 + 32);
												end
												if ((v1118 == (1 + (0 - 0))) or (1958 == 500)) then
													v85 = v73[v77];
													v83[v85[1404 - (283 + 549 + (1080 - 510))]] = v62[v85[3 + 0]];
													v77 = v77 + 1 + 0;
													v85 = v73[v77];
													v83[v85[6 - (12 - 8)]] = v83[v85[(1953 - (1928 + 23)) + 1 + 0]];
													v1118 = 798 - (588 + 208);
												end
												if (v1118 == (8 - 5)) then
													v83[v85[1802 - (884 + 916)]] = v83[v85[6 - 3]][v85[4]];
													v77 = v77 + (4 - 3) + 0;
													v85 = v73[v77];
													v1122 = v85[655 - (232 + 421)];
													v1120, v1121 = v76(v83[v1122](v13(v83, v1122 + (1890 - (1569 + (414 - 94))), v85[1 + 2])));
													v1118 = 1 + 3;
												end
											end
										else
											local v1123;
											local v1124;
											local v1125;
											v83[v85[2]] = v83[v85[9 - 6]];
											v77 = v77 + (606 - (316 + 289));
											v85 = v73[v77];
											v83[v85[2]] = {};
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[1 + 1]] = v83[v85[1456 - (666 + 787)]];
											v77 = v77 + (426 - (360 + 65));
											v85 = v73[v77];
											v83[v85[2 + (0 - 0)]] = {};
											v77 = v77 + (255 - (79 + 175));
											v85 = v73[v77];
											v83[v85[2 - (0 - 0)]] = v83[v85[3 + 0]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2]] = {};
											v77 = v77 + (2 - (1 + 0));
											v85 = v73[v77];
											v83[v85[3 - 1]] = v83[v85[3]];
											v77 = v77 + (900 - (503 + 396));
											v85 = v73[v77];
											v83[v85[238 - (40 + 196)]] = v83[v85[184 - (92 + 89)]];
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											for v4266 = v85[2 + 0], v85[2 + 1] do
												v83[v4266] = nil;
											end
											v77 = v77 + (3 - 2);
											v85 = v73[v77];
											v83[v85[(1018 - (845 + 172)) + (1282 - (423 + 858))]] = v83[v85[6 - 3]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v1125 = v85[1 + 1];
											v1124 = v83[v1125];
											v1123 = v85[(1710 - (1520 + 182)) - 5];
											for v4268 = 1 + 0, v1123 do
												v1124[v4268] = v83[v1125 + v4268];
											end
										end
									elseif ((1984 > 208) and (v86 <= 16)) then
										v83[v85[2 - 0]] = v62[v85[3]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1246 - ((1951 - (196 + 1270)) + 759)]] = v83[v85[6 - 3]][v85[4]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1191 - (442 + (2553 - (763 + 1043)))]] = v83[v85[(5036 - 3898) - (832 + 303)]][v85[4]];
										v77 = v77 + (947 - (88 + 858));
										v85 = v73[v77];
										v83[v85[1 + 1]] = v83[v85[3 + 0]][v85[1 + (1278 - (1144 + 131))]];
										v77 = v77 + (790 - (766 + 23));
										v85 = v73[v77];
										if ((1162 <= 3968) and (v83[v85[9 - 7]] == v85[5 - 1])) then
											v77 = v77 + (2 - 1);
										else
											v77 = v85[10 - 7];
										end
									elseif (v86 > (1090 - (1036 + 37))) then
										v83[v85[2 + (0 - 0)]] = v62[v85[5 - 2]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1482 - ((1170 - (458 + 71)) + 839)]][v85[3]] = v83[v85[4]];
										v77 = v77 + (914 - (910 + 3));
										v85 = v73[v77];
										v83[v85[4 - 2]] = v62[v85[1687 - (1466 + 218)]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1 + 1]][v85[1151 - (556 + 592)]] = v85[2 + 2];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[810 - (329 + 479)]] = v85[3];
										v77 = v77 + 1;
										v85 = v73[v77];
										v77 = v85[3];
									else
										local v1155;
										v83[v85[856 - (174 + 680)]] = v83[v85[10 - 7]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[2 + 0]] = v85[742 - (396 + 343)];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1479 - (29 + 1448)]] = v85[1392 - (135 + 1254)];
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v1155 = v85[9 - 7];
										v83[v1155] = v83[v1155](v13(v83, v1155 + 1 + 0, v85[1530 - (389 + 1138)]));
										v77 = v77 + (575 - (102 + 472));
										v85 = v73[v77];
										if (v83[v85[2 + 0]] == v85[3 + 1]) then
											v77 = v77 + 1 + 0;
										else
											v77 = v85[1548 - (320 + 1225)];
										end
									end
								elseif (v86 <= (37 - 16)) then
									if ((v86 <= (12 + 7)) or (3008 >= 4793)) then
										local v148 = 1464 - (157 + 1307);
										while true do
											if (v148 == 3) then
												v83[v85[1861 - (821 + 1038)]] = v63[v85[7 - 4]];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v148 = 6 - 2;
											end
											if (v148 == (0 + 0)) then
												v83[v85[4 - 2]][v85[1029 - (834 + 192)]] = v85[4];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v148 = 1 + 0;
											end
											if (v148 == 4) then
												v83[v85[1 + 1]] = v83[v85[4 - 1]][v85[308 - (300 + 4)]];
												break;
											end
											if ((v148 == (1 + 0)) or (4163 == 848)) then
												v83[v85[5 - 3]] = v63[v85[365 - (112 + 250)]];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v148 = 4 - 2;
											end
											if ((3929 == 3929) and (v148 == (2 + 0))) then
												v83[v85[2]][v85[2 + 1]] = v85[4];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v148 = 2 + 1;
											end
										end
									elseif ((2700 < 3812) and (v86 > (15 + 5))) then
										local v1165;
										local v1166;
										v83[v85[1416 - (1001 + 413)]] = v83[v85[3]][v85[8 - 4]];
										v77 = v77 + (883 - (244 + 638));
										v85 = v73[v77];
										v83[v85[695 - (627 + 66)]] = v83[v85[8 - 5]][v85[606 - (512 + 90)]];
										v77 = v77 + (1907 - (1665 + 241));
										v85 = v73[v77];
										v1166 = v85[719 - (373 + 344)];
										v1165 = v83[v85[2 + 1]];
										v83[v1166 + 1 + 0] = v1165;
										v83[v1166] = v1165[v85[4]];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v1166 = v85[2 - 0];
										v83[v1166] = v83[v1166](v83[v1166 + (1100 - (35 + 1064))]);
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[4 - 2]] = v83[v85[1 + 2]];
										v77 = v77 + (1237 - (298 + 938));
										v85 = v73[v77];
										v83[v85[2]][v85[3]] = v83[v85[4]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2]] = v85[1262 - (233 + 1026)];
										v77 = v77 + (1667 - (636 + 1030));
										v85 = v73[v77];
										v77 = v85[3];
									else
										v83[v85[2 + 0]] = v62[v85[3 + 0]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v83[v85[224 - (55 + 166)]][v85[1 + 3]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[7 - 5]] = v83[v85[3]][v85[301 - (36 + 261)]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[1371 - (34 + 1334)]][v85[2 + 2]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										if (v83[v85[1285 - (1035 + 248)]] == v85[25 - (20 + 1)]) then
											v77 = v77 + 1;
										else
											v77 = v85[2 + 1];
										end
									end
								elseif ((v86 <= (342 - (134 + 185))) or (4753 < 1262)) then
									if (v86 > (1155 - (549 + 584))) then
										local v1194 = 685 - (314 + 371);
										local v1195;
										local v1196;
										while true do
											if ((30 - 21) == v1194) then
												v77 = v77 + (969 - (478 + 490));
												v85 = v73[v77];
												if not v83[v85[2 + 0]] then
													v77 = v77 + (1173 - (786 + 386));
												else
													v77 = v85[9 - 6];
												end
												break;
											end
											if ((4 == v1194) or (1572 > 1606)) then
												v77 = v77 + (1380 - (1055 + 324));
												v85 = v73[v77];
												v83[v85[1342 - (1093 + 247)]] = v85[3 + 0];
												v77 = v77 + 1 + 0;
												v1194 = 5;
											end
											if (v1194 == (7 - 5)) then
												v85 = v73[v77];
												v83[v85[2]][v85[9 - 6]] = v83[v85[10 - 6]];
												v77 = v77 + (2 - 1);
												v85 = v73[v77];
												v1194 = 3;
											end
											if (7 == v1194) then
												v83[v1196] = v1195[v85[2 + 2]];
												v77 = v77 + (3 - 2);
												v85 = v73[v77];
												v83[v85[6 - 4]] = v85[3 + 0];
												v1194 = 20 - 12;
											end
											if (v1194 == (688 - (364 + 324))) then
												v1195 = nil;
												v1196 = nil;
												v83[v85[5 - 3]] = v85[3];
												v77 = v77 + (2 - 1);
												v1194 = 1 + 0;
											end
											if (5 == v1194) then
												v85 = v73[v77];
												v1196 = v85[2];
												v83[v1196] = v83[v1196](v13(v83, v1196 + (4 - 3), v85[4 - 1]));
												v77 = v77 + 1;
												v1194 = 18 - 12;
											end
											if (v1194 == 6) then
												v85 = v73[v77];
												v1196 = v85[1270 - (1249 + 19)];
												v1195 = v83[v85[3 + 0]];
												v83[v1196 + (3 - 2)] = v1195;
												v1194 = 7;
											end
											if (v1194 == (1087 - (686 + 400))) then
												v85 = v73[v77];
												v1196 = v85[2 + 0];
												v83[v1196] = v83[v1196](v13(v83, v1196 + (230 - (73 + 156)), v85[1 + 2]));
												v77 = v77 + (812 - (721 + 90));
												v1194 = 1 + 1;
											end
											if (v1194 == (9 - 6)) then
												v1196 = v85[472 - (224 + 246)];
												v1195 = v83[v85[4 - 1]];
												v83[v1196 + (1 - 0)] = v1195;
												v83[v1196] = v1195[v85[4]];
												v1194 = 4;
											end
											if ((2120 == 2120) and (v1194 == 8)) then
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v1196 = v85[1 + 1];
												v83[v1196] = v83[v1196](v13(v83, v1196 + 1 + 0, v85[5 - 2]));
												v1194 = 29 - 20;
											end
										end
									else
										local v1197 = 0;
										local v1198;
										local v1199;
										local v1200;
										local v1201;
										local v1202;
										while true do
											if (v1197 == 5) then
												do
													return v13(v83, v1202, v78);
												end
												v77 = v77 + (514 - (203 + 310));
												v85 = v73[v77];
												do
													return;
												end
												break;
											end
											if ((3917 >= 2972) and ((1994 - (1238 + 755)) == v1197)) then
												v83[v85[1 + 1]] = v85[1537 - (709 + 825)];
												v77 = v77 + 1;
												v85 = v73[v77];
												v1202 = v85[3 - 1];
												v1197 = 2;
											end
											if (v1197 == 4) then
												for v6661 = v1202, v78 do
													v1198 = v1198 + (1 - 0);
													v83[v6661] = v1199[v1198];
												end
												v77 = v77 + (865 - (196 + 668));
												v85 = v73[v77];
												v1202 = v85[7 - 5];
												v1197 = 10 - 5;
											end
											if (v1197 == (835 - (171 + 662))) then
												v78 = (v1202 + v84) - (94 - (4 + 89));
												for v6664 = v1202, v78 do
													v1201 = v79[v6664 - v1202];
													v83[v6664] = v1201;
												end
												v77 = v77 + (3 - 2);
												v85 = v73[v77];
												v1197 = 2 + 1;
											end
											if (v1197 == (13 - 10)) then
												v1202 = v85[1 + 1];
												v1199, v1200 = v76(v83[v1202](v13(v83, v1202 + 1, v78)));
												v78 = (v1200 + v1202) - (1487 - (35 + 1451));
												v1198 = 0;
												v1197 = 1457 - (28 + 1425);
											end
											if ((1938 > 1742) and (v1197 == 0)) then
												v1198 = nil;
												v1199, v1200 = nil;
												v1201 = nil;
												v1202 = nil;
												v1197 = 1994 - (941 + 1052);
											end
										end
									end
								elseif (v86 > (24 + 0)) then
									local v1203;
									local v1204;
									v83[v85[2]] = v83[v85[1517 - (822 + 692)]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[1 + 1]] = v85[300 - (45 + 252)];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[3]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v1204 = v85[435 - (114 + 319)];
									v83[v1204] = v83[v1204]();
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v1204 = v85[2 - 0];
									v78 = (v1204 + v84) - 1;
									for v4285 = v1204, v78 do
										v1203 = v79[v4285 - v1204];
										v83[v4285] = v1203;
									end
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v1204 = v85[2 - 0];
									v83[v1204](v13(v83, v1204 + 1, v78));
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[1965 - (556 + 1407)]] = v83[v85[3]];
									v77 = v77 + (1207 - (741 + 465));
									v85 = v73[v77];
									v83[v85[467 - (170 + 295)]] = v85[2 + 1];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v1204 = v85[4 - 2];
									v83[v1204](v83[v1204 + 1 + 0]);
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v63[v85[1233 - (957 + 273)]];
								else
									local v1220 = 0 + 0;
									local v1221;
									while true do
										if ((2 + 2) == v1220) then
											v1221 = v85[7 - 5];
											v83[v1221] = v83[v1221](v13(v83, v1221 + 1, v85[7 - 4]));
											v77 = v77 + 1;
											v85 = v73[v77];
											v1220 = 15 - 10;
										end
										if ((926 <= 4080) and (v1220 == (9 - 7))) then
											v77 = v77 + (1781 - (389 + 1391));
											v85 = v73[v77];
											v83[v85[2 + 0]] = v85[3];
											v77 = v77 + 1;
											v1220 = 1 + 2;
										end
										if (v1220 == 3) then
											v85 = v73[v77];
											v83[v85[4 - 2]] = v85[954 - (783 + 168)];
											v77 = v77 + (3 - 2);
											v85 = v73[v77];
											v1220 = 4 + 0;
										end
										if ((v1220 == 1) or (1746 == 2784)) then
											v83[v85[313 - (309 + 2)]] = v83[v85[9 - 6]][v85[1216 - (1090 + 122)]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[2]] = v85[9 - 6];
											v1220 = 2;
										end
										if ((3731 <= 3817) and (v1220 == (0 + 0))) then
											v1221 = nil;
											v83[v85[1120 - (628 + 490)]] = v63[v85[3]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v1220 = 2 - 1;
										end
										if (((22 - 17) == v1220) or (2156 > 2816)) then
											v83[v85[776 - (431 + 343)]][v85[3]] = v83[v85[7 - 3]];
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v77 = v85[3 + 0];
											break;
										end
									end
								end
							elseif (v86 <= 38) then
								if ((1703 >= 441) and (v86 <= (4 + 27))) then
									if (v86 <= (1723 - (556 + 1139))) then
										if (v86 <= 26) then
											local v149;
											v83[v85[17 - (6 + 9)]] = v83[v85[3]][v85[1 + 3]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2 + 0]] = v85[172 - (28 + 141)];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v149 = v85[2 - 0];
											v83[v149] = v83[v149](v83[v149 + 1 + 0]);
											v77 = v77 + (1318 - (486 + 831));
											v85 = v73[v77];
											v83[v85[5 - 3]] = v83[v85[10 - 7]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[2]][v85[3]] = v85[12 - 8];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2]] = v85[1266 - (668 + 595)];
										elseif (v86 == 27) then
											local v1222 = 0 + 0;
											while true do
												if (v1222 == (1 + 0)) then
													v62[v85[8 - 5]] = v83[v85[292 - (23 + 267)]];
													v77 = v77 + (1945 - (1129 + 815));
													v85 = v73[v77];
													v1222 = 389 - (371 + 16);
												end
												if ((v1222 == (1752 - (1326 + 424))) or (1195 == 3137)) then
													v83[v85[3 - 1]] = v62[v85[10 - 7]];
													v77 = v77 + (119 - (88 + 30));
													v85 = v73[v77];
													v1222 = 774 - (720 + 51);
												end
												if ((3773 >= 2439) and ((11 - 6) == v1222)) then
													v77 = v85[1779 - (421 + 1355)];
													break;
												end
												if (v1222 == (6 - 2)) then
													v83[v85[1 + 1]] = v85[1086 - (286 + 797)];
													v77 = v77 + 1;
													v85 = v73[v77];
													v1222 = 18 - 13;
												end
												if (v1222 == (0 - 0)) then
													v83[v85[441 - (397 + 42)]] = v83[v85[1 + 2]] + v85[804 - (24 + 776)];
													v77 = v77 + 1;
													v85 = v73[v77];
													v1222 = 1 - 0;
												end
												if (v1222 == (788 - (222 + 563))) then
													v83[v85[3 - 1]] = v83[v85[3]][v83[v85[3 + 1]]];
													v77 = v77 + (191 - (23 + 167));
													v85 = v73[v77];
													v1222 = 1802 - (690 + 1108);
												end
											end
										else
											v83[v85[1 + 1]] = v85[3 + 0];
											v77 = v77 + (849 - (40 + 808));
											v85 = v73[v77];
											v83[v85[1 + 1]][v85[11 - 8]] = v83[v85[4 + 0]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[2 + 0]] = v63[v85[574 - (47 + 524)]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[5 - 3]] = v85[4 - 1];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[4 - 2]][v85[1729 - (1165 + 561)]] = v83[v85[1 + 3]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[6 - 4]] = v63[v85[2 + 1]];
											v77 = v77 + (480 - (341 + 138));
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[3]][v85[2 + 2]];
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[329 - (89 + 237)]][v85[12 - 8]];
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											v83[v85[883 - (581 + 300)]] = v85[1223 - (855 + 365)];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[4 - 2]] = v83[v85[1 + 2]][v83[v85[1239 - (1030 + 205)]]];
										end
									elseif (v86 <= (28 + 1)) then
										local v163;
										v83[v85[2 + 0]] = v83[v85[3]][v85[290 - (156 + 130)]];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v83[v85[2 - 0]] = v85[3];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[1 + 1]] = v63[v85[2 + 1]];
										v77 = v77 + (70 - (10 + 59));
										v85 = v73[v77];
										v83[v85[1 + 1]] = v83[v85[14 - 11]][v85[4]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1165 - (671 + 492)]] = v83[v85[3 + 0]][v85[1219 - (369 + 846)]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2 + 0]] = v83[v85[1948 - (1036 + 909)]][v85[4 + 0]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v163 = v85[205 - (11 + 192)];
										v83[v163] = v83[v163](v13(v83, v163 + 1 + 0, v85[178 - (135 + 40)]));
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v63[v85[2 + 1]] = v83[v85[4 - 2]];
									elseif (v86 > (44 - 14)) then
										v83[v85[178 - (50 + 126)]] = v63[v85[8 - 5]];
									else
										local v1245;
										v83[v85[2]] = v85[1 + 2];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1415 - (1233 + 180)]] = v83[v85[972 - (522 + 447)]][v83[v85[1425 - (107 + 1314)]]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[5 - 3]] = v85[3];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2]] = v63[v85[2 + 1]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[3 - 1]] = v83[v85[11 - 8]][v85[1914 - (716 + 1194)]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v85[506 - (74 + 429)];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[3 - 1]] = v85[3];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[4 - 2]] = v85[3 + 0];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v1245 = v85[4 - 2];
										v83[v1245] = v83[v1245](v13(v83, v1245 + 1, v85[436 - (279 + 154)]));
										v77 = v77 + (779 - (454 + 324));
										v85 = v73[v77];
										v83[v85[2]][v83[v85[3]]] = v83[v85[4 + 0]];
									end
								elseif ((4915 >= 4181) and (v86 <= (51 - (12 + 5)))) then
									if ((v86 <= (18 + 14)) or (1848 >= 2263)) then
										v83[v85[4 - 2]] = v83[v85[2 + 1]][v85[1097 - (277 + 816)]];
										v77 = v77 + (4 - 3);
										v85 = v73[v77];
										v83[v85[1185 - (1058 + 125)]] = v83[v85[1 + 2]][v85[4]];
										v77 = v77 + (976 - (815 + 160));
										v85 = v73[v77];
										v83[v85[8 - 6]] = v83[v85[7 - 4]][v85[1 + 3]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[5 - 3]] = v83[v85[1901 - (41 + 1857)]][v85[1897 - (1222 + 671)]];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v63[v85[3]] = v83[v85[2 - 0]];
										v77 = v77 + (1183 - (229 + 953));
										v85 = v73[v77];
										v77 = v85[1777 - (1111 + 663)];
									elseif ((v86 == (1612 - (874 + 705))) or (3992 > 4920)) then
										v83[v85[2]][v85[3]] = v85[1 + 3];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2]] = v63[v85[6 - 3]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2]][v85[3]] = v85[683 - (642 + 37)];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v63[v85[3]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[7 - 4]][v85[458 - (233 + 221)]];
									else
										local v1273;
										v83[v85[2]] = v83[v85[3]][v85[4]];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v83[v85[2]] = v85[3 + 0];
										v77 = v77 + (1542 - (718 + 823));
										v85 = v73[v77];
										v83[v85[2 + 0]] = v63[v85[808 - (266 + 539)]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[5 - 3]] = v83[v85[1228 - (636 + 589)]][v85[9 - 5]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[3]][v85[4 + 0]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1017 - (657 + 358)]] = v83[v85[7 - 4]][v85[8 - 4]];
										v77 = v77 + (1188 - (1151 + 36));
										v85 = v73[v77];
										v1273 = v85[2 + 0];
										v83[v1273] = v83[v1273](v13(v83, v1273 + 1 + 0, v85[8 - 5]));
										v77 = v77 + 1;
										v85 = v73[v77];
										v63[v85[1835 - (1552 + 280)]] = v83[v85[836 - (64 + 770)]];
									end
								elseif (v86 <= (25 + 11)) then
									if (v86 == 35) then
										local v1289 = 0 - 0;
										while true do
											if (v1289 == 3) then
												v83[v85[2]] = v83[v85[3]][v85[4]];
												break;
											end
											if ((v1289 == (1 + 1)) or (4075 == 2168)) then
												v85 = v73[v77];
												v83[v85[1245 - (157 + 1086)]] = v63[v85[5 - 2]];
												v77 = v77 + (4 - 3);
												v85 = v73[v77];
												v1289 = 3 - 0;
											end
											if ((v1289 == (0 - 0)) or (248 >= 1723)) then
												v83[v85[821 - (599 + 220)]][v85[3]] = v85[7 - 3];
												v77 = v77 + (1932 - (1813 + 118));
												v85 = v73[v77];
												v83[v85[2 + 0]] = v63[v85[1220 - (841 + 376)]];
												v1289 = 1 - 0;
											end
											if (v1289 == 1) then
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v83[v85[2]][v85[3]] = v85[4];
												v77 = v77 + (2 - 1);
												v1289 = 2;
											end
										end
									else
										local v1290 = v85[861 - (464 + 395)];
										local v1291 = {};
										for v4288 = 1, #v82 do
											local v4289 = 0;
											local v4290;
											while true do
												if (v4289 == 0) then
													v4290 = v82[v4288];
													for v6748 = 0 - 0, #v4290 do
														local v6749 = v4290[v6748];
														local v6750 = v6749[1 + 0];
														local v6751 = v6749[839 - (467 + 370)];
														if ((v6750 == v83) and (v6751 >= v1290)) then
															v1291[v6751] = v6750[v6751];
															v6749[1 - 0] = v1291;
														end
													end
													break;
												end
											end
										end
									end
								elseif ((v86 == (28 + 9)) or (4073 <= 3795)) then
									local v1292 = 0 - 0;
									local v1293;
									local v1294;
									local v1295;
									while true do
										if (v1292 == 2) then
											v85 = v73[v77];
											v83[v85[2]] = {};
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v1292 = 6 - 3;
										end
										if ((523 - (150 + 370)) == v1292) then
											v1295 = v85[1284 - (74 + 1208)];
											v78 = (v1295 + v84) - (2 - 1);
											for v6668 = v1295, v78 do
												v1294 = v79[v6668 - v1295];
												v83[v6668] = v1294;
											end
											v77 = v77 + 1;
											v1292 = 18 - 14;
										end
										if ((v1292 == 1) or (842 == 1350)) then
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[392 - (14 + 376)]] = v85[3];
											v77 = v77 + 1;
											v1292 = 3 - 1;
										end
										if (v1292 == 0) then
											v1293 = nil;
											v1294 = nil;
											v1295 = nil;
											v83[v85[2 + 0]] = v85[3];
											v1292 = 1 + 0;
										end
										if ((4 + 0) == v1292) then
											v85 = v73[v77];
											v1295 = v85[5 - 3];
											v1293 = v83[v1295];
											for v6671 = v1295 + 1 + 0, v78 do
												v7(v1293, v83[v6671]);
											end
											break;
										end
									end
								else
									local v1296;
									local v1297;
									local v1298;
									v83[v85[80 - (23 + 55)]] = v83[v85[6 - 3]][v85[3 + 1]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v85[3];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[1 + 1]] = v63[v85[904 - (652 + 249)]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v1298 = v85[1870 - (708 + 1160)];
									v83[v1298] = v83[v1298](v13(v83, v1298 + (2 - 1), v85[5 - 2]));
									v77 = v77 + (28 - (10 + 17));
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[1735 - (1400 + 332)]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2]] = v85[1911 - (242 + 1666)];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v63[v85[3 + 0]];
									v77 = v77 + (941 - (850 + 90));
									v85 = v73[v77];
									v83[v85[3 - 1]] = v83[v85[3]];
									v77 = v77 + (1391 - (360 + 1030));
									v85 = v73[v77];
									v1298 = v85[2];
									v83[v1298] = v83[v1298](v83[v1298 + 1 + 0]);
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v1297 = v85[3 - 0];
									v1296 = v83[v1297];
									for v4291 = v1297 + 1, v85[1665 - (909 + 752)] do
										v1296 = v1296 .. v83[v4291];
									end
									v83[v85[2]] = v1296;
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]][v85[1226 - (109 + 1114)]] = v83[v85[4]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[3 - 1]] = v85[2 + 1];
								end
							elseif (v86 <= (287 - (6 + 236))) then
								if (v86 <= 41) then
									if (v86 <= (25 + 14)) then
										local v190 = 0;
										local v191;
										local v192;
										while true do
											if ((820 < 3181) and (v190 == 4)) then
												v77 = v77 + 1;
												v85 = v73[v77];
												v192 = v85[2 + 0];
												v190 = 5;
											end
											if ((1625 <= 4694) and (v190 == 2)) then
												v191 = v83[v85[6 - 3]];
												v83[v192 + (1 - 0)] = v191;
												v83[v192] = v191[v85[1137 - (1076 + 57)]];
												v190 = 1 + 2;
											end
											if (0 == v190) then
												v191 = nil;
												v192 = nil;
												v83[v85[691 - (579 + 110)]] = v83[v85[1 + 2]][v85[4 + 0]];
												v190 = 1;
											end
											if ((v190 == (3 + 2)) or (956 > 2856)) then
												v83[v192] = v83[v192](v13(v83, v192 + (408 - (174 + 233)), v85[8 - 5]));
												v77 = v77 + (1 - 0);
												v85 = v73[v77];
												v190 = 6;
											end
											if (v190 == (3 + 3)) then
												if (v83[v85[1176 - (663 + 511)]] or (504 <= 432)) then
													v77 = v77 + 1 + 0;
												else
													v77 = v85[3];
												end
												break;
											end
											if ((v190 == (1 + 2)) or (4835 < 2977)) then
												v77 = v77 + (2 - 1);
												v85 = v73[v77];
												v83[v85[2 + 0]] = v85[3];
												v190 = 4;
											end
											if (v190 == (2 - 1)) then
												v77 = v77 + (2 - 1);
												v85 = v73[v77];
												v192 = v85[1 + 1];
												v190 = 3 - 1;
											end
										end
									elseif (v86 > 40) then
										local v1319 = 0 + 0;
										local v1320;
										while true do
											if (v1319 == 3) then
												v85 = v73[v77];
												v83[v85[2]] = v83[v85[3]][v85[1 + 3]];
												v77 = v77 + (723 - (478 + 244));
												v85 = v73[v77];
												v1319 = 521 - (440 + 77);
											end
											if (v1319 == 4) then
												v83[v85[2]] = v83[v85[2 + 1]][v85[4]];
												v77 = v77 + 1;
												v85 = v73[v77];
												v1320 = v85[2];
												v1319 = 18 - 13;
											end
											if ((3655 > 913) and (v1319 == (1557 - (655 + 901)))) then
												v83[v85[1 + 1]] = v85[3 + 0];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v83[v85[7 - 5]] = v63[v85[1448 - (695 + 750)]];
												v1319 = 2;
											end
											if (v1319 == (16 - 11)) then
												v83[v1320] = v83[v1320](v13(v83, v1320 + 1, v85[3 - 0]));
												v77 = v77 + (3 - 2);
												v85 = v73[v77];
												v63[v85[3]] = v83[v85[353 - (285 + 66)]];
												break;
											end
											if (v1319 == 2) then
												v77 = v77 + 1;
												v85 = v73[v77];
												v83[v85[4 - 2]] = v83[v85[3]][v85[1314 - (682 + 628)]];
												v77 = v77 + 1 + 0;
												v1319 = 302 - (176 + 123);
											end
											if (v1319 == 0) then
												v1320 = nil;
												v83[v85[1 + 1]] = v83[v85[3 + 0]][v85[273 - (239 + 30)]];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v1319 = 1 + 0;
											end
										end
									else
										local v1321 = v83[v85[6 - 2]];
										if not v1321 then
											v77 = v77 + (2 - 1);
										else
											v83[v85[317 - (306 + 9)]] = v1321;
											v77 = v85[10 - 7];
										end
									end
								elseif (v86 <= (8 + 35)) then
									if (v86 > (26 + 16)) then
										local v1322;
										v83[v85[2]] = v83[v85[2 + 1]][v85[11 - 7]];
										v77 = v77 + (1376 - (1140 + 235));
										v85 = v73[v77];
										v83[v85[2 + 0]] = v85[3 + 0];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2]] = v63[v85[55 - (33 + 19)]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v83[v85[8 - 5]][v85[2 + 2]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[3 - 1]] = v83[v85[3 + 0]][v85[693 - (586 + 103)]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[5 - 3]] = v83[v85[1491 - (1309 + 179)]][v85[6 - 2]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v1322 = v85[5 - 3];
										v83[v1322] = v83[v1322](v13(v83, v1322 + 1 + 0, v85[5 - 2]));
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v63[v85[612 - (295 + 314)]] = v83[v85[4 - 2]];
									else
										v83[v85[1964 - (1300 + 662)]] = v83[v85[9 - 6]] / v83[v85[1759 - (1178 + 577)]];
									end
								elseif ((933 <= 1740) and (v86 > (23 + 21))) then
									v83[v85[2]] = v62[v85[8 - 5]];
									v77 = v77 + (1406 - (851 + 554));
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[8 - 5]][v85[8 - 4]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[304 - (115 + 187)]] = v83[v85[3 + 0]][v85[4 + 0]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[1163 - (160 + 1001)]] = v83[v85[3 + 0]][v85[3 + 1]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									if (v83[v85[360 - (237 + 121)]] == v85[901 - (525 + 372)]) then
										v77 = v77 + (1 - 0);
									else
										v77 = v85[9 - 6];
									end
								else
									local v1349 = 142 - (96 + 46);
									local v1350;
									while true do
										if (v1349 == (779 - (643 + 134))) then
											v83[v1350](v13(v83, v1350 + 1 + 0, v85[6 - 3]));
											v77 = v77 + (3 - 2);
											v85 = v73[v77];
											v83[v85[2 + 0]] = v85[5 - 2];
											v1349 = 5 - 2;
										end
										if (v1349 == (720 - (316 + 403))) then
											v83[v85[2 + 0]] = v85[8 - 5];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v1350 = v85[4 - 2];
											v1349 = 2;
										end
										if ((v1349 == (3 + 0)) or (3240 < 1992)) then
											v77 = v77 + 1;
											v85 = v73[v77];
											v77 = v85[1 + 2];
											break;
										end
										if ((1426 < 4321) and (v1349 == (0 - 0))) then
											v1350 = nil;
											v83[v85[9 - 7]] = v85[5 - 2];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v1349 = 1 - 0;
										end
									end
								end
							elseif (v86 <= 48) then
								if (v86 <= (3 + 43)) then
									local v193;
									local v194;
									v83[v85[5 - 3]] = v63[v85[20 - (12 + 5)]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v194 = v85[2];
									v193 = v83[v85[5 - 2]];
									v83[v194 + (1 - 0)] = v193;
									v83[v194] = v193[v85[9 - 5]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1975 - (1656 + 317)]] = v85[3 + 0];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v194 = v85[4 - 2];
									v83[v194] = v83[v194](v13(v83, v194 + (4 - 3), v85[3]));
									v77 = v77 + (355 - (5 + 349));
									v85 = v73[v77];
									v194 = v85[9 - 7];
									v193 = v83[v85[3]];
									v83[v194 + 1] = v193;
									v83[v194] = v193[v85[1275 - (266 + 1005)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[10 - 7]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v194 = v85[2];
									v83[v194](v13(v83, v194 + (1697 - (561 + 1135)), v85[3 - 0]));
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[2]] = v85[3];
								elseif (v86 == (1113 - (507 + 559))) then
									local v1351;
									local v1352;
									v1352 = v85[4 - 2];
									v1351 = v83[v85[9 - 6]];
									v83[v1352 + 1] = v1351;
									v83[v1352] = v1351[v85[392 - (212 + 176)]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[907 - (250 + 655)]] = v85[8 - 5];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v1352 = v85[2 - 0];
									v83[v1352] = v83[v1352](v13(v83, v1352 + (1957 - (1869 + 87)), v85[10 - 7]));
									v77 = v77 + (1902 - (484 + 1417));
									v85 = v73[v77];
									v1352 = v85[4 - 2];
									v1351 = v83[v85[4 - 1]];
									v83[v1352 + (774 - (48 + 725))] = v1351;
									v83[v1352] = v1351[v85[5 - 1]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[7 - 4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v1352 = v85[1 + 1];
									v83[v1352](v13(v83, v1352 + (854 - (152 + 701)), v85[1314 - (430 + 881)]));
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[897 - (557 + 338)]] = v63[v85[1 + 2]];
								else
									local v1370 = 0 - 0;
									local v1371;
									while true do
										if (v1370 == (3 - 2)) then
											v83[v85[4 - 2]] = v85[6 - 3];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2]] = v63[v85[804 - (499 + 302)]];
											v1370 = 2;
										end
										if (v1370 == (868 - (39 + 827))) then
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[6 - 3]][v85[15 - 11]];
											v77 = v77 + (1 - 0);
											v1370 = 1 + 2;
										end
										if (v1370 == (8 - 5)) then
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[1 + 2]][v85[5 - 1]];
											v77 = v77 + (105 - (103 + 1));
											v85 = v73[v77];
											v1370 = 558 - (475 + 79);
										end
										if ((2465 < 3446) and (v1370 == 4)) then
											v83[v85[4 - 2]] = v83[v85[9 - 6]][v85[1 + 3]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v1371 = v85[2 + 0];
											v1370 = 1508 - (1395 + 108);
										end
										if ((14 - 9) == v1370) then
											v83[v1371] = v83[v1371](v13(v83, v1371 + 1, v85[1207 - (7 + 1197)]));
											v77 = v77 + 1;
											v85 = v73[v77];
											v63[v85[2 + 1]] = v83[v85[1 + 1]];
											break;
										end
										if (v1370 == (319 - (27 + 292))) then
											v1371 = nil;
											v83[v85[5 - 3]] = v83[v85[3 - 0]][v85[16 - 12]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v1370 = 1 - 0;
										end
									end
								end
							elseif (v86 <= (95 - 45)) then
								if ((449 < 2744) and (v86 == (188 - (43 + 96)))) then
									local v1372;
									v83[v85[8 - 6]] = v83[v85[3]][v85[8 - 4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v85[3];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2]] = v63[v85[2 + 1]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[1 + 2]][v85[1 + 3]];
									v77 = v77 + (1752 - (1414 + 337));
									v85 = v73[v77];
									v83[v85[1942 - (1642 + 298)]] = v83[v85[7 - 4]][v85[11 - 7]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[3 + 0]][v85[976 - (357 + 615)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v1372 = v85[4 - 2];
									v83[v1372] = v83[v1372](v13(v83, v1372 + 1 + 0, v85[6 - 3]));
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v63[v85[1 + 2]] = v83[v85[2 + 0]];
								else
									local v1388 = 1301 - (384 + 917);
									local v1389;
									local v1390;
									local v1391;
									local v1392;
									while true do
										if ((v1388 == (701 - (128 + 569))) or (2689 == 819)) then
											v83[v85[1545 - (1407 + 136)]] = v83[v85[1890 - (687 + 1200)]][v85[4]];
											v77 = v77 + (1711 - (556 + 1154));
											v85 = v73[v77];
											v83[v85[2]] = v85[10 - 7];
											v77 = v77 + (96 - (9 + 86));
											v1388 = 426 - (275 + 146);
										end
										if (7 == v1388) then
											if (v1389 > (0 + 0)) then
												if (v1390 > v83[v1392 + (65 - (29 + 35))]) then
													v77 = v85[13 - 10];
												else
													v83[v1392 + (8 - 5)] = v1390;
												end
											elseif ((v1390 < v83[v1392 + (4 - 3)]) or (2998 < 23)) then
												v77 = v85[2 + 1];
											else
												v83[v1392 + (1015 - (53 + 959))] = v1390;
											end
											break;
										end
										if (v1388 == (413 - (312 + 96))) then
											v85 = v73[v77];
											v83[v85[3 - 1]] = v85[3];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2]] = v85[3];
											v1388 = 291 - (147 + 138);
										end
										if ((v1388 == (899 - (813 + 86))) or (2704 < 224)) then
											v1389 = nil;
											v1390 = nil;
											v1391 = nil;
											v1392 = nil;
											v1392 = v85[2 + 0];
											v1388 = 1 - 0;
										end
										if (((493 - (18 + 474)) == v1388) or (2547 < 2539)) then
											v1391 = v83[v85[2 + 1]];
											v83[v1392 + (3 - 2)] = v1391;
											v83[v1392] = v1391[v85[1090 - (860 + 226)]];
											v77 = v77 + (304 - (121 + 182));
											v85 = v73[v77];
											v1388 = 1 + 1;
										end
										if (((1246 - (988 + 252)) == v1388) or (4948 < 284)) then
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v1392 = v85[1 + 1];
											v1390 = v83[v1392];
											v1389 = v83[v1392 + (1972 - (49 + 1921))];
											v1388 = 897 - (223 + 667);
										end
										if (v1388 == (55 - (51 + 1))) then
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											v83[v85[3 - 1]] = v83[v85[3]][v85[1129 - (146 + 979)]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v1388 = 609 - (311 + 294);
										end
										if (v1388 == (5 - 3)) then
											v83[v85[1 + 1]] = v85[3];
											v77 = v77 + (1444 - (496 + 947));
											v85 = v73[v77];
											v1392 = v85[1360 - (1233 + 125)];
											v83[v1392] = v83[v1392](v13(v83, v1392 + 1 + 0, v85[3 + 0]));
											v1388 = 3;
										end
									end
								end
							elseif (v86 == (10 + 41)) then
								local v1393;
								v1393 = v85[1647 - (963 + 682)];
								v83[v1393] = v83[v1393]();
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 + 0]][v85[1507 - (504 + 1000)]] = v83[v85[3 + 1]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v62[v85[1 + 2]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v1393 = v85[2 + 0];
								v83[v1393] = v83[v1393]();
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[184 - (156 + 26)]][v85[2 + 1]] = v83[v85[6 - 2]];
								v77 = v77 + (165 - (149 + 15));
								v85 = v73[v77];
								v77 = v85[963 - (890 + 70)];
							else
								v83[v85[119 - (39 + 78)]] = v85[485 - (14 + 468)] ^ v83[v85[8 - 4]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[5 - 3]] = v83[v85[3]] / v83[v85[3 + 1]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[2 + 1]] - v85[4];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[3 - 1]] = v83[v85[3 + 0]] - v85[4];
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[1 + 2]] - v83[v85[55 - (12 + 39)]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[5 - 3]] = v83[v85[10 - 7]] + v85[2 + 2];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[3] ^ v83[v85[9 - 5]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[14 - 11]] % v83[v85[1714 - (1596 + 114)]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3]] % v85[717 - (164 + 549)];
								v77 = v77 + (1439 - (1059 + 379));
								v85 = v73[v77];
								v83[v85[2 - 0]] = v83[v85[2 + 1]] - v83[v85[1 + 3]];
								v77 = v77 + 1;
								v85 = v73[v77];
								do
									return v83[v85[394 - (145 + 247)]];
								end
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v77 = v85[2 + 1];
							end
						elseif (v86 <= (231 - 153)) then
							if (v86 <= 65) then
								if (v86 <= (12 + 46)) then
									if ((v86 <= (48 + 7)) or (2798 < 2791)) then
										if ((2689 < 2698) and (v86 <= (85 - 32))) then
											local v213 = 0;
											local v214;
											local v215;
											while true do
												if ((723 - (254 + 466)) == v213) then
													v214 = v83[v85[563 - (544 + 16)]];
													v83[v215 + 1] = v214;
													v83[v215] = v214[v85[12 - 8]];
													v77 = v77 + (629 - (294 + 334));
													v213 = 4;
												end
												if (v213 == (257 - (236 + 17))) then
													v85 = v73[v77];
													v83[v85[2]] = v85[2 + 1];
													v77 = v77 + 1 + 0;
													v85 = v73[v77];
													v213 = 18 - 13;
												end
												if ((1337 == 1337) and (v213 == 2)) then
													v83[v85[2]][v85[14 - 11]] = v85[3 + 1];
													v77 = v77 + 1 + 0;
													v85 = v73[v77];
													v215 = v85[796 - (413 + 381)];
													v213 = 1 + 2;
												end
												if (v213 == 6) then
													if v83[v85[3 - 1]] then
														v77 = v77 + (2 - 1);
													else
														v77 = v85[1973 - (582 + 1388)];
													end
													break;
												end
												if ((4741 == 4741) and (v213 == (1 - 0))) then
													v85 = v73[v77];
													v83[v85[2 + 0]] = v63[v85[367 - (326 + 38)]];
													v77 = v77 + 1;
													v85 = v73[v77];
													v213 = 5 - 3;
												end
												if (v213 == 0) then
													v214 = nil;
													v215 = nil;
													v83[v85[2 - 0]][v85[623 - (47 + 573)]] = v85[2 + 2];
													v77 = v77 + 1;
													v213 = 4 - 3;
												end
												if (v213 == (8 - 3)) then
													v215 = v85[1666 - (1269 + 395)];
													v83[v215] = v83[v215](v13(v83, v215 + 1, v85[495 - (76 + 416)]));
													v77 = v77 + 1;
													v85 = v73[v77];
													v213 = 6;
												end
											end
										elseif ((v86 > (497 - (319 + 124))) or (1650 == 2127)) then
											local v1414 = 0 - 0;
											while true do
												if ((2901 == 2901) and (v1414 == (1008 - (564 + 443)))) then
													v77 = v77 + 1;
													v85 = v73[v77];
													v83[v85[2]][v85[3]] = v85[10 - 6];
													v77 = v77 + (459 - (337 + 121));
													v1414 = 5 - 3;
												end
												if ((0 - 0) == v1414) then
													v83[v85[2]][v85[1914 - (1261 + 650)]] = v85[2 + 2];
													v77 = v77 + (1 - 0);
													v85 = v73[v77];
													v83[v85[2]] = v63[v85[3]];
													v1414 = 1818 - (772 + 1045);
												end
												if (v1414 == (1 + 2)) then
													v83[v85[146 - (102 + 42)]] = v83[v85[1847 - (1524 + 320)]][v85[1274 - (1049 + 221)]];
													break;
												end
												if (v1414 == (158 - (18 + 138))) then
													v85 = v73[v77];
													v83[v85[4 - 2]] = v63[v85[3]];
													v77 = v77 + (1103 - (67 + 1035));
													v85 = v73[v77];
													v1414 = 351 - (136 + 212);
												end
											end
										else
											do
												return;
											end
										end
									elseif ((v86 <= 56) or (229 == 4371)) then
										v83[v85[2]] = v83[v85[3]][v83[v85[16 - 12]]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2 + 0]] = v63[v85[3 + 0]];
										v77 = v77 + (1605 - (240 + 1364));
										v85 = v73[v77];
										v83[v85[2]] = v85[3];
										v77 = v77 + (1083 - (1050 + 32));
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[10 - 7]][v83[v85[3 + 1]]];
										v77 = v77 + (1056 - (331 + 724));
										v85 = v73[v77];
										v83[v85[1 + 1]] = v63[v85[3]];
										v77 = v77 + (645 - (269 + 375));
										v85 = v73[v77];
										v83[v85[727 - (267 + 458)]] = v85[1 + 2];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[820 - (667 + 151)]] = v83[v85[1500 - (1410 + 87)]][v83[v85[4]]];
										v77 = v77 + (1898 - (1504 + 393));
										v85 = v73[v77];
										v83[v85[5 - 3]] = v63[v85[7 - 4]];
										v77 = v77 + (797 - (461 + 335));
										v85 = v73[v77];
										if not v83[v85[1 + 1]] then
											v77 = v77 + (1762 - (1730 + 31));
										else
											v77 = v85[1670 - (728 + 939)];
										end
									elseif ((1825 < 2147) and (v86 > (201 - 144))) then
										if v83[v85[3 - 1]] then
											v77 = v77 + (2 - 1);
										else
											v77 = v85[1071 - (138 + 930)];
										end
									else
										v83[v85[2 + 0]] = v62[v85[3]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2 + 0]] = v83[v85[12 - 9]][v85[1770 - (459 + 1307)]];
										v77 = v77 + (1871 - (474 + 1396));
										v85 = v73[v77];
										v83[v85[2 - 0]] = v83[v85[3 + 0]][v83[v85[1 + 3]]];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v83[v85[1 + 1]][v83[v85[9 - 6]]] = v83[v85[17 - 13]];
										v77 = v77 + (592 - (562 + 29));
										v85 = v73[v77];
										v77 = v85[3 + 0];
									end
								elseif (v86 <= (1480 - (374 + 1045))) then
									if (v86 <= (47 + 12)) then
										local v231;
										local v232;
										local v233;
										local v234;
										v83[v85[5 - 3]] = v63[v85[3]];
										v77 = v77 + (639 - (448 + 190));
										v85 = v73[v77];
										v234 = v85[1 + 1];
										v233 = v83[v85[3]];
										v83[v234 + 1 + 0] = v233;
										v83[v234] = v233[v85[3 + 1]];
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v83[v85[5 - 3]] = v85[1497 - (1307 + 187)];
										v77 = v77 + 1;
										v85 = v73[v77];
										v234 = v85[7 - 5];
										v83[v234] = v83[v234](v13(v83, v234 + 1, v85[6 - 3]));
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v83[v85[685 - (232 + 451)]] = v83[v85[3]][v85[4]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2 + 0]] = v83[v85[3]][v85[4 + 0]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[566 - (510 + 54)]] = v85[5 - 2];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[38 - (13 + 23)]] = v85[5 - 2];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[3 - 1]] = v85[1091 - (830 + 258)];
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v234 = v85[2 + 0];
										v232 = v83[v234];
										v231 = v83[v234 + 2];
										if (v231 > (0 + 0)) then
											if (v232 > v83[v234 + (1442 - (860 + 581))]) then
												v77 = v85[3];
											else
												v83[v234 + (10 - 7)] = v232;
											end
										elseif ((v232 < v83[v234 + 1]) or (3439 <= 1627)) then
											v77 = v85[3];
										else
											v83[v234 + 3 + 0] = v232;
										end
									elseif (v86 > 60) then
										local v1425 = 241 - (237 + 4);
										local v1426;
										while true do
											if (v1425 == (4 - 2)) then
												v77 = v77 + (2 - 1);
												v85 = v73[v77];
												v1426 = v85[2];
												v83[v1426] = v83[v1426]();
												v1425 = 5 - 2;
											end
											if ((3 == v1425) or (3188 < 1786)) then
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v83[v85[2 + 0]][v85[3]] = v83[v85[15 - 11]];
												v77 = v77 + 1 + 0;
												v1425 = 4;
											end
											if ((3 + 1) == v1425) then
												v85 = v73[v77];
												v83[v85[1428 - (85 + 1341)]] = v83[v85[4 - 1]][v85[11 - 7]];
												v77 = v77 + (373 - (45 + 327));
												v85 = v73[v77];
												v1425 = 5;
											end
											if (v1425 == (10 - 4)) then
												v77 = v77 + 1;
												v85 = v73[v77];
												v83[v85[504 - (444 + 58)]] = v63[v85[3]];
												v77 = v77 + 1;
												v1425 = 4 + 3;
											end
											if (1 == v1425) then
												v83[v85[1 + 1]] = v83[v85[3]][v85[4]];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v83[v85[5 - 3]] = v63[v85[1735 - (64 + 1668)]];
												v1425 = 2;
											end
											if (((1980 - (1227 + 746)) == v1425) or (118 >= 2934)) then
												v85 = v73[v77];
												v1426 = v85[5 - 3];
												v83[v1426] = v83[v1426]();
												v77 = v77 + (1 - 0);
												v1425 = 502 - (415 + 79);
											end
											if (v1425 == (1 + 4)) then
												v83[v85[493 - (142 + 349)]] = v83[v85[2 + 1]][v85[5 - 1]];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v83[v85[2 + 0]] = v83[v85[3]][v85[4]];
												v1425 = 15 - 9;
											end
											if (v1425 == 8) then
												v85 = v73[v77];
												v83[v85[2]][v85[1867 - (1710 + 154)]] = v83[v85[322 - (200 + 118)]];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v1425 = 15 - 6;
											end
											if ((825 == 825) and (v1425 == (12 - 3))) then
												v83[v85[2 + 0]] = v85[3];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v77 = v85[2 + 1];
												break;
											end
											if ((v1425 == (0 + 0)) or (3648 <= 139)) then
												v1426 = nil;
												v83[v85[2]] = v83[v85[6 - 3]][v85[4]];
												v77 = v77 + (1251 - (363 + 887));
												v85 = v73[v77];
												v1425 = 1 - 0;
											end
										end
									else
										local v1427 = 0 - 0;
										while true do
											if (v1427 == 2) then
												v85 = v73[v77];
												v83[v85[1 + 1]] = v63[v85[6 - 3]];
												v77 = v77 + 1;
												v85 = v73[v77];
												v1427 = 3 + 0;
											end
											if (((1665 - (674 + 990)) == v1427) or (4599 == 1959)) then
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v83[v85[1 + 1]][v85[3 - 0]] = v85[1059 - (507 + 548)];
												v77 = v77 + (838 - (289 + 548));
												v1427 = 1820 - (821 + 997);
											end
											if ((255 - (195 + 60)) == v1427) then
												v83[v85[1 + 1]][v85[1504 - (251 + 1250)]] = v85[4];
												v77 = v77 + (2 - 1);
												v85 = v73[v77];
												v83[v85[2 + 0]] = v63[v85[1035 - (809 + 223)]];
												v1427 = 1 - 0;
											end
											if (v1427 == (8 - 5)) then
												v83[v85[2]] = v83[v85[9 - 6]][v85[3 + 1]];
												break;
											end
										end
									end
								elseif (v86 <= 63) then
									if (v86 == (33 + 29)) then
										local v1428 = 617 - (14 + 603);
										while true do
											if (v1428 == 0) then
												v83[v85[131 - (118 + 11)]] = v83[v85[3]][v85[1 + 3]];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v1428 = 2 - 1;
											end
											if ((954 - (551 + 398)) == v1428) then
												v77 = v85[2 + 1];
												break;
											end
											if (v1428 == 3) then
												v83[v85[1 + 1]] = v83[v85[3 + 0]][v85[14 - 10]];
												v77 = v77 + (2 - 1);
												v85 = v73[v77];
												v1428 = 2 + 2;
											end
											if (v1428 == 1) then
												v83[v85[7 - 5]] = v83[v85[1 + 2]][v85[4]];
												v77 = v77 + (90 - (40 + 49));
												v85 = v73[v77];
												v1428 = 7 - 5;
											end
											if (v1428 == (492 - (99 + 391))) then
												v83[v85[2 + 0]] = v83[v85[3]][v85[17 - 13]];
												v77 = v77 + (2 - 1);
												v85 = v73[v77];
												v1428 = 3 + 0;
											end
											if ((4223 >= 2743) and (v1428 == 4)) then
												v63[v85[7 - 4]] = v83[v85[1606 - (1032 + 572)]];
												v77 = v77 + (418 - (203 + 214));
												v85 = v73[v77];
												v1428 = 1822 - (568 + 1249);
											end
										end
									else
										v83[v85[2]] = v83[v85[3 + 0]][v85[9 - 5]];
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[1309 - (913 + 393)]][v85[11 - 7]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2 - 0]] = v83[v85[413 - (269 + 141)]][v85[8 - 4]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1983 - (362 + 1619)]] = v83[v85[1628 - (950 + 675)]][v85[2 + 2]];
										v77 = v77 + (1180 - (216 + 963));
										v85 = v73[v77];
										v63[v85[3]] = v83[v85[2]];
										v77 = v77 + (1288 - (485 + 802));
										v85 = v73[v77];
										v77 = v85[562 - (432 + 127)];
									end
								elseif (v86 > (1137 - (1065 + 8))) then
									if (v85[2] <= v83[v85[3 + 1]]) then
										v77 = v77 + (1602 - (635 + 966));
									else
										v77 = v85[3 + 0];
									end
								else
									local v1439;
									local v1440;
									v1440 = v85[44 - (5 + 37)];
									v83[v1440](v13(v83, v1440 + (2 - 1), v85[3]));
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]] = v85[2 + 1];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[3]][v83[v85[8 - 4]]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[2]] = v85[5 - 2];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[532 - (318 + 211)]][v83[v85[4]]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[9 - 7]] = v85[1590 - (963 + 624)];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v1440 = v85[848 - (518 + 328)];
									v1439 = v83[v85[3]];
									v83[v1440 + (2 - 1)] = v1439;
									v83[v1440] = v1439[v83[v85[4]]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2 - 0]] = v85[320 - (301 + 16)];
									v77 = v77 + 1;
									v85 = v73[v77];
									v1440 = v85[5 - 3];
									v83[v1440] = v83[v1440](v13(v83, v1440 + 1, v85[8 - 5]));
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v1440 = v85[2 + 0];
									v1439 = v83[v85[3]];
									v83[v1440 + 1] = v1439;
									v83[v1440] = v1439[v85[4]];
								end
							elseif (v86 <= (41 + 30)) then
								if (v86 <= (144 - 76)) then
									if ((v86 <= (40 + 26)) or (2435 == 4679)) then
										local v256;
										local v257;
										v83[v85[1 + 1]] = v83[v85[9 - 6]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v83[v85[3]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v257 = v85[1021 - (829 + 190)];
										v83[v257] = v83[v257]();
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v83[v85[2 - 0]] = {};
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2 - 0]] = v83[v85[7 - 4]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v257 = v85[1 + 1];
										v83[v257] = v83[v257](v13(v83, v257 + (2 - 1), v85[3]));
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v257 = v85[2];
										v78 = (v257 + v84) - 1;
										for v896 = v257, v78 do
											v256 = v79[v896 - v257];
											v83[v896] = v256;
										end
										v77 = v77 + (614 - (520 + 93));
										v85 = v73[v77];
										v257 = v85[278 - (259 + 17)];
										do
											return v83[v257](v13(v83, v257 + 1 + 0, v78));
										end
										v77 = v77 + 1;
										v85 = v73[v77];
										v257 = v85[1 + 1];
										do
											return v13(v83, v257, v78);
										end
										v77 = v77 + 1;
										v85 = v73[v77];
										do
											return;
										end
									elseif (v86 == (226 - 159)) then
										local v1463 = 591 - (396 + 195);
										local v1464;
										while true do
											if (v1463 == (23 - 15)) then
												v85 = v73[v77];
												v1464 = v85[1763 - (440 + 1321)];
												v83[v1464](v13(v83, v1464 + 1, v85[1832 - (1059 + 770)]));
												v77 = v77 + (4 - 3);
												v1463 = 554 - (424 + 121);
											end
											if ((1185 > 112) and (v1463 == (2 + 4))) then
												v83[v85[2]] = v62[v85[3]];
												v77 = v77 + (1348 - (641 + 706));
												v85 = v73[v77];
												v83[v85[1 + 1]] = v85[443 - (249 + 191)];
												v1463 = 30 - 23;
											end
											if ((9 == v1463) or (1576 > 1775)) then
												v85 = v73[v77];
												v83[v85[1 + 1]] = v62[v85[11 - 8]];
												v77 = v77 + (428 - (183 + 244));
												v85 = v73[v77];
												v1463 = 1 + 9;
											end
											if ((734 - (434 + 296)) == v1463) then
												v85 = v73[v77];
												v83[v85[5 - 3]] = v85[515 - (169 + 343)];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v1463 = 8 - 3;
											end
											if ((v1463 == 5) or (2079 >= 4039)) then
												v1464 = v85[5 - 3];
												v83[v1464](v13(v83, v1464 + 1 + 0, v85[8 - 5]));
												v77 = v77 + (1124 - (651 + 472));
												v85 = v73[v77];
												v1463 = 6;
											end
											if ((v1463 == (9 + 2)) or (1813 > 2682)) then
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v1464 = v85[2];
												v83[v1464](v13(v83, v1464 + (1 - 0), v85[3]));
												v1463 = 495 - (397 + 86);
											end
											if ((v1463 == (876 - (423 + 453))) or (88 > 2993)) then
												v1464 = nil;
												v83[v85[1 + 1]] = v83[v85[1 + 2]][v85[4 + 0]];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v1463 = 1 + 0;
											end
											if (v1463 == (1200 - (50 + 1140))) then
												v83[v85[2]] = v85[3 + 0];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v83[v85[1 + 1]] = v85[3 - 0];
												v1463 = 8 + 3;
											end
											if ((599 - (157 + 439)) == v1463) then
												v77 = v77 + 1;
												v85 = v73[v77];
												v83[v85[2]] = v85[4 - 1];
												v77 = v77 + (3 - 2);
												v1463 = 11 - 7;
											end
											if ((v1463 == (920 - (782 + 136))) or (3375 < 713)) then
												v83[v1464](v83[v1464 + 1]);
												v77 = v77 + (856 - (112 + 743));
												v85 = v73[v77];
												v83[v85[1173 - (1026 + 145)]] = v62[v85[3]];
												v1463 = 1 + 2;
											end
											if ((556 == 556) and (v1463 == 1)) then
												v83[v85[720 - (493 + 225)]] = v85[11 - 8];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v1464 = v85[5 - 3];
												v1463 = 1 + 1;
											end
											if (v1463 == (19 - 12)) then
												v77 = v77 + 1;
												v85 = v73[v77];
												v83[v85[2]] = v85[1 + 2];
												v77 = v77 + (1 - 0);
												v1463 = 1603 - (210 + 1385);
											end
											if ((4921 == 4921) and ((1701 - (1201 + 488)) == v1463)) then
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v83[v85[2]] = v85[3];
												break;
											end
										end
									else
										local v1465;
										local v1466;
										local v1467;
										v83[v85[2 - 0]] = v62[v85[3]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[587 - (352 + 233)]] = v62[v85[3]];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v83[v85[2 + 0]] = v62[v85[8 - 5]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[576 - (489 + 85)]] = v62[v85[1504 - (277 + 1224)]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1495 - (663 + 830)]] = {};
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[4 - 2]] = {};
										v77 = v77 + (876 - (461 + 414));
										v85 = v73[v77];
										v83[v85[2]] = {};
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v85[2 + 1];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2]] = v62[v85[3 + 0]];
										v77 = v77 + (251 - (172 + 78));
										v85 = v73[v77];
										v83[v85[2 - 0]] = v85[2 + 1];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v1467 = v85[1 + 1];
										v1466 = v83[v1467];
										v1465 = v83[v1467 + 2];
										if (v1465 > (0 + 0)) then
											if (v1466 > v83[v1467 + 1]) then
												v77 = v85[4 - 1];
											else
												v83[v1467 + (3 - 0)] = v1466;
											end
										elseif (v1466 < v83[v1467 + 1 + 0]) then
											v77 = v85[2 + 1];
										else
											v83[v1467 + 2 + 1] = v1466;
										end
									end
								elseif ((3847 > 3163) and (v86 <= (274 - 205))) then
									local v269;
									v83[v85[2]] = v83[v85[6 - 3]][v85[2 + 2]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v85[450 - (133 + 314)];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[215 - (199 + 14)]] = v63[v85[3]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[1551 - (647 + 902)]] = v83[v85[3]][v85[11 - 7]];
									v77 = v77 + (234 - (85 + 148));
									v85 = v73[v77];
									v83[v85[1291 - (426 + 863)]] = v83[v85[3]][v85[4]];
									v77 = v77 + (4 - 3);
									v85 = v73[v77];
									v83[v85[1656 - (873 + 781)]] = v83[v85[3 - 0]][v85[10 - 6]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v269 = v85[2];
									v83[v269] = v83[v269](v13(v83, v269 + (3 - 2), v85[3 - 0]));
									v77 = v77 + 1;
									v85 = v73[v77];
									v63[v85[8 - 5]] = v83[v85[1949 - (414 + 1533)]];
								elseif ((936 < 1184) and (v86 > (61 + 9))) then
									local v1485;
									v83[v85[2]] = v83[v85[558 - (443 + 112)]][v85[1483 - (888 + 591)]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[1 + 1]] = v85[11 - 8];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v63[v85[2 + 1]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[5 - 2]][v85[6 - 2]];
									v77 = v77 + (1679 - (136 + 1542));
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[9 - 6]][v85[4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2 - 0]] = v83[v85[3 + 0]][v85[4]];
									v77 = v77 + (487 - (68 + 418));
									v85 = v73[v77];
									v1485 = v85[4 - 2];
									v83[v1485] = v83[v1485](v13(v83, v1485 + (1 - 0), v85[3]));
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v63[v85[1095 - (770 + 322)]] = v83[v85[1 + 1]];
								else
									v83[v85[2]] = v83[v85[3]][v85[2 + 2]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2 - 0]] = v83[v85[5 - 2]][v85[10 - 6]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[10 - 7]][v85[3 + 1]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[2 + 1]][v85[4 + 0]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v63[v85[11 - 8]] = v83[v85[2 - 0]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v77 = v85[13 - 10];
								end
							elseif (v86 <= (244 - 170)) then
								if (v86 <= (30 + 42)) then
									local v286;
									v83[v85[9 - 7]] = v63[v85[834 - (762 + 69)]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[2 + 0]] = v85[2 + 1];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[1 + 1]] = v63[v85[1 + 2]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v286 = v85[159 - (8 + 149)];
									do
										return v83[v286](v13(v83, v286 + (1321 - (1199 + 121)), v85[3]));
									end
									v77 = v77 + 1;
									v85 = v73[v77];
									v286 = v85[2];
									do
										return v13(v83, v286, v78);
									end
								elseif (v86 > (123 - 50)) then
									local v1509;
									v83[v85[4 - 2]] = v83[v85[3]][v85[2 + 2]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[6 - 4]] = v85[6 - 3];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1809 - (518 + 1289)]] = v63[v85[4 - 1]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v1509 = v85[1 + 1];
									v83[v1509] = v83[v1509](v13(v83, v1509 + (1 - 0), v85[3 + 0]));
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[471 - (304 + 165)]] = v83[v85[3 + 0]];
									v77 = v77 + (161 - (54 + 106));
									v85 = v73[v77];
									v83[v85[1971 - (1618 + 351)]][v85[3 + 0]] = v85[1020 - (10 + 1006)];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]] = v85[1 + 2];
								else
									local v1525;
									v83[v85[1 + 1]] = v62[v85[9 - 6]];
									v77 = v77 + (1034 - (912 + 121));
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[3]];
									v77 = v77 + (1290 - (1140 + 149));
									v85 = v73[v77];
									v83[v85[2]] = v85[2 + 1];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2 - 0]] = v85[1 + 2];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v1525 = v85[3 - 1];
									v83[v1525] = v83[v1525](v13(v83, v1525 + 1, v85[3]));
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[6 - 4]] = v83[v85[189 - (165 + 21)]] * v85[115 - (61 + 50)];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[14 - 11]] + v83[v85[7 - 3]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v85[3];
									v77 = v77 + (1461 - (1295 + 165));
									v85 = v73[v77];
									v77 = v85[1 + 2];
								end
							elseif ((v86 <= 76) or (1687 <= 1308)) then
								if (v86 == (31 + 44)) then
									local v1538;
									v83[v85[1399 - (819 + 578)]] = v83[v85[1405 - (331 + 1071)]][v83[v85[747 - (588 + 155)]]];
									v77 = v77 + (1283 - (546 + 736));
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[1940 - (1834 + 103)]] + v85[3 + 1];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[3]][v83[v85[4]]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v1538 = v85[2];
									v83[v1538] = v83[v1538](v83[v1538 + (2 - 1)]);
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1768 - (1536 + 230)]][v83[v85[494 - (128 + 363)]]] = v83[v85[1 + 3]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v77 = v85[3];
								else
									local v1549 = 0 + 0;
									while true do
										if (v1549 == (1 - 0)) then
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[3]][v83[v85[9 - 5]]];
											v77 = v77 + 1;
											v1549 = 2;
										end
										if (v1549 == 0) then
											v83[v85[2 + 0]] = v83[v85[1012 - (615 + 394)]][v85[4 + 0]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[5 - 3]] = v83[v85[13 - 10]][v85[655 - (59 + 592)]];
											v1549 = 2 - 1;
										end
										if (v1549 == (4 - 1)) then
											v77 = v85[3 + 0];
											break;
										end
										if (v1549 == 2) then
											v85 = v73[v77];
											v83[v85[2]][v83[v85[174 - (70 + 101)]]] = v83[v85[9 - 5]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v1549 = 7 - 4;
										end
									end
								end
							elseif (v86 == (318 - (123 + 118))) then
								local v1550;
								local v1551;
								v83[v85[1 + 1]] = v83[v85[3]][v83[v85[4]]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v1551 = v85[1401 - (653 + 746)];
								v1550 = v83[v85[4 - 1]];
								v83[v1551 + (1 - 0)] = v1550;
								v83[v1551] = v1550[v85[4]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[1 + 1]] = v85[3];
								v77 = v77 + 1;
								v85 = v73[v77];
								v1551 = v85[2 + 0];
								v83[v1551] = v83[v1551](v13(v83, v1551 + 1 + 0, v85[1 + 2]));
								v77 = v77 + 1;
								v85 = v73[v77];
								if (not v83[v85[1 + 1]] or (3217 <= 2284)) then
									v77 = v77 + (2 - 1);
								else
									v77 = v85[3 + 0];
								end
							else
								v83[v85[3 - 1]] = v62[v85[3]];
								v77 = v77 + (1235 - (885 + 349));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[8 - 5]][v85[11 - 7]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[970 - (915 + 53)]] = v83[v85[804 - (768 + 33)]][v85[4]];
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v83[v85[2 - 0]] = v83[v85[3]][v85[332 - (287 + 41)]];
								v77 = v77 + (848 - (638 + 209));
								v85 = v73[v77];
								if (v83[v85[2 + 0]] == v85[4]) then
									v77 = v77 + (1687 - (96 + 1590));
								else
									v77 = v85[1675 - (741 + 931)];
								end
							end
						elseif (v86 <= (45 + 46)) then
							if ((v86 <= 84) or (4259 <= 3894)) then
								if (v86 <= (230 - 149)) then
									if (v86 <= (369 - 290)) then
										local v296;
										local v297;
										local v298;
										v83[v85[1 + 1]] = v62[v85[2 + 1]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v62[v85[11 - 8]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2]] = v62[v85[2 + 1]];
										v77 = v77 + (4 - 3);
										v85 = v73[v77];
										v83[v85[2 + 0]] = v83[v85[3]] + v85[498 - (64 + 430)];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v298 = v85[2];
										v297 = {v83[v298](v13(v83, v298 + 1 + 0, v85[3]))};
										v296 = 721 - (496 + 225);
										for v899 = v298, v85[7 - 3] do
											v296 = v296 + (4 - 3);
											v83[v899] = v297[v296];
										end
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[1661 - (256 + 1402)]];
										v77 = v77 + (1900 - (30 + 1869));
										v85 = v73[v77];
										v83[v85[1371 - (213 + 1156)]] = v83[v85[191 - (96 + 92)]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2]] = v62[v85[902 - (142 + 757)]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v83[v85[82 - (32 + 47)]] + v85[1981 - (1053 + 924)];
										v77 = v77 + 1;
										v85 = v73[v77];
										v62[v85[3 + 0]] = v83[v85[2 - 0]];
										v77 = v77 + (1649 - (685 + 963));
										v85 = v73[v77];
										v83[v85[3 - 1]] = v85[3 - 0];
										v77 = v77 + (1710 - (541 + 1168));
										v85 = v73[v77];
										v77 = v85[3];
									elseif (v86 > (1677 - (645 + 952))) then
										local v1571 = 838 - (669 + 169);
										local v1572;
										local v1573;
										while true do
											if (v1571 == (20 - 14)) then
												v85 = v73[v77];
												v77 = v85[3];
												break;
											end
											if (v1571 == (10 - 5)) then
												v1573 = v85[1 + 1];
												v83[v1573](v83[v1573 + 1]);
												v77 = v77 + 1 + 0;
												v1571 = 771 - (181 + 584);
											end
											if (((1398 - (665 + 730)) == v1571) or (1020 == 4557)) then
												v1573 = v85[5 - 3];
												v1572 = v83[v85[5 - 2]];
												v83[v1573 + 1] = v1572;
												v1571 = 1354 - (540 + 810);
											end
											if ((4649 >= 2525) and (v1571 == 2)) then
												v83[v1573](v83[v1573 + (3 - 2)]);
												v77 = v77 + (2 - 1);
												v85 = v73[v77];
												v1571 = 3 + 0;
											end
											if ((v1571 == (204 - (166 + 37))) or (2439 == 535)) then
												v77 = v77 + (1882 - (22 + 1859));
												v85 = v73[v77];
												v1573 = v85[1774 - (843 + 929)];
												v1571 = 264 - (30 + 232);
											end
											if (v1571 == (0 - 0)) then
												v1572 = nil;
												v1573 = nil;
												v83[v85[779 - (55 + 722)]] = v85[6 - 3];
												v1571 = 1;
											end
											if ((2091 >= 1756) and (v1571 == (1679 - (78 + 1597)))) then
												v83[v1573] = v1572[v85[1 + 3]];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v1571 = 5;
											end
										end
									else
										local v1574;
										local v1575;
										v83[v85[2 + 0]] = v85[3];
										v77 = v77 + 1;
										v85 = v73[v77];
										v1575 = v85[2];
										v83[v1575] = v83[v1575](v13(v83, v1575 + (550 - (305 + 244)), v85[3 + 0]));
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[107 - (95 + 10)]][v85[3 + 0]] = v85[4];
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v1575 = v85[2];
										v1574 = v83[v85[3 - 0]];
										v83[v1575 + (763 - (592 + 170))] = v1574;
										v83[v1575] = v1574[v85[4]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2]] = v85[10 - 7];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v1575 = v85[1 + 1];
										v83[v1575] = v83[v1575](v13(v83, v1575 + 1 + 0, v85[6 - 3]));
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2]][v85[1 + 2]] = v85[6 - 2];
										v77 = v77 + (508 - (353 + 154));
										v85 = v73[v77];
										v83[v85[2 - 0]] = v85[3 - 0];
									end
								elseif (v86 <= 82) then
									local v315;
									v83[v85[2 + 0]][v85[3]] = v83[v85[4 + 0]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v315 = v85[2 - 0];
									v83[v315] = v83[v315](v13(v83, v315 + (1 - 0), v85[6 - 3]));
									v77 = v77 + (87 - (7 + 79));
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[184 - (24 + 157)]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2]] = v85[6 - 3];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v77 = v85[3];
								elseif (v86 == (223 - 140)) then
									local v1593 = 0;
									while true do
										if (v1593 == (381 - (262 + 118))) then
											v83[v85[1085 - (1038 + 45)]] = v83[v85[5 - 2]][v85[234 - (19 + 211)]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v1593 = 115 - (88 + 25);
										end
										if (v1593 == 3) then
											v83[v85[4 - 2]] = v83[v85[2 + 1]][v85[4 + 0]];
											v77 = v77 + (1037 - (1007 + 29));
											v85 = v73[v77];
											v1593 = 2 + 2;
										end
										if ((v1593 == (0 - 0)) or (2133 == 4237)) then
											v83[v85[2]] = v83[v85[14 - 11]][v85[1 + 3]];
											v77 = v77 + (812 - (340 + 471));
											v85 = v73[v77];
											v1593 = 2 - 1;
										end
										if ((1251 < 1639) and (v1593 == 5)) then
											v77 = v85[592 - (276 + 313)];
											break;
										end
										if (v1593 == (4 - 2)) then
											v83[v85[2 + 0]] = v83[v85[2 + 1]][v85[1 + 3]];
											v77 = v77 + (1973 - (495 + 1477));
											v85 = v73[v77];
											v1593 = 8 - 5;
										end
										if (v1593 == (3 + 1)) then
											v63[v85[406 - (342 + 61)]] = v83[v85[1 + 1]];
											v77 = v77 + (166 - (4 + 161));
											v85 = v73[v77];
											v1593 = 4 + 1;
										end
									end
								else
									v83[v85[6 - 4]][v85[7 - 4]] = v85[501 - (322 + 175)];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]] = v63[v85[566 - (173 + 390)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[316 - (203 + 111)]][v85[1 + 2]] = v85[3 + 1];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[2 + 0]] = v63[v85[709 - (57 + 649)]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[387 - (328 + 56)]][v85[2 + 2]];
								end
							elseif (v86 <= (599 - (433 + 79))) then
								if (v86 <= 85) then
									local v326;
									v326 = v85[1 + 1];
									v83[v326] = v83[v326]();
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[9 - 6]] - v85[4];
									v77 = v77 + (4 - 3);
									v85 = v73[v77];
									v83[v85[2 + 0]][v85[3 + 0]] = v83[v85[1040 - (562 + 474)]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[3 - 1]] = v62[v85[908 - (76 + 829)]];
									v77 = v77 + (1674 - (1506 + 167));
									v85 = v73[v77];
									v326 = v85[3 - 1];
									v83[v326] = v83[v326]();
									v77 = v77 + (267 - (58 + 208));
									v85 = v73[v77];
									v83[v85[2 + 0]][v85[3]] = v83[v85[3 + 1]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v77 = v85[2 + 1];
								elseif (v86 == 86) then
									v83[v85[7 - 5]] = v83[v85[3]][v85[341 - (258 + 79)]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[5 - 2]][v83[v85[4]]];
									v77 = v77 + (1471 - (1219 + 251));
									v85 = v73[v77];
									v83[v85[1673 - (1231 + 440)]] = v83[v85[61 - (34 + 24)]][v85[3 + 1]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[8 - 5]][v83[v85[12 - 8]]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[6 - 4]][v83[v85[6 - 3]]] = v83[v85[1593 - (877 + 712)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v77 = v85[757 - (242 + 512)];
								else
									local v1615 = 0 - 0;
									while true do
										if (v1615 == (629 - (92 + 535))) then
											v85 = v73[v77];
											v83[v85[2 + 0]] = v63[v85[5 - 2]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v1615 = 1 + 2;
										end
										if (v1615 == (0 - 0)) then
											v83[v85[2 + 0]][v85[3 + 0]] = v85[1 + 3];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[3 - 1]] = v63[v85[3]];
											v1615 = 1 - 0;
										end
										if (v1615 == 3) then
											v83[v85[1787 - (1476 + 309)]] = v83[v85[3]][v85[4]];
											break;
										end
										if (v1615 == (1285 - (299 + 985))) then
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[6 - 4]][v85[96 - (86 + 7)]] = v85[16 - 12];
											v77 = v77 + 1 + 0;
											v1615 = 2;
										end
									end
								end
							elseif (v86 <= (969 - (672 + 208))) then
								if (v86 == (38 + 50)) then
									local v1616;
									v83[v85[134 - (14 + 118)]] = v63[v85[448 - (339 + 106)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[1398 - (440 + 955)]][v85[4 + 0]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2]] = v85[1 + 2];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[2 + 0]] = v85[356 - (260 + 93)];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[4 - 2]] = v85[4 - 1];
									v77 = v77 + (1975 - (1181 + 793));
									v85 = v73[v77];
									v1616 = v85[1 + 1];
									v83[v1616] = v83[v1616](v13(v83, v1616 + 1, v85[310 - (105 + 202)]));
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[812 - (352 + 458)]][v85[3]] = v83[v85[16 - 12]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v77 = v85[7 - 4];
								else
									v83[v85[2 + 0]][v85[8 - 5]] = v85[4];
									v77 = v77 + (950 - (438 + 511));
									v85 = v73[v77];
									v83[v85[1385 - (1262 + 121)]] = v63[v85[3]];
									v77 = v77 + (1069 - (728 + 340));
									v85 = v73[v77];
									v83[v85[2]][v85[1793 - (816 + 974)]] = v85[12 - 8];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[341 - (163 + 176)]] = v63[v85[8 - 5]];
									v77 = v77 + (4 - 3);
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[1813 - (1564 + 246)]][v85[349 - (124 + 221)]];
								end
							elseif (v86 > (62 + 28)) then
								local v1643 = 451 - (115 + 336);
								local v1644;
								local v1645;
								local v1646;
								local v1647;
								while true do
									if (v1643 == (8 - 4)) then
										v85 = v73[v77];
										v1647 = v85[1 + 1];
										v1645, v1646 = v76(v83[v1647](v13(v83, v1647 + (47 - (45 + 1)), v85[1 + 2])));
										v78 = (v1646 + v1647) - (1991 - (1282 + 708));
										v1644 = 0;
										v1643 = 1217 - (583 + 629);
									end
									if ((1 + 0) == v1643) then
										v85 = v73[v77];
										v83[v85[5 - 3]] = v63[v85[3]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1172 - (943 + 227)]] = v83[v85[2 + 1]][v85[1635 - (1539 + 92)]];
										v1643 = 1948 - (706 + 1240);
									end
									if (0 == v1643) then
										v1644 = nil;
										v1645, v1646 = nil;
										v1647 = nil;
										v83[v85[2]] = v85[261 - (81 + 177)];
										v77 = v77 + (2 - 1);
										v1643 = 1;
									end
									if ((2819 > 1478) and (v1643 == (259 - (212 + 45)))) then
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v83[v85[1948 - (708 + 1238)]] = v85[1 + 2];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v1643 = 1670 - (586 + 1081);
									end
									if (v1643 == 5) then
										for v6676 = v1647, v78 do
											v1644 = v1644 + (512 - (348 + 163));
											v83[v6676] = v1645[v1644];
										end
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v1647 = v85[282 - (215 + 65)];
										v83[v1647](v13(v83, v1647 + (2 - 1), v78));
										v1643 = 1865 - (1541 + 318);
									end
									if ((3152 > 2607) and (v1643 == 6)) then
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v77 = v85[2 + 1];
										break;
									end
									if ((3 + 0) == v1643) then
										v83[v85[2]] = v85[1753 - (1036 + 714)];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2 + 0]] = v85[3];
										v77 = v77 + 1;
										v1643 = 1284 - (883 + 397);
									end
								end
							else
								local v1648 = 590 - (563 + 27);
								local v1649;
								local v1650;
								local v1651;
								while true do
									if (v1648 == (3 - 2)) then
										v1651 = 0;
										for v6679 = v1649, v85[4] do
											local v6680 = 0;
											while true do
												if ((1986 - (1369 + 617)) == v6680) then
													v1651 = v1651 + (1488 - (85 + 1402));
													v83[v6679] = v1650[v1651];
													break;
												end
											end
										end
										break;
									end
									if (v1648 == (0 + 0)) then
										v1649 = v85[4 - 2];
										v1650 = {v83[v1649](v83[v1649 + (218 - (12 + 205))])};
										v1648 = 1 + 0;
									end
								end
							end
						elseif ((v86 <= (379 - 281)) or (721 > 3005)) then
							if (v86 <= (91 + 3)) then
								if (v86 <= (476 - (27 + 357))) then
									local v339 = 0;
									local v340;
									local v341;
									local v342;
									while true do
										if ((484 - (91 + 389)) == v339) then
											v85 = v73[v77];
											v83[v85[299 - (90 + 207)]] = v83[v85[1 + 2]];
											v77 = v77 + (862 - (706 + 155));
											v339 = 1800 - (730 + 1065);
										end
										if ((1565 - (1339 + 224)) == v339) then
											v85 = v73[v77];
											v83[v85[2]] = {};
											v77 = v77 + 1 + 0;
											v339 = 3 + 0;
										end
										if (v339 == (1 - 0)) then
											v342 = v85[845 - (268 + 575)];
											v83[v342] = v83[v342]();
											v77 = v77 + (1295 - (919 + 375));
											v339 = 5 - 3;
										end
										if (0 == v339) then
											v340 = nil;
											v341 = nil;
											v342 = nil;
											v339 = 972 - (180 + 791);
										end
										if (5 == v339) then
											v85 = v73[v77];
											v83[v85[1807 - (323 + 1482)]] = v85[1921 - (1177 + 741)];
											v77 = v77 + 1 + 0;
											v339 = 22 - 16;
										end
										if (v339 == 3) then
											v85 = v73[v77];
											v83[v85[1 + 1]] = v85[6 - 3];
											v77 = v77 + 1 + 0;
											v339 = 4;
										end
										if ((v339 == (115 - (96 + 13))) or (2169 == 2926)) then
											v85 = v73[v77];
											v342 = v85[2];
											v341 = v83[v342];
											v339 = 1928 - (962 + 959);
										end
										if (v339 == (16 - 9)) then
											v340 = v83[v342 + 2];
											if (v340 > (0 + 0)) then
												if (v341 > v83[v342 + (1352 - (461 + 890))]) then
													v77 = v85[3 + 0];
												else
													v83[v342 + (11 - 8)] = v341;
												end
											elseif (v341 < v83[v342 + (244 - (19 + 224))]) then
												v77 = v85[3 + 0];
											else
												v83[v342 + (201 - (37 + 161))] = v341;
											end
											break;
										end
									end
								elseif (v86 == (34 + 59)) then
									local v1652 = 0 + 0;
									while true do
										if (v1652 == 0) then
											v83[v85[2 + 0]][v85[64 - (60 + 1)]] = v85[927 - (826 + 97)];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[6 - 4]] = v63[v85[5 - 2]];
											v1652 = 686 - (375 + 310);
										end
										if (v1652 == (2000 - (1864 + 135))) then
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[1 + 1]][v85[2 + 1]] = v85[9 - 5];
											v77 = v77 + (1132 - (314 + 817));
											v1652 = 2;
										end
										if ((1631 > 695) and (v1652 == (2 + 0))) then
											v85 = v73[v77];
											v83[v85[216 - (32 + 182)]] = v63[v85[3 + 0]];
											v77 = v77 + (3 - 2);
											v85 = v73[v77];
											v1652 = 68 - (39 + 26);
										end
										if (v1652 == (147 - (54 + 90))) then
											v83[v85[200 - (45 + 153)]] = v83[v85[2 + 1]][v85[556 - (457 + 95)]];
											break;
										end
									end
								else
									local v1653;
									local v1654;
									local v1653, v1655;
									local v1656;
									v83[v85[2]] = v83[v85[3 + 0]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[4 - 2]] = v83[v85[3]][v83[v85[14 - 10]]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[3]] + v85[13 - 9];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[750 - (485 + 263)]] = v83[v85[710 - (575 + 132)]][v83[v85[865 - (750 + 111)]]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v1656 = v85[1012 - (445 + 565)];
									v1653, v1655 = v76(v83[v1656](v83[v1656 + 1 + 0]));
									v78 = (v1655 + v1656) - (1 + 0);
									v1654 = 0;
									for v4343 = v1656, v78 do
										local v4344 = 0;
										while true do
											if (v4344 == (0 - 0)) then
												v1654 = v1654 + 1;
												v83[v4343] = v1653[v1654];
												break;
											end
										end
									end
									v77 = v77 + 1;
									v85 = v73[v77];
									v1656 = v85[2];
									v1653 = {v83[v1656](v13(v83, v1656 + 1 + 0, v78))};
									v1654 = 310 - (189 + 121);
									for v4345 = v1656, v85[1 + 3] do
										local v4346 = 1347 - (634 + 713);
										while true do
											if (v4346 == 0) then
												v1654 = v1654 + (539 - (493 + 45));
												v83[v4345] = v1653[v1654];
												break;
											end
										end
									end
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[970 - (493 + 475)]] = v83[v85[1 + 2]];
									v77 = v77 + (785 - (158 + 626));
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[2 + 1]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2]] = v85[1 + 2];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v77 = v85[1094 - (1035 + 56)];
								end
							elseif (v86 <= (1055 - (114 + 845))) then
								if (v86 > 95) then
									local v1671;
									local v1672;
									v83[v85[1 + 1]] = v83[v85[7 - 4]][v85[4]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[1052 - (179 + 870)]][v85[4 - 0]];
									v77 = v77 + (879 - (827 + 51));
									v85 = v73[v77];
									v83[v85[5 - 3]] = v62[v85[2 + 1]];
									v77 = v77 + (474 - (95 + 378));
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[4 - 1]][v85[4 + 0]];
									v77 = v77 + (1012 - (334 + 677));
									v85 = v73[v77];
									v83[v85[7 - 5]] = v83[v85[3]][v85[4]];
									v77 = v77 + (1057 - (1049 + 7));
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[13 - 10]][v85[4]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[3]][v85[4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[5 - 3]][v85[5 - 2]] = v83[v85[2 + 2]];
									v77 = v77 + (1421 - (1004 + 416));
									v85 = v73[v77];
									v83[v85[1959 - (1621 + 336)]] = v62[v85[1942 - (337 + 1602)]];
									v77 = v77 + (1518 - (1014 + 503));
									v85 = v73[v77];
									v83[v85[1017 - (446 + 569)]] = v83[v85[1 + 2]][v85[11 - 7]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v1672 = v85[2];
									v1671 = v83[v85[5 - 2]];
									v83[v1672 + 1] = v1671;
									v83[v1672] = v1671[v85[1 + 3]];
									v77 = v77 + (506 - (223 + 282));
									v85 = v73[v77];
									v83[v85[1 + 1]] = v62[v85[4 - 1]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[672 - (623 + 47)]] = v83[v85[48 - (32 + 13)]][v85[3 + 1]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1803 - (1070 + 731)]] = v83[v85[3]][v85[4 + 0]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1406 - (1257 + 147)]] = v83[v85[3]][v85[2 + 2]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v1672 = v85[135 - (98 + 35)];
									v83[v1672] = v83[v1672](v13(v83, v1672 + 1 + 0, v85[3]));
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[6 - 4]] = v83[v85[3 + 0]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]] = v85[3 + 0];
								else
									local v1707;
									local v1708;
									v83[v85[1 + 1]] = v63[v85[560 - (395 + 162)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v1708 = v85[1943 - (816 + 1125)];
									v1707 = v83[v85[3 - 0]];
									v83[v1708 + (1149 - (701 + 447))] = v1707;
									v83[v1708] = v1707[v85[5 - 1]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[1343 - (391 + 950)]] = v85[7 - 4];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v1708 = v85[2];
									v83[v1708] = v83[v1708](v13(v83, v1708 + (2 - 1), v85[3 + 0]));
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v1708 = v85[7 - 5];
									v1707 = v83[v85[1525 - (251 + 1271)]];
									v83[v1708 + 1 + 0] = v1707;
									v83[v1708] = v1707[v85[10 - 6]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[2 - 0]] = v83[v85[3]];
									v77 = v77 + (1260 - (1147 + 112));
									v85 = v73[v77];
									v1708 = v85[2];
									v83[v1708](v13(v83, v1708 + 1 + 0, v85[5 - 2]));
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[699 - (335 + 362)]] = v85[3 + 0];
								end
							elseif (v86 > (145 - 48)) then
								v83[v85[5 - 3]] = v83[v85[11 - 8]] % v83[v85[19 - 15]];
							else
								local v1729 = 0 - 0;
								local v1730;
								while true do
									if (v1729 == (572 - (237 + 329))) then
										v85 = v73[v77];
										v1730 = v85[7 - 5];
										v83[v1730] = v83[v1730](v13(v83, v1730 + 1, v85[2 + 1]));
										v1729 = 4 + 3;
									end
									if ((1129 - (408 + 716)) == v1729) then
										v85 = v73[v77];
										v83[v85[7 - 5]] = v83[v85[824 - (344 + 477)]][v85[1 + 3]];
										v77 = v77 + (1762 - (1188 + 573));
										v1729 = 6;
									end
									if ((563 <= 1429) and ((10 - 6) == v1729)) then
										v85 = v73[v77];
										v83[v85[2 + 0]] = v83[v85[9 - 6]][v85[6 - 2]];
										v77 = v77 + (2 - 1);
										v1729 = 1534 - (508 + 1021);
									end
									if (v1729 == 0) then
										v1730 = nil;
										v83[v85[2 + 0]] = v83[v85[1169 - (228 + 938)]][v85[689 - (332 + 353)]];
										v77 = v77 + (1 - 0);
										v1729 = 2 - 1;
									end
									if (v1729 == 1) then
										v85 = v73[v77];
										v83[v85[2 + 0]] = v85[3];
										v77 = v77 + 1 + 0;
										v1729 = 2;
									end
									if (v1729 == 7) then
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v63[v85[426 - (18 + 405)]] = v83[v85[2]];
										break;
									end
									if ((371 <= 375) and (v1729 == (1 + 1))) then
										v85 = v73[v77];
										v83[v85[2 + 0]] = v63[v85[3 - 0]];
										v77 = v77 + (979 - (194 + 784));
										v1729 = 3;
									end
									if ((1450 == 1450) and (v1729 == (1773 - (694 + 1076)))) then
										v85 = v73[v77];
										v83[v85[1906 - (122 + 1782)]] = v83[v85[3 + 0]][v85[4 + 0]];
										v77 = v77 + 1 + 0;
										v1729 = 3 + 1;
									end
								end
							end
						elseif (v86 <= (295 - 194)) then
							if (v86 <= (92 + 7)) then
								local v343 = 1970 - (214 + 1756);
								while true do
									if ((v343 == (0 - 0)) or (4186 <= 1085)) then
										v83[v85[2]] = v83[v85[3]][v85[1 + 3]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v343 = 1;
									end
									if (v343 == 5) then
										v77 = v85[588 - (217 + 368)];
										break;
									end
									if ((8 - 5) == v343) then
										v83[v85[2 + 0]] = v83[v85[3 + 0]][v85[4]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v343 = 893 - (844 + 45);
									end
									if (v343 == 1) then
										v83[v85[286 - (242 + 42)]] = v83[v85[5 - 2]][v85[9 - 5]];
										v77 = v77 + (1201 - (132 + 1068));
										v85 = v73[v77];
										v343 = 2;
									end
									if (v343 == (2 - 0)) then
										v83[v85[2]] = v83[v85[1626 - (214 + 1409)]][v85[4 + 0]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v343 = 1637 - (497 + 1137);
									end
									if ((2625 <= 3547) and (v343 == (944 - (9 + 931)))) then
										v63[v85[292 - (181 + 108)]] = v83[v85[2 + 0]];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v343 = 5;
									end
								end
							elseif ((v86 > (296 - 196)) or (3249 > 4469)) then
								local v1731;
								v83[v85[1 + 1]] = v85[2 + 1];
								v77 = v77 + (477 - (296 + 180));
								v85 = v73[v77];
								v1731 = v85[1405 - (1183 + 220)];
								v83[v1731](v83[v1731 + (1266 - (1037 + 228))]);
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v62[v85[3]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[5 - 3]] = v85[3];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[6 - 4]] = v85[3];
								v77 = v77 + (735 - (527 + 207));
								v85 = v73[v77];
								v1731 = v85[529 - (187 + 340)];
								v83[v1731](v13(v83, v1731 + (1871 - (1298 + 572)), v85[6 - 3]));
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v85[173 - (144 + 26)];
							else
								local v1743;
								v83[v85[4 - 2]] = v83[v85[6 - 3]][v85[2 + 2]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v85[8 - 5];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[9 - 7]] = v63[v85[3]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 - 0]] = v83[v85[3 + 0]][v85[4]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[205 - (5 + 197)]][v85[690 - (339 + 347)]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[6 - 4]] = v85[379 - (365 + 11)];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[11 - 8]][v83[v85[9 - 5]]];
								v77 = v77 + (925 - (837 + 87));
								v85 = v73[v77];
								v1743 = v85[3 - 1];
								v83[v1743] = v83[v1743](v13(v83, v1743 + (1671 - (837 + 833)), v85[1 + 2]));
								v77 = v77 + (1388 - (356 + 1031));
								v85 = v73[v77];
								v63[v85[2 + 1]] = v83[v85[1648 - (73 + 1573)]];
							end
						elseif (v86 <= 103) then
							if (v86 == (1490 - (1307 + 81))) then
								v83[v85[236 - (7 + 227)]] = v83[v85[3]] * v85[6 - 2];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[169 - (90 + 76)]] + v83[v85[12 - 8]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[3 + 0]] * v85[4];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[7 - 5]] = v83[v85[263 - (197 + 63)]] + v83[v85[1 + 3]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[1 + 2]] + v83[v85[3 + 1]];
								v77 = v77 + 1;
								v85 = v73[v77];
								do
									return v83[v85[2]];
								end
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v77 = v85[3 - 0];
							else
								local v1768 = 1369 - (618 + 751);
								while true do
									if ((3154 >= 627) and (v1768 == (3 + 0))) then
										v63[v85[1913 - (206 + 1704)]] = v83[v85[2 - 0]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v77 = v85[3];
										break;
									end
									if (v1768 == (1 + 1)) then
										v85 = v73[v77];
										v83[v85[1277 - (155 + 1120)]] = v83[v85[1509 - (396 + 1110)]][v85[4]];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v1768 = 1 + 2;
									end
									if ((0 + 0) == v1768) then
										v83[v85[2]] = v83[v85[3 + 0]][v85[980 - (230 + 746)]];
										v77 = v77 + (602 - (473 + 128));
										v85 = v73[v77];
										v83[v85[50 - (39 + 9)]] = v83[v85[269 - (38 + 228)]][v85[4]];
										v1768 = 1 - 0;
									end
									if ((105 < 488) and (v1768 == (474 - (106 + 367)))) then
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v83[v85[1865 - (354 + 1508)]][v85[12 - 8]];
										v77 = v77 + 1 + 0;
										v1768 = 2;
									end
								end
							end
						elseif (v86 == (61 + 43)) then
							local v1769 = 0 - 0;
							local v1770;
							while true do
								if (v1769 == 4) then
									v85 = v73[v77];
									v83[v85[1246 - (334 + 910)]] = v83[v85[3]][v85[4]];
									v77 = v77 + (896 - (92 + 803));
									v1769 = 5;
								end
								if (v1769 == (1 + 0)) then
									v85 = v73[v77];
									v83[v85[1183 - (1035 + 146)]] = v85[3];
									v77 = v77 + (617 - (230 + 386));
									v1769 = 2 + 0;
								end
								if (v1769 == 0) then
									v1770 = nil;
									v83[v85[1512 - (353 + 1157)]] = v83[v85[1117 - (53 + 1061)]][v85[1639 - (1568 + 67)]];
									v77 = v77 + 1 + 0;
									v1769 = 1 + 0;
								end
								if (v1769 == (7 - 4)) then
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[8 - 5]][v85[9 - 5]];
									v77 = v77 + 1 + 0;
									v1769 = 1216 - (615 + 597);
								end
								if (v1769 == 5) then
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[3 - 0]][v85[4 + 0]];
									v77 = v77 + 1 + 0;
									v1769 = 6;
								end
								if (v1769 == (4 + 3)) then
									v77 = v77 + (1900 - (1056 + 843));
									v85 = v73[v77];
									v63[v85[5 - 2]] = v83[v85[2 - 0]];
									break;
								end
								if (v1769 == (5 - 3)) then
									v85 = v73[v77];
									v83[v85[2]] = v63[v85[2 + 1]];
									v77 = v77 + (1977 - (286 + 1690));
									v1769 = 914 - (98 + 813);
								end
								if ((2 + 4) == v1769) then
									v85 = v73[v77];
									v1770 = v85[4 - 2];
									v83[v1770] = v83[v1770](v13(v83, v1770 + 1 + 0, v85[510 - (263 + 244)]));
									v1769 = 6 + 1;
								end
							end
						else
							local v1771 = 1687 - (1502 + 185);
							while true do
								if (0 == v1771) then
									v83[v85[2]] = v83[v85[1 + 2]][v85[4]];
									v77 = v77 + (4 - 3);
									v85 = v73[v77];
									v1771 = 2 - 1;
								end
								if ((v1771 == (1529 - (629 + 898))) or (2631 <= 1378)) then
									v83[v85[5 - 3]] = v83[v85[7 - 4]][v85[4]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v1771 = 3;
								end
								if (v1771 == 3) then
									v83[v85[2]] = v83[v85[368 - (12 + 353)]][v85[1915 - (1680 + 231)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v1771 = 4;
								end
								if ((v1771 == (1 + 0)) or (219 == 719)) then
									v83[v85[1151 - (212 + 937)]] = v83[v85[2 + 1]][v85[1066 - (111 + 951)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v1771 = 29 - (18 + 9);
								end
								if ((v1771 == (1 + 3)) or (1670 >= 4496)) then
									v63[v85[537 - (31 + 503)]] = v83[v85[1634 - (595 + 1037)]];
									v77 = v77 + (1445 - (189 + 1255));
									v85 = v73[v77];
									v1771 = 2 + 3;
								end
								if ((3442 <= 4672) and (v1771 == 5)) then
									v77 = v85[3];
									break;
								end
							end
						end
					elseif (v86 <= 158) then
						if ((v86 <= 131) or (4548 <= 2298)) then
							if (v86 <= (182 - 64)) then
								if (v86 <= (1390 - (1170 + 109))) then
									if ((v86 <= (1925 - (348 + 1469))) or (4409 < 2960)) then
										if (v86 <= (1395 - (1115 + 174))) then
											local v344;
											local v345;
											v345 = v85[4 - 2];
											v344 = v83[v85[3]];
											v83[v345 + 1] = v344;
											v83[v345] = v344[v85[1018 - (85 + 929)]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[1869 - (1151 + 716)]] = v85[2 + 1];
											v77 = v77 + 1;
											v85 = v73[v77];
											v345 = v85[2 + 0];
											v83[v345] = v83[v345](v13(v83, v345 + 1, v85[1707 - (95 + 1609)]));
											v77 = v77 + (3 - 2);
											v85 = v73[v77];
											v83[v85[760 - (364 + 394)]] = v83[v85[3 + 0]][v85[4]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v345 = v85[1 + 1];
											v344 = v83[v85[3 + 0]];
											v83[v345 + 1 + 0] = v344;
											v83[v345] = v344[v85[4]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v345 = v85[2];
											v83[v345](v83[v345 + 1 + 0]);
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[1 + 1]] = v62[v85[959 - (719 + 237)]];
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[2 + 0]] = v83[v85[3]][v85[4]];
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v345 = v85[2];
											v344 = v83[v85[8 - 5]];
											v83[v345 + 1] = v344;
											v83[v345] = v344[v85[9 - 5]];
											v77 = v77 + (1992 - (761 + 1230));
											v85 = v73[v77];
											v83[v85[195 - (80 + 113)]] = v85[2 + 1];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v345 = v85[2];
											v83[v345] = v83[v345](v13(v83, v345 + 1 + 0, v85[11 - 8]));
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											if ((3311 == 3311) and v83[v85[1 + 1]]) then
												v77 = v77 + (1244 - (965 + 278));
											else
												v77 = v85[1732 - (1391 + 338)];
											end
										elseif ((650 > 598) and (v86 > (273 - 166))) then
											v83[v85[2 + 0]][v85[6 - 3]] = v85[2 + 2];
											v77 = v77 + (1409 - (496 + 912));
											v85 = v73[v77];
											v83[v85[6 - 4]] = v63[v85[3]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[3 - 1]][v85[3]] = v85[4];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2]] = v63[v85[1333 - (1190 + 140)]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[720 - (317 + 401)]] = v83[v85[952 - (303 + 646)]][v85[13 - 9]];
										else
											v83[v85[1734 - (1675 + 57)]] = v83[v85[3]][v85[3 + 1]];
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[1 + 1]] = v83[v85[3]][v85[981 - (338 + 639)]];
											v77 = v77 + (380 - (320 + 59));
											v85 = v73[v77];
											v83[v85[2 + 0]] = v83[v85[735 - (628 + 104)]][v85[4 - 0]];
											v77 = v77 + (1892 - (439 + 1452));
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[3]][v85[4]];
											v77 = v77 + (1948 - (105 + 1842));
											v85 = v73[v77];
											v63[v85[13 - 10]] = v83[v85[4 - 2]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v77 = v85[14 - 11];
										end
									elseif (v86 <= (5 + 104)) then
										v83[v85[2]][v83[v85[4 - 1]]] = v85[3 + 1];
									elseif ((4993 == 4993) and (v86 == (1274 - (274 + 890)))) then
										local v1796;
										v83[v85[2 + 0]] = v83[v85[3 + 0]][v85[2 + 2]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2]] = v85[2 + 1];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[821 - (731 + 88)]] = v63[v85[3 + 0]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v83[v85[3 - 0]][v85[12 - 8]];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v83[v85[3 - 1]] = v83[v85[3 + 0]][v85[4]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v83[v85[1 + 2]][v85[3 + 1]];
										v77 = v77 + (159 - (139 + 19));
										v85 = v73[v77];
										v1796 = v85[1 + 1];
										v83[v1796] = v83[v1796](v13(v83, v1796 + (1994 - (1687 + 306)), v85[10 - 7]));
										v77 = v77 + (1155 - (1018 + 136));
										v85 = v73[v77];
										v63[v85[1 + 2]] = v83[v85[8 - 6]];
									else
										local v1813 = 815 - (117 + 698);
										local v1814;
										while true do
											if (v1813 == (481 - (305 + 176))) then
												v1814 = nil;
												v83[v85[1 + 1]] = v85[3 + 0];
												v77 = v77 + (1 - 0);
												v85 = v73[v77];
												v1813 = 1 + 0;
											end
											if (v1813 == (6 - 2)) then
												v85 = v73[v77];
												v83[v85[2]] = v85[6 - 3];
												v77 = v77 + (1 - 0);
												v85 = v73[v77];
												v1813 = 265 - (159 + 101);
											end
											if ((3751 == 3751) and (v1813 == (28 - 22))) then
												v83[v85[2]] = v85[3];
												v77 = v77 + (3 - 2);
												v85 = v73[v77];
												v77 = v85[2 + 1];
												break;
											end
											if ((v1813 == (6 - 4)) or (744 >= 3929)) then
												v83[v1814](v13(v83, v1814 + 1, v85[5 - 2]));
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v83[v85[268 - (112 + 154)]] = v62[v85[6 - 3]];
												v1813 = 34 - (21 + 10);
											end
											if ((3482 == 3482) and (v1813 == (1724 - (531 + 1188)))) then
												v1814 = v85[2 + 0];
												v83[v1814](v13(v83, v1814 + (664 - (96 + 567)), v85[3 - 0]));
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v1813 = 6;
											end
											if ((3 - 2) == v1813) then
												v83[v85[2]] = v85[3];
												v77 = v77 + 1;
												v85 = v73[v77];
												v1814 = v85[1697 - (867 + 828)];
												v1813 = 4 - 2;
											end
											if ((3311 >= 556) and (v1813 == (10 - 7))) then
												v77 = v77 + (2 - 1);
												v85 = v73[v77];
												v83[v85[2 - 0]] = v85[3];
												v77 = v77 + 1 + 0;
												v1813 = 4;
											end
										end
									end
								elseif (v86 <= (203 - 89)) then
									if (v86 <= (883 - (134 + 637))) then
										local v371;
										local v372;
										v83[v85[1 + 1]] = v83[v85[1160 - (775 + 382)]][v85[5 - 1]];
										v77 = v77 + (608 - (45 + 562));
										v85 = v73[v77];
										v83[v85[864 - (545 + 317)]] = v83[v85[3 - 0]][v85[1030 - (763 + 263)]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1752 - (512 + 1238)]] = v83[v85[1597 - (272 + 1322)]][v85[7 - 3]];
										v77 = v77 + (1247 - (533 + 713));
										v85 = v73[v77];
										v372 = v85[30 - (14 + 14)];
										v371 = v83[v85[828 - (499 + 326)]];
										v83[v372 + (1 - 0)] = v371;
										v83[v372] = v371[v85[4]];
										v77 = v77 + (425 - (104 + 320));
										v85 = v73[v77];
										v83[v85[1999 - (1929 + 68)]] = v85[1326 - (1206 + 117)];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v372 = v85[1594 - (683 + 909)];
										v83[v372] = v83[v372](v13(v83, v372 + (2 - 1), v85[5 - 2]));
										v77 = v77 + (778 - (772 + 5));
										v85 = v73[v77];
										if ((4670 >= 3847) and not v83[v85[1429 - (19 + 1408)]]) then
											v77 = v77 + 1;
										else
											v77 = v85[291 - (134 + 154)];
										end
									elseif (v86 > (186 - 73)) then
										if ((v85[6 - 4] == v83[v85[2 + 2]]) or (2862 < 2073)) then
											v77 = v77 + 1;
										else
											v77 = v85[3 + 0];
										end
									else
										v83[v85[2]] = v83[v85[205 - (10 + 192)]] * v83[v85[51 - (13 + 34)]];
									end
								elseif (v86 <= (1405 - (342 + 947))) then
									if (v86 == (474 - 359)) then
										local v1817 = 1708 - (119 + 1589);
										local v1818;
										local v1819;
										while true do
											if ((2183 < 3699) and (v1817 == 4)) then
												v83[v1819 + (2 - 1)] = v1818;
												v83[v1819] = v1818[v83[v85[5 - 1]]];
												v77 = v77 + (553 - (545 + 7));
												v85 = v73[v77];
												v1817 = 14 - 9;
											end
											if (v1817 == 6) then
												v83[v1819] = v83[v1819](v13(v83, v1819 + 1 + 0, v85[1706 - (494 + 1209)]));
												v77 = v77 + (2 - 1);
												v85 = v73[v77];
												v1819 = v85[1000 - (197 + 801)];
												v1817 = 13 - 6;
											end
											if (((33 - 26) == v1817) or (1724 == 3136)) then
												v1818 = v83[v85[957 - (919 + 35)]];
												v83[v1819 + 1] = v1818;
												v83[v1819] = v1818[v85[4 + 0]];
												break;
											end
											if ((v1817 == (20 - 15)) or (1173 == 918)) then
												v83[v85[469 - (369 + 98)]] = v85[1118 - (400 + 715)];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v1819 = v85[2];
												v1817 = 3 + 3;
											end
											if (v1817 == (1325 - (744 + 581))) then
												v1818 = nil;
												v1819 = nil;
												v83[v85[2 + 0]] = v83[v85[3]][v83[v85[1626 - (653 + 969)]]];
												v77 = v77 + (1 - 0);
												v1817 = 1632 - (12 + 1619);
											end
											if (v1817 == (164 - (103 + 60))) then
												v85 = v73[v77];
												v83[v85[2]] = v85[14 - 11];
												v77 = v77 + 1;
												v85 = v73[v77];
												v1817 = 8 - 6;
											end
											if (v1817 == 2) then
												v83[v85[9 - 7]] = v83[v85[3]][v83[v85[4]]];
												v77 = v77 + (1663 - (710 + 952));
												v85 = v73[v77];
												v83[v85[1870 - (555 + 1313)]] = v85[3 + 0];
												v1817 = 3;
											end
											if (v1817 == (3 + 0)) then
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v1819 = v85[2];
												v1818 = v83[v85[3]];
												v1817 = 4;
											end
										end
									else
										local v1820 = 1468 - (1261 + 207);
										local v1821;
										while true do
											if ((v1820 == (255 - (245 + 7))) or (4813 <= 4012)) then
												v85 = v73[v77];
												v1821 = v85[2];
												v83[v1821] = v83[v1821](v13(v83, v1821 + (748 - (212 + 535)), v85[3]));
												v1820 = 19 - 15;
											end
											if (v1820 == 1) then
												v85 = v73[v77];
												v83[v85[1478 - (905 + 571)]] = v85[13 - 10];
												v77 = v77 + (1 - 0);
												v1820 = 2;
											end
											if (0 == v1820) then
												v1821 = nil;
												v83[v85[2]] = v83[v85[11 - 8]][v85[1 + 3]];
												v77 = v77 + (1464 - (522 + 941));
												v1820 = 1512 - (292 + 1219);
											end
											if (v1820 == 7) then
												v77 = v77 + (1113 - (787 + 325));
												v85 = v73[v77];
												v77 = v85[8 - 5];
												break;
											end
											if ((1319 <= 2004) and (v1820 == (6 + 0))) then
												v77 = v77 + (2 - 1);
												v85 = v73[v77];
												v83[v85[536 - (424 + 110)]] = v85[3];
												v1820 = 7;
											end
											if ((1096 > 1067) and (v1820 == (3 + 1))) then
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v83[v85[1 + 1]] = v83[v85[315 - (33 + 279)]];
												v1820 = 5;
											end
											if ((v1820 == (1 + 4)) or (1485 < 247)) then
												v77 = v77 + (1354 - (1338 + 15));
												v85 = v73[v77];
												v83[v85[1425 - (528 + 895)]][v85[2 + 1]] = v85[1928 - (1606 + 318)];
												v1820 = 1825 - (298 + 1521);
											end
											if (v1820 == (8 - 6)) then
												v85 = v73[v77];
												v83[v85[312 - (154 + 156)]] = v63[v85[11 - 8]];
												v77 = v77 + (1 - 0);
												v1820 = 1118 - (712 + 403);
											end
										end
									end
								elseif (v86 > (567 - (168 + 282))) then
									v83[v85[3 - 1]][v85[3 + 0]] = v85[1 + 3];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[1453 - (1242 + 209)]] = v63[v85[682 - (20 + 659)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]][v85[3 + 0]] = v85[5 - 1];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[621 - (427 + 192)]] = v63[v85[6 - 3]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[1950 - (1427 + 520)]][v85[3 + 1]];
								else
									local v1833 = 0 - 0;
									local v1834;
									local v1835;
									while true do
										if ((2515 < 2849) and (v1833 == 1)) then
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[1234 - (712 + 520)]] = v83[v85[3]][v85[9 - 5]];
											v1833 = 1348 - (565 + 781);
										end
										if ((1415 <= 2454) and (v1833 == (571 - (35 + 530)))) then
											v83[v1835] = v83[v1835](v13(v83, v1835 + 1, v85[3]));
											v77 = v77 + 1;
											v85 = v73[v77];
											v1833 = 4 + 3;
										end
										if (v1833 == (6 - 4)) then
											v77 = v77 + (1379 - (1330 + 48));
											v85 = v73[v77];
											v1835 = v85[2];
											v1833 = 3 + 0;
										end
										if ((4539 > 927) and (v1833 == (1 + 2))) then
											v1834 = v83[v85[3]];
											v83[v1835 + (1 - 0)] = v1834;
											v83[v1835] = v1834[v85[17 - 13]];
											v1833 = 1173 - (854 + 315);
										end
										if ((v1833 == (16 - 11)) or (3148 < 146)) then
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v1835 = v85[46 - (31 + 13)];
											v1833 = 8 - 2;
										end
										if (v1833 == 4) then
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[2 + 0]] = v85[3];
											v1833 = 568 - (281 + 282);
										end
										if (v1833 == 0) then
											v1834 = nil;
											v1835 = nil;
											v83[v85[5 - 3]] = v83[v85[2 + 1]][v85[953 - (216 + 733)]];
											v1833 = 1848 - (137 + 1710);
										end
										if (v1833 == (19 - 12)) then
											if (not v83[v85[540 - (100 + 438)]] or (2869 < 590)) then
												v77 = v77 + 1;
											else
												v77 = v85[1368 - (205 + 1160)];
											end
											break;
										end
									end
								end
							elseif (v86 <= (84 + 40)) then
								if ((3718 == 3718) and (v86 <= (62 + 59))) then
									if (v86 <= (1424 - (535 + 770))) then
										local v388;
										v83[v85[2]] = v63[v85[1 + 2]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1996 - (211 + 1783)]] = v85[1 + 2];
										v77 = v77 + (1430 - (1236 + 193));
										v85 = v73[v77];
										v83[v85[912 - (793 + 117)]] = v63[v85[1895 - (1607 + 285)]];
										v77 = v77 + (861 - (747 + 113));
										v85 = v73[v77];
										v388 = v85[2];
										do
											return v83[v388](v13(v83, v388 + 1, v85[3]));
										end
										v77 = v77 + (1977 - (80 + 1896));
										v85 = v73[v77];
										v388 = v85[9 - 7];
										do
											return v13(v83, v388, v78);
										end
									elseif (v86 > 120) then
										local v1836 = 0 - 0;
										local v1837;
										local v1838;
										while true do
											if (v1836 == (5 + 0)) then
												v83[v1838] = v83[v1838](v13(v83, v1838 + (2 - 1), v85[2 + 1]));
												v77 = v77 + 1;
												v85 = v73[v77];
												v1836 = 17 - 11;
											end
											if (v1836 == 2) then
												v1837 = v83[v85[3]];
												v83[v1838 + 1 + 0] = v1837;
												v83[v1838] = v1837[v85[2 + 2]];
												v1836 = 6 - 3;
											end
											if (v1836 == (457 - (246 + 208))) then
												v77 = v77 + (1893 - (614 + 1278));
												v85 = v73[v77];
												v83[v85[1 + 1]] = v85[3];
												v1836 = 4;
											end
											if (v1836 == (320 - (249 + 65))) then
												if ((2850 > 2331) and v83[v85[4 - 2]]) then
													v77 = v77 + (1276 - (726 + 549));
												else
													v77 = v85[3 + 0];
												end
												break;
											end
											if (v1836 == (1424 - (916 + 508))) then
												v1837 = nil;
												v1838 = nil;
												v63[v85[9 - 6]] = v83[v85[2 + 0]];
												v1836 = 324 - (140 + 183);
											end
											if (v1836 == (1 + 0)) then
												v77 = v77 + (565 - (297 + 267));
												v85 = v73[v77];
												v1838 = v85[2 + 0];
												v1836 = 344 - (37 + 305);
											end
											if (4 == v1836) then
												v77 = v77 + (1267 - (323 + 943));
												v85 = v73[v77];
												v1838 = v85[2];
												v1836 = 2 + 3;
											end
										end
									else
										local v1839 = 0 - 0;
										local v1840;
										local v1841;
										local v1842;
										local v1843;
										while true do
											if ((v1839 == (1535 - (394 + 1141))) or (2234 == 1898)) then
												v1840 = nil;
												v1841 = nil;
												v1840, v1842 = nil;
												v1843 = nil;
												v83[v85[2]] = v62[v85[2 + 1]];
												v1839 = 1 + 0;
											end
											if (v1839 == (1 + 5)) then
												v77 = v77 + (1 - 0);
												v85 = v73[v77];
												v83[v85[2 - 0]] = v63[v85[3 + 0]];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v1839 = 536 - (87 + 442);
											end
											if (v1839 == (807 - (13 + 792))) then
												v83[v85[2 + 0]] = v83[v85[2 + 1]];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v1843 = v85[1867 - (1231 + 634)];
												v1840, v1842 = v76(v83[v1843](v83[v1843 + 1]));
												v1839 = 1769 - (1362 + 404);
											end
											if (v1839 == (2 - 1)) then
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v83[v85[5 - 3]] = v62[v85[1019 - (660 + 356)]];
												v77 = v77 + (1 - 0);
												v85 = v73[v77];
												v1839 = 2 + 0;
											end
											if (v1839 == (1954 - (1111 + 839))) then
												v1843 = v85[953 - (496 + 455)];
												v1840 = {v83[v1843](v13(v83, v1843 + (1 - 0), v78))};
												v1841 = 1136 - (441 + 695);
												for v6685 = v1843, v85[4] do
													v1841 = v1841 + (2 - 1);
													v83[v6685] = v1840[v1841];
												end
												v77 = v77 + (1 - 0);
												v1839 = 5;
											end
											if ((v1839 == (14 - 11)) or (4464 < 2685)) then
												v78 = (v1842 + v1843) - 1;
												v1841 = 0 + 0;
												for v6688 = v1843, v78 do
													v1841 = v1841 + 1;
													v83[v6688] = v1840[v1841];
												end
												v77 = v77 + 1;
												v85 = v73[v77];
												v1839 = 1842 - (286 + 1552);
											end
											if ((v1839 == (1284 - (1016 + 261))) or (2659 >= 3043)) then
												v83[v85[1322 - (708 + 612)]] = v83[v85[8 - 5]][v85[2 + 2]];
												v77 = v77 + (380 - (113 + 266));
												v85 = v73[v77];
												if not v83[v85[1172 - (979 + 191)]] then
													v77 = v77 + (1 - 0);
												else
													v77 = v85[1738 - (339 + 1396)];
												end
												break;
											end
											if (v1839 == (2 + 3)) then
												v85 = v73[v77];
												v63[v85[3 + 0]] = v83[v85[3 - 1]];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v63[v85[1 + 2]] = v83[v85[349 - (187 + 160)]];
												v1839 = 13 - 7;
											end
										end
									end
								elseif (v86 <= (420 - 298)) then
									local v398 = 0;
									local v399;
									while true do
										if (v398 == (1 + 0)) then
											v85 = v73[v77];
											v83[v85[6 - 4]] = v85[1 + 2];
											v77 = v77 + 1 + 0;
											v398 = 3 - 1;
										end
										if ((328 - (56 + 272)) == v398) then
											v399 = nil;
											v83[v85[2 + 0]] = v83[v85[3 + 0]];
											v77 = v77 + (2 - 1);
											v398 = 1 + 0;
										end
										if ((v398 == (643 - (455 + 185))) or (2211 > 3348)) then
											v85 = v73[v77];
											v399 = v85[2];
											v83[v399] = v83[v399](v13(v83, v399 + 1, v85[3]));
											v398 = 792 - (757 + 31);
										end
										if (v398 == 2) then
											v85 = v73[v77];
											v83[v85[2001 - (762 + 1237)]] = v85[5 - 2];
											v77 = v77 + (270 - (265 + 4));
											v398 = 7 - 4;
										end
										if (v398 == (3 + 1)) then
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											if (v83[v85[5 - 3]] == v85[1 + 3]) then
												v77 = v77 + (2 - 1);
											else
												v77 = v85[3];
											end
											break;
										end
									end
								elseif (v86 == (265 - 142)) then
									local v1844 = 0 - 0;
									local v1845;
									local v1846;
									local v1847;
									while true do
										if ((4759 >= 2651) and ((1738 - (1691 + 43)) == v1844)) then
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v1847 = v85[9 - 6];
											v1846 = v83[v1847];
											v1844 = 2 + 3;
										end
										if (5 == v1844) then
											for v6691 = v1847 + (3 - 2), v85[180 - (127 + 49)] do
												v1846 = v1846 .. v83[v6691];
											end
											v83[v85[1682 - (281 + 1399)]] = v1846;
											v77 = v77 + (1660 - (184 + 1475));
											v85 = v73[v77];
											v1844 = 6;
										end
										if ((1 - 0) == v1844) then
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[4 - 2]] = v83[v85[2 + 1]];
											v77 = v77 + 1 + 0;
											v1844 = 1293 - (260 + 1031);
										end
										if (v1844 == 6) then
											v1845 = v85[1179 - (313 + 864)];
											v83[v1845](v83[v1845 + (693 - (655 + 37))]);
											v77 = v77 + 1;
											v85 = v73[v77];
											v1844 = 6 + 1;
										end
										if (v1844 == (4 - 1)) then
											v83[v85[4 - 2]] = v63[v85[3]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[1 + 1]] = v83[v85[3]][v85[4 + 0]];
											v1844 = 7 - 3;
										end
										if (v1844 == (772 - (383 + 387))) then
											v85 = v73[v77];
											v83[v85[1 + 1]] = v85[1 + 2];
											v77 = v77 + (3 - 2);
											v85 = v73[v77];
											v1844 = 1 + 2;
										end
										if (v1844 == (2 + 5)) then
											v77 = v85[513 - (304 + 206)];
											break;
										end
										if (v1844 == (225 - (182 + 43))) then
											v1845 = nil;
											v1846 = nil;
											v1847 = nil;
											v83[v85[777 - (264 + 511)]] = v85[1 + 2];
											v1844 = 2 - 1;
										end
									end
								else
									v83[v85[983 - (128 + 853)]] = v83[v85[1705 - (1635 + 67)]][v83[v85[1 + 3]]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[199 - (131 + 66)]] = v83[v85[10 - 7]][v85[19 - 15]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[2 + 1]][v85[5 - 1]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[1607 - (306 + 1299)]][v83[v85[3]]] = v83[v85[2 + 2]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v77 = v85[7 - 4];
								end
							elseif ((3477 == 3477) and (v86 <= (916 - (671 + 118)))) then
								if (v86 <= (492 - 367)) then
									local v400;
									local v401;
									local v400, v402;
									local v403;
									v83[v85[2]] = v83[v85[79 - (73 + 3)]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[14 - 11]][v83[v85[9 - 5]]];
									v77 = v77 + (1756 - (1668 + 87));
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[1902 - (296 + 1603)]] + v85[110 - (79 + 27)];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[1010 - (700 + 307)]][v83[v85[3 + 1]]];
									v77 = v77 + (1800 - (1477 + 322));
									v85 = v73[v77];
									v403 = v85[2];
									v400, v402 = v76(v83[v403](v83[v403 + 1 + 0]));
									v78 = (v402 + v403) - (2 - 1);
									v401 = 0;
									for v902 = v403, v78 do
										v401 = v401 + 1;
										v83[v902] = v400[v401];
									end
									v77 = v77 + 1;
									v85 = v73[v77];
									v403 = v85[2];
									v400 = {v83[v403](v13(v83, v403 + 1, v78))};
									v401 = 0 - 0;
									for v905 = v403, v85[4] do
										local v906 = 0 + 0;
										while true do
											if (v906 == (0 - 0)) then
												v401 = v401 + (2 - 1);
												v83[v905] = v400[v401];
												break;
											end
										end
									end
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[3]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[2 - 0]] = v83[v85[5 - 2]];
									v77 = v77 + (1787 - (20 + 1766));
									v85 = v73[v77];
									v83[v85[3 - 1]] = v85[812 - (88 + 721)];
								elseif ((4554 >= 1744) and (v86 > (125 + 1))) then
									local v1858;
									local v1859;
									v83[v85[2]] = v83[v85[3]][v85[4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[2 + 1]][v85[2 + 2]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[3 - 1]][v85[440 - (93 + 344)]] = v83[v85[4]];
									v77 = v77 + (1214 - (960 + 253));
									v85 = v73[v77];
									v1859 = v85[2];
									v1858 = v83[v85[1 + 2]];
									v83[v1859 + 1] = v1858;
									v83[v1859] = v1858[v85[11 - 7]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[1418 - (74 + 1342)]] = v85[1 + 2];
									v77 = v77 + (475 - (33 + 441));
									v85 = v73[v77];
									v1859 = v85[5 - 3];
									v83[v1859](v13(v83, v1859 + (1420 - (64 + 1355)), v85[3]));
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2]] = v85[14 - (5 + 6)];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v77 = v85[1 + 2];
								else
									v83[v85[448 - (369 + 77)]] = v83[v85[3]][v85[1 + 3]];
									v77 = v77 + (739 - (438 + 300));
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[297 - (50 + 244)]][v83[v85[1205 - (95 + 1106)]]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[9 - 7]] = #v83[v85[3]];
									v77 = v77 + (1897 - (1741 + 155));
									v85 = v73[v77];
									v83[v85[5 - 3]][v83[v85[3]]] = v83[v85[4]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v77 = v85[3];
								end
							elseif (v86 <= (269 - 140)) then
								if (v86 > (64 + 64)) then
									local v1884;
									local v1885;
									local v1886;
									local v1887;
									local v1886, v1888;
									local v1889;
									v83[v85[2]] = v83[v85[3]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[7 - 4]][v83[v85[9 - 5]]];
									v77 = v77 + (1778 - (1263 + 514));
									v85 = v73[v77];
									v83[v85[2]] = v62[v85[500 - (73 + 424)]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[310 - (93 + 215)]] = v83[v85[10 - 7]];
									v77 = v77 + (1936 - (1756 + 179));
									v85 = v73[v77];
									v83[v85[1681 - (550 + 1129)]] = v83[v85[3]] + v85[111 - (57 + 50)];
									v77 = v77 + (630 - (30 + 599));
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[3]][v85[4 - 0]];
									v77 = v77 + (919 - (794 + 124));
									v85 = v73[v77];
									v1889 = v85[1 + 1];
									v1886, v1888 = v76(v83[v1889](v13(v83, v1889 + 1, v85[1 + 2])));
									v78 = (v1888 + v1889) - (1 - 0);
									v1887 = 1927 - (1299 + 628);
									for v4375 = v1889, v78 do
										local v4376 = 0;
										while true do
											if (v4376 == (0 - 0)) then
												v1887 = v1887 + (2 - 1);
												v83[v4375] = v1886[v1887];
												break;
											end
										end
									end
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v1889 = v85[2];
									v1886, v1888 = v76(v83[v1889](v13(v83, v1889 + 1, v78)));
									v78 = (v1888 + v1889) - (2 - 1);
									v1887 = 1445 - (335 + 1110);
									for v4377 = v1889, v78 do
										v1887 = v1887 + 1 + 0;
										v83[v4377] = v1886[v1887];
									end
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v1889 = v85[3 - 1];
									v1886 = {v83[v1889](v13(v83, v1889 + 1 + 0, v78))};
									v1887 = 1278 - (243 + 1035);
									for v4380 = v1889, v85[9 - 5] do
										local v4381 = 0;
										while true do
											if (v4381 == (0 - 0)) then
												v1887 = v1887 + 1;
												v83[v4380] = v1886[v1887];
												break;
											end
										end
									end
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[8 - 6]] = v83[v85[3]] + v83[v85[4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[3 + 0]] - v85[4 - 0];
									v77 = v77 + (101 - (90 + 10));
									v85 = v73[v77];
									v62[v85[807 - (209 + 595)]] = v83[v85[807 - (603 + 202)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[6 - 4]] = v85[2 + 1];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[5 - 3]] = v83[v85[1 + 2]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[2]] = v62[v85[12 - 9]];
									v77 = v77 + (280 - (174 + 105));
									v85 = v73[v77];
									v83[v85[2]] = v85[9 - 6];
									v77 = v77 + (914 - (532 + 381));
									v85 = v73[v77];
									v1889 = v85[2];
									v1885 = v83[v1889];
									v1884 = v83[v1889 + 2];
									if (v1884 > (0 + 0)) then
										if (v1885 > v83[v1889 + (840 - (137 + 702))]) then
											v77 = v85[3];
										else
											v83[v1889 + (8 - 5)] = v1885;
										end
									elseif (v1885 < v83[v1889 + 1 + 0]) then
										v77 = v85[10 - 7];
									else
										v83[v1889 + (1889 - (1819 + 67))] = v1885;
									end
								else
									local v1915;
									v1915 = v85[2];
									v83[v1915] = v83[v1915]();
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[1360 - (259 + 1098)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v62[v85[1 + 2]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[6 - 4]] = v83[v85[2 + 1]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v85[3];
									v77 = v77 + (4 - 3);
									v85 = v73[v77];
									v83[v85[1708 - (667 + 1039)]] = v85[3];
									v77 = v77 + 1;
									v85 = v73[v77];
									v1915 = v85[1021 - (274 + 745)];
									v83[v1915] = v83[v1915](v13(v83, v1915 + 1 + 0, v85[2 + 1]));
									v77 = v77 + 1;
									v85 = v73[v77];
									if (v83[v85[432 - (288 + 142)]] == v85[4]) then
										v77 = v77 + (1307 - (301 + 1005));
									else
										v77 = v85[2 + 1];
									end
								end
							elseif (v86 > 130) then
								local v1928 = 0;
								local v1929;
								local v1930;
								while true do
									if (v1928 == (9 - 5)) then
										v1930 = v85[2];
										v1929 = v83[v85[3]];
										v83[v1930 + (1874 - (674 + 1199))] = v1929;
										v1928 = 5 + 0;
									end
									if (v1928 == (5 + 2)) then
										v85 = v73[v77];
										v77 = v85[8 - 5];
										break;
									end
									if ((0 - 0) == v1928) then
										v1929 = nil;
										v1930 = nil;
										v83[v85[1 + 1]] = v83[v85[3]][v85[449 - (92 + 353)]];
										v1928 = 1 + 0;
									end
									if ((14 - 8) == v1928) then
										v1930 = v85[3 - 1];
										v83[v1930](v83[v1930 + (2 - 1)]);
										v77 = v77 + 1 + 0;
										v1928 = 12 - 5;
									end
									if (v1928 == 2) then
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v1930 = v85[8 - 6];
										v1928 = 3 + 0;
									end
									if ((9 - 4) == v1928) then
										v83[v1930] = v1929[v85[269 - (34 + 231)]];
										v77 = v77 + (1318 - (930 + 387));
										v85 = v73[v77];
										v1928 = 6 + 0;
									end
									if (v1928 == (1 + 0)) then
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v83[v85[699 - (389 + 308)]] = v85[7 - 4];
										v1928 = 4 - 2;
									end
									if (v1928 == 3) then
										v83[v1930](v83[v1930 + (2 - 1)]);
										v77 = v77 + 1;
										v85 = v73[v77];
										v1928 = 2 + 2;
									end
								end
							else
								local v1931;
								v83[v85[324 - (125 + 197)]] = v83[v85[1000 - (339 + 658)]][v85[4]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[3 - 1]] = v85[3];
								v77 = v77 + (1349 - (743 + 605));
								v85 = v73[v77];
								v83[v85[2]] = v63[v85[3 + 0]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[11 - 8]][v85[12 - 8]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[251 - (197 + 52)]] = v83[v85[6 - 3]][v85[8 - 4]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[4 - 1]][v85[13 - 9]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v1931 = v85[1 + 1];
								v83[v1931] = v83[v1931](v13(v83, v1931 + (1 - 0), v85[1100 - (97 + 1000)]));
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v63[v85[1848 - (143 + 1702)]] = v83[v85[3 - 1]];
							end
						elseif ((169 < 1877) and (v86 <= 144)) then
							if ((1125 == 1125) and (v86 <= 137)) then
								if (v86 <= (503 - (40 + 329))) then
									if (v86 <= (112 + 20)) then
										v83[v85[1 + 1]] = v63[v85[3 - 0]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v62[v85[68 - (9 + 56)]];
										v77 = v77 + (585 - (531 + 53));
										v85 = v73[v77];
										v83[v85[2 + 0]] = v83[v85[3]][v85[777 - (89 + 684)]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v83[v85[1 + 2]][v85[4]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										if (v85[2] <= v83[v85[4]]) then
											v77 = v77 + 1 + 0;
										else
											v77 = v85[3];
										end
									elseif (v86 == (114 + 19)) then
										v83[v85[615 - (238 + 375)]][v85[3 + 0]] = v85[4];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[2 + 0]] = v63[v85[8 - 5]];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v83[v85[5 - 3]][v85[3]] = v85[8 - 4];
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v83[v85[2 - 0]] = v63[v85[3 + 0]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[2 + 1]][v85[4]];
									else
										local v1959;
										v83[v85[464 - (428 + 34)]] = v83[v85[1 + 2]][v85[4]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[2]] = v85[6 - 3];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v83[v85[2]] = v63[v85[921 - (223 + 695)]];
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v83[v85[513 - (329 + 182)]] = v83[v85[3]][v85[1 + 3]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[4 - 1]][v85[1 + 3]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2 + 0]] = v83[v85[6 - 3]][v85[4]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v1959 = v85[1202 - (177 + 1023)];
										v83[v1959] = v83[v1959](v13(v83, v1959 + (1 - 0), v85[1 + 2]));
										v77 = v77 + 1;
										v85 = v73[v77];
										v63[v85[3]] = v83[v85[2]];
									end
								elseif (v86 <= (293 - 158)) then
									local v424 = 1465 - (120 + 1345);
									local v425;
									while true do
										if ((v424 == (337 - (8 + 329))) or (479 > 2219)) then
											v425 = v85[127 - (19 + 106)];
											do
												return v13(v83, v425, v78);
											end
											break;
										end
									end
								elseif (v86 == (485 - 349)) then
									v83[v85[2]] = v85[3 - 0];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[5 - 3]] = v83[v85[7 - 4]][v83[v85[15 - 11]]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]] = v63[v85[6 - 3]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v85[1506 - (957 + 546)];
									v77 = v77 + (4 - 3);
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[3]][v83[v85[2 + 2]]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v63[v85[3]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[705 - (227 + 476)]] = v85[3];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[3 - 1]] = v83[v85[3]][v83[v85[6 - 2]]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[3 - 1]] = v63[v85[3 - 0]];
									v77 = v77 + (955 - (166 + 788));
									v85 = v73[v77];
									v83[v85[988 - (21 + 965)]] = v85[699 - (127 + 569)];
								else
									local v1991;
									v83[v85[2 + 0]]();
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v62[v85[3]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v85[4 - 1];
									v77 = v77 + 1;
									v85 = v73[v77];
									v1991 = v85[2 + 0];
									v83[v1991](v83[v1991 + (2 - 1)]);
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v85[3];
									v77 = v77 + 1;
									v85 = v73[v77];
									v77 = v85[1295 - (1162 + 130)];
								end
							elseif (v86 <= 140) then
								if (v86 <= (293 - 155)) then
									local v426;
									v83[v85[2 + 0]] = v85[6 - 3];
									v77 = v77 + (937 - (889 + 47));
									v85 = v73[v77];
									v426 = v85[2];
									v83[v426](v83[v426 + 1 + 0]);
									v77 = v77 + (1265 - (1153 + 111));
									v85 = v73[v77];
									v83[v85[2]] = v63[v85[3 - 0]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[1 + 2]][v85[2 + 2]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[3 - 1]] = v85[3 + 0];
									v77 = v77 + (97 - (23 + 73));
									v85 = v73[v77];
									v426 = v85[287 - (26 + 259)];
									v83[v426](v83[v426 + 1]);
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2 - 0]] = v85[10 - 7];
									v77 = v77 + (1630 - (1094 + 535));
									v85 = v73[v77];
									v77 = v85[1 + 2];
								elseif (v86 > 139) then
									local v2000;
									v2000 = v85[1878 - (1554 + 322)];
									v83[v2000](v83[v2000 + (1426 - (989 + 436))]);
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1180 - (816 + 362)]] = v63[v85[3]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[4 - 2]] = v83[v85[11 - 8]][v85[4]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[3 - 1]] = v85[3];
									v77 = v77 + 1;
									v85 = v73[v77];
									v2000 = v85[4 - 2];
									v83[v2000](v83[v2000 + 1]);
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[8 - 6]] = v85[3];
								else
									local v2011 = 0 + 0;
									local v2012;
									while true do
										if (v2011 == (764 - (86 + 677))) then
											v85 = v73[v77];
											v83[v85[2 + 0]] = v85[3];
											v77 = v77 + 1;
											v85 = v73[v77];
											v2012 = v85[1 + 1];
											v83[v2012] = v83[v2012](v13(v83, v2012 + (1027 - (263 + 763)), v85[2 + 1]));
											v2011 = 2;
										end
										if ((448 <= 640) and (v2011 == 2)) then
											v77 = v77 + (859 - (649 + 209));
											v85 = v73[v77];
											v83[v85[8 - 6]] = v83[v85[734 - (643 + 88)]];
											v77 = v77 + (1770 - (54 + 1715));
											v85 = v73[v77];
											v83[v85[7 - 5]] = v62[v85[8 - 5]];
											v2011 = 3;
										end
										if (v2011 == (5 - 2)) then
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[3]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[7 - 5]] = v85[1386 - (132 + 1251)];
											v2011 = 4 + 0;
										end
										if (v2011 == (9 - 5)) then
											v77 = v77 + 1;
											v85 = v73[v77];
											v2012 = v85[2 + 0];
											v83[v2012] = v83[v2012](v13(v83, v2012 + (459 - (185 + 273)), v85[3]));
											v77 = v77 + 1;
											v85 = v73[v77];
											v2011 = 2 + 3;
										end
										if (v2011 == 5) then
											if ((3372 > 852) and (v83[v85[5 - 3]] == v85[2 + 2])) then
												v77 = v77 + (1225 - (361 + 863));
											else
												v77 = v85[8 - 5];
											end
											break;
										end
										if (v2011 == 0) then
											v2012 = nil;
											v83[v85[1329 - (443 + 884)]] = v83[v85[3]];
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[2]] = v85[3];
											v77 = v77 + 1 + 0;
											v2011 = 1;
										end
									end
								end
							elseif ((2295 < 4207) and (v86 <= (199 - 57))) then
								if (v86 == (113 + 28)) then
									local v2013 = 0 + 0;
									while true do
										if (v2013 == 0) then
											v83[v85[4 - 2]] = v85[750 - (16 + 731)];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[1 + 1]] = v63[v85[2 + 1]];
											v2013 = 1;
										end
										if ((v2013 == (1 + 0)) or (581 > 3966)) then
											v77 = v77 + (761 - (527 + 233));
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[3 + 0]][v85[8 - 4]];
											v77 = v77 + 1 + 0;
											v2013 = 1787 - (1107 + 678);
										end
										if (v2013 == 5) then
											v85 = v73[v77];
											v83[v85[2 + 0]] = v83[v85[3]][v83[v85[4 + 0]]];
											v77 = v77 + (51 - (4 + 46));
											v85 = v73[v77];
											v2013 = 22 - 16;
										end
										if (v2013 == 3) then
											v83[v85[3 - 1]] = v83[v85[2 + 1]][v83[v85[8 - 4]]];
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											v83[v85[1398 - (1262 + 134)]] = v63[v85[3]];
											v2013 = 9 - 5;
										end
										if (v2013 == (1 + 1)) then
											v85 = v73[v77];
											v83[v85[2 + 0]] = v85[798 - (383 + 412)];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v2013 = 3;
										end
										if (v2013 == (1 + 5)) then
											v83[v85[1 + 1]] = v85[1 + 2];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[2 - 0]] = v83[v85[3 + 0]][v83[v85[11 - 7]]];
											break;
										end
										if (v2013 == (4 - 0)) then
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[1 + 1]] = v85[710 - (667 + 40)];
											v77 = v77 + 1;
											v2013 = 1315 - (436 + 874);
										end
									end
								else
									local v2014;
									v2014 = v85[1608 - (762 + 844)];
									v83[v2014] = v83[v2014](v83[v2014 + (1 - 0)]);
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[1 + 2]];
									v77 = v77 + (477 - (209 + 267));
									v85 = v73[v77];
									v83[v85[3 - 1]] = v63[v85[8 - 5]];
									v77 = v77 + (1712 - (1611 + 100));
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[787 - (14 + 770)]][v85[1788 - (1165 + 619)]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[383 - (229 + 152)]][v85[197 - (107 + 87)]] = v83[v85[6 - 2]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2 + 0]][v85[14 - 11]] = v85[15 - 11];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]][v85[3 + 0]] = v85[18 - (13 + 1)];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v63[v85[1061 - (987 + 71)]];
								end
							elseif (v86 > (407 - 264)) then
								local v2031;
								local v2032;
								local v2031, v2033;
								local v2034;
								v83[v85[2 - 0]] = v62[v85[3]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[701 - (514 + 185)]] = v62[v85[3]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[3 - 1]] = v83[v85[11 - 8]];
								v77 = v77 + (1505 - (771 + 733));
								v85 = v73[v77];
								v2034 = v85[3 - 1];
								v2031, v2033 = v76(v83[v2034](v83[v2034 + (1 - 0)]));
								v78 = (v2033 + v2034) - (1168 - (407 + 760));
								v2032 = 0 + 0;
								for v4383 = v2034, v78 do
									local v4384 = 0 + 0;
									while true do
										if (v4384 == (0 + 0)) then
											v2032 = v2032 + 1;
											v83[v4383] = v2031[v2032];
											break;
										end
									end
								end
								v77 = v77 + (1855 - (169 + 1685));
								v85 = v73[v77];
								v2034 = v85[1 + 1];
								v2031 = {v83[v2034](v13(v83, v2034 + (2 - 1), v78))};
								v2032 = 0;
								for v4385 = v2034, v85[11 - 7] do
									v2032 = v2032 + (4 - 3);
									v83[v4385] = v2031[v2032];
								end
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v63[v85[2 + 1]] = v83[v85[889 - (790 + 97)]];
								v77 = v77 + (4 - 3);
								v85 = v73[v77];
								v63[v85[1 + 2]] = v83[v85[1 + 1]];
								v77 = v77 + (246 - (235 + 10));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v63[v85[5 - 2]];
								v77 = v77 + (1184 - (887 + 296));
								v85 = v73[v77];
								v83[v85[1047 - (512 + 533)]] = v83[v85[1427 - (662 + 762)]][v85[681 - (334 + 343)]];
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								if not v83[v85[491 - (198 + 291)]] then
									v77 = v77 + 1 + 0;
								else
									v77 = v85[577 - (141 + 433)];
								end
							else
								local v2051 = 0 - 0;
								local v2052;
								while true do
									if (v2051 == (0 + 0)) then
										v2052 = nil;
										v83[v85[779 - (227 + 550)]] = v83[v85[3]][v85[9 - 5]];
										v77 = v77 + (2 - 1);
										v2051 = 104 - (72 + 31);
									end
									if (v2051 == 5) then
										v77 = v77 + (349 - (89 + 259));
										v85 = v73[v77];
										v83[v85[2 + 0]] = v83[v85[3 + 0]];
										break;
									end
									if (((1 + 2) == v2051) or (1472 <= 1224)) then
										v85 = v73[v77];
										v83[v85[2]] = v85[3];
										v77 = v77 + (1 - 0);
										v2051 = 3 + 1;
									end
									if ((3472 > 2762) and (v2051 == (7 - 3))) then
										v85 = v73[v77];
										v2052 = v85[1405 - (1333 + 70)];
										v83[v2052] = v83[v2052](v13(v83, v2052 + (1833 - (701 + 1131)), v85[3]));
										v2051 = 5;
									end
									if ((1739 > 289) and (v2051 == (128 - (55 + 72)))) then
										v85 = v73[v77];
										v83[v85[158 - (99 + 57)]] = v85[4 - 1];
										v77 = v77 + 1 + 0;
										v2051 = 1581 - (1243 + 336);
									end
									if ((v2051 == 2) or (387 >= 3027)) then
										v85 = v73[v77];
										v83[v85[1331 - (774 + 555)]] = v85[2 + 1];
										v77 = v77 + 1;
										v2051 = 802 - (150 + 649);
									end
								end
							end
						elseif (v86 <= (96 + 55)) then
							if (v86 <= (222 - 75)) then
								if ((2085 > 1648) and (v86 <= (280 - 135))) then
									local v440 = 1984 - (1122 + 862);
									local v441;
									local v442;
									local v443;
									local v444;
									while true do
										if (v440 == (1 - 0)) then
											v78 = (v443 + v441) - (1 + 0);
											v444 = 0;
											v440 = 3 - 1;
										end
										if ((0 + 0) == v440) then
											v441 = v85[2];
											v442, v443 = v76(v83[v441](v13(v83, v441 + 1, v85[3])));
											v440 = 1;
										end
										if ((v440 == (1 + 1)) or (381 > 3372)) then
											for v4817 = v441, v78 do
												local v4818 = 743 - (549 + 194);
												while true do
													if (v4818 == 0) then
														v444 = v444 + 1 + 0;
														v83[v4817] = v442[v444];
														break;
													end
												end
											end
											break;
										end
									end
								elseif ((v86 > 146) or (120 >= 4150)) then
									local v2053;
									local v2054;
									v83[v85[7 - 5]][v85[3]] = v85[1 + 3];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]] = v63[v85[3]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v2054 = v85[2];
									v2053 = v83[v85[3 + 0]];
									v83[v2054 + 1] = v2053;
									v83[v2054] = v2053[v85[14 - 10]];
									v77 = v77 + (1704 - (453 + 1250));
									v85 = v73[v77];
									v83[v85[5 - 3]] = v85[3 + 0];
									v77 = v77 + (576 - (203 + 372));
									v85 = v73[v77];
									v2054 = v85[1 + 1];
									v83[v2054] = v83[v2054](v13(v83, v2054 + (2 - 1), v85[1385 - (978 + 404)]));
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[3]][v85[322 - (56 + 262)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[116 - (108 + 6)]] = v83[v85[2 + 1]][v85[4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]][v85[1955 - (653 + 1299)]] = v83[v85[4 + 0]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[4 - 2]] = v83[v85[1925 - (1042 + 880)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2054 = v85[1004 - (16 + 986)];
									v2053 = v83[v85[1221 - (700 + 518)]];
									v83[v2054 + (3 - 2)] = v2053;
									v83[v2054] = v2053[v85[4 - 0]];
									v77 = v77 + (1512 - (617 + 894));
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[5 - 2]];
									v77 = v77 + (459 - (271 + 187));
									v85 = v73[v77];
									v2054 = v85[2];
									v83[v2054](v13(v83, v2054 + (1585 - (731 + 853)), v85[10 - 7]));
									v77 = v77 + (1522 - (199 + 1322));
									v85 = v73[v77];
									v77 = v85[5 - 2];
								else
									local v2082 = 0 + 0;
									local v2083;
									while true do
										if ((v2082 == (1663 - (1291 + 369))) or (2475 >= 4897)) then
											v85 = v73[v77];
											v2083 = v85[1 + 1];
											v83[v2083] = v83[v2083](v13(v83, v2083 + 1 + 0, v85[3 + 0]));
											break;
										end
										if (v2082 == (0 + 0)) then
											v2083 = nil;
											v83[v85[687 - (561 + 124)]] = v85[3];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v2082 = 854 - (25 + 828);
										end
										if ((2 - 1) == v2082) then
											v83[v85[3 - 1]] = v83[v85[3]][v83[v85[594 - (99 + 491)]]];
											v77 = v77 + (49 - (18 + 30));
											v85 = v73[v77];
											v83[v85[4 - 2]] = v85[3];
											v2082 = 3 - 1;
										end
										if (v2082 == (2 - 0)) then
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[6 - 4]] = v83[v85[735 - (501 + 231)]][v83[v85[4 + 0]]];
											v77 = v77 + 1;
											v2082 = 3;
										end
									end
								end
							elseif (v86 <= (1847 - (470 + 1228))) then
								if ((2469 <= 3751) and (v86 == 148)) then
									if (not v83[v85[2]] or (1885 < 201)) then
										v77 = v77 + 1 + 0;
									else
										v77 = v85[2 + 1];
									end
								else
									local v2084 = 686 - (537 + 149);
									while true do
										if (v2084 == 4) then
											v83[v85[2 - 0]] = v63[v85[3]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v2084 = 10 - 5;
										end
										if ((3444 > 1103) and (v2084 == (6 - 4))) then
											v83[v85[5 - 3]] = v83[v85[3 + 0]][v85[2 + 2]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v2084 = 3;
										end
										if ((2 + 1) == v2084) then
											v83[v85[2 + 0]] = v83[v85[1 + 2]][v85[3 + 1]];
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											v2084 = 4;
										end
										if ((1 + 0) == v2084) then
											v83[v85[581 - (134 + 445)]] = v83[v85[5 - 2]][v85[4 + 0]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v2084 = 7 - 5;
										end
										if (v2084 == (260 - (36 + 224))) then
											v83[v85[1862 - (1033 + 827)]] = v63[v85[1849 - (1002 + 844)]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v2084 = 1351 - (1126 + 224);
										end
										if (v2084 == 6) then
											v83[v85[2]] = v83[v85[3]][v85[4]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v2084 = 7;
										end
										if ((v2084 == (7 + 0)) or (4275 < 1377)) then
											v83[v85[6 - 4]] = v83[v85[67 - (48 + 16)]][v85[3 + 1]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v2084 = 38 - 30;
										end
										if ((28 - 19) == v2084) then
											v83[v85[1 + 1]][v85[1092 - (910 + 179)]] = v85[4];
											break;
										end
										if ((15 - 7) == v2084) then
											v83[v85[3 - 1]] = v83[v85[3]][v85[1383 - (933 + 446)]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v2084 = 4 + 5;
										end
										if (v2084 == (1529 - (248 + 1276))) then
											v83[v85[2 + 0]] = v83[v85[2 + 1]][v85[13 - 9]];
											v77 = v77 + (3 - 2);
											v85 = v73[v77];
											v2084 = 1551 - (151 + 1394);
										end
									end
								end
							elseif (v86 == (1094 - (929 + 15))) then
								local v2085;
								v83[v85[1998 - (1173 + 823)]] = v62[v85[3]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[1778 - (482 + 1294)]] = v83[v85[5 - 2]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1308 - (1125 + 181)]] = v83[v85[8 - 5]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 - 0]] = v62[v85[1192 - (626 + 563)]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v2085 = v85[1252 - (153 + 1097)];
								v83[v2085] = v83[v2085](v13(v83, v2085 + 1, v85[9 - 6]));
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[5 - 3]][v83[v85[2 + 1]]] = v83[v85[4]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v77 = v85[3 + 0];
							else
								local v2100;
								local v2101;
								local v2102;
								v83[v85[1 + 1]] = v62[v85[3]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v62[v85[3]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v62[v85[1160 - (199 + 958)]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[4 - 2]] = v83[v85[3]] + v85[8 - 4];
								v77 = v77 + 1;
								v85 = v73[v77];
								v2102 = v85[2];
								v2101 = {v83[v2102](v13(v83, v2102 + (1874 - (751 + 1122)), v85[3]))};
								v2100 = 0;
								for v4389 = v2102, v85[1 + 3] do
									local v4390 = 0 + 0;
									while true do
										if (v4390 == (0 + 0)) then
											v2100 = v2100 + 1 + 0;
											v83[v4389] = v2101[v2100];
											break;
										end
									end
								end
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 - 0]] = v83[v85[1184 - (589 + 592)]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[3 - 1]] = v83[v85[1 + 2]];
								v77 = v77 + (25 - (13 + 11));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[1 + 2]];
								v77 = v77 + (1261 - (684 + 576));
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[7 - 4]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v62[v85[1 + 2]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[3 + 0]] + v85[3 + 1];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v62[v85[3]] = v83[v85[1 + 1]];
								v77 = v77 + (1849 - (230 + 1618));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[3];
							end
						elseif (v86 <= (52 + 102)) then
							if ((v86 <= (146 + 6)) or (3324 < 1821)) then
								local v445;
								local v446;
								v446 = v85[205 - (131 + 72)];
								v83[v446](v13(v83, v446 + 1 + 0, v85[207 - (144 + 60)]));
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[8 - 6]] = v85[4 - 1];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[3]][v83[v85[19 - 15]]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v85[1925 - (523 + 1399)];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[406 - (72 + 332)]] = v83[v85[979 - (269 + 707)]][v83[v85[7 - 3]]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2]] = v85[133 - (123 + 7)];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v446 = v85[2 + 0];
								v445 = v83[v85[3]];
								v83[v446 + (4 - 3)] = v445;
								v83[v446] = v445[v83[v85[4]]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[1090 - (38 + 1050)]] = v85[2 + 1];
								v77 = v77 + 1;
								v85 = v73[v77];
								v446 = v85[1 + 1];
								v83[v446] = v83[v446](v13(v83, v446 + 1 + 0, v85[826 - (426 + 397)]));
								v77 = v77 + (1407 - (751 + 655));
								v85 = v73[v77];
								v446 = v85[3 - 1];
								v445 = v83[v85[1 + 2]];
								v83[v446 + (1246 - (39 + 1206))] = v445;
								v83[v446] = v445[v85[12 - 8]];
							elseif (v86 == 153) then
								local v2118;
								v83[v85[2]] = v85[844 - (566 + 275)];
								v77 = v77 + (936 - (167 + 768));
								v85 = v73[v77];
								v2118 = v85[1 + 1];
								v83[v2118](v83[v2118 + (1 - 0)]);
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v63[v85[1 + 2]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[3 - 0]][v85[19 - (8 + 7)]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1685 - (1510 + 173)]] = v85[3];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v2118 = v85[2];
								v83[v2118](v83[v2118 + 1]);
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[255 - (30 + 223)]] = v85[1259 - (300 + 956)];
							else
								local v2131 = 0;
								local v2132;
								local v2133;
								while true do
									if ((125 - (22 + 100)) == v2131) then
										v83[v85[4 - 2]] = v83[v85[285 - (47 + 235)]][v85[13 - 9]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v2133 = v85[488 - (21 + 465)];
										v2132 = v83[v85[3]];
										v2131 = 3 + 1;
									end
									if ((4 + 1) == v2131) then
										v83[v2133](v83[v2133 + 1 + 0]);
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[1219 - (553 + 664)]] = v62[v85[2 + 1]];
										v77 = v77 + (79 - (73 + 5));
										v2131 = 1721 - (1128 + 587);
									end
									if (v2131 == (34 - 25)) then
										v77 = v77 + (691 - (558 + 132));
										v85 = v73[v77];
										if ((4941 > 552) and not v83[v85[5 - 3]]) then
											v77 = v77 + (2 - 1);
										else
											v77 = v85[3];
										end
										break;
									end
									if (v2131 == (1 + 0)) then
										v83[v2133] = v2132[v85[4 + 0]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2 + 0]] = v85[4 - 1];
										v77 = v77 + 1;
										v2131 = 2;
									end
									if (v2131 == (2 + 2)) then
										v83[v2133 + 1 + 0] = v2132;
										v83[v2133] = v2132[v85[775 - (294 + 477)]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v2133 = v85[1 + 1];
										v2131 = 10 - 5;
									end
									if (v2131 == (13 - 6)) then
										v2132 = v83[v85[1 + 2]];
										v83[v2133 + 1 + 0] = v2132;
										v83[v2133] = v2132[v85[8 - 4]];
										v77 = v77 + (983 - (97 + 885));
										v85 = v73[v77];
										v2131 = 4 + 4;
									end
									if ((v2131 == (2 - 0)) or (2527 < 132)) then
										v85 = v73[v77];
										v2133 = v85[367 - (271 + 94)];
										v83[v2133] = v83[v2133](v13(v83, v2133 + (1604 - (777 + 826)), v85[2 + 1]));
										v77 = v77 + (1356 - (117 + 1238));
										v85 = v73[v77];
										v2131 = 1718 - (686 + 1029);
									end
									if ((1424 >= 556) and (v2131 == 0)) then
										v2132 = nil;
										v2133 = nil;
										v2133 = v85[1358 - (1074 + 282)];
										v2132 = v83[v85[1620 - (1359 + 258)]];
										v83[v2133 + (2 - 1)] = v2132;
										v2131 = 1936 - (1730 + 205);
									end
									if (v2131 == (534 - (67 + 461))) then
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[4 - 1]][v85[4]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v2133 = v85[4 - 2];
										v2131 = 1 + 6;
									end
									if (v2131 == (637 - (129 + 500))) then
										v83[v85[2]] = v85[1714 - (1157 + 554)];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v2133 = v85[609 - (82 + 525)];
										v83[v2133] = v83[v2133](v13(v83, v2133 + 1 + 0, v85[6 - 3]));
										v2131 = 1632 - (948 + 675);
									end
								end
							end
						elseif (v86 <= 156) then
							if ((v86 > (50 + 105)) or (1071 > 4036)) then
								local v2134;
								v2134 = v85[2 + 0];
								v83[v2134] = v83[v2134]();
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3]];
								v77 = v77 + (854 - (406 + 447));
								v85 = v73[v77];
								v83[v85[119 - (91 + 26)]] = v62[v85[10 - 7]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v2134 = v85[988 - (968 + 18)];
								v83[v2134] = v83[v2134]();
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[5 - 2]];
								v77 = v77 + (268 - (172 + 95));
								v85 = v73[v77];
								v83[v85[2]] = v85[3];
							else
								v83[v85[2]] = v83[v85[9 - 6]][v85[4]];
								v77 = v77 + (266 - (260 + 5));
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[8 - 5]][v85[4]];
								v77 = v77 + (820 - (265 + 554));
								v85 = v73[v77];
								v83[v85[1573 - (1440 + 131)]] = v83[v85[8 - 5]][v85[1399 - (253 + 1142)]];
								v77 = v77 + (254 - (133 + 120));
								v85 = v73[v77];
								v83[v85[3 - 1]] = v83[v85[1959 - (809 + 1147)]][v85[501 - (178 + 319)]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v63[v85[3]] = v83[v85[2 + 0]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v77 = v85[1273 - (1255 + 15)];
							end
						elseif (v86 == (1699 - (1221 + 321))) then
							local v2157 = 0;
							local v2158;
							local v2159;
							while true do
								if (v2157 == (5 - 3)) then
									v85 = v73[v77];
									v83[v85[2 + 0]] = v63[v85[11 - 8]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v2157 = 3;
								end
								if (v2157 == (2 + 2)) then
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2159 = v85[2];
									v83[v2159](v83[v2159 + (1 - 0)]);
									v2157 = 412 - (204 + 203);
								end
								if ((3186 > 1751) and (v2157 == (86 - (48 + 30)))) then
									v77 = v85[2 + 1];
									break;
								end
								if ((2670 <= 4635) and (v2157 == (1965 - (1472 + 492)))) then
									v85 = v73[v77];
									v2159 = v85[5 - 3];
									v83[v2159](v83[v2159 + 1 + 0]);
									v77 = v77 + (612 - (258 + 353));
									v2157 = 1996 - (1382 + 612);
								end
								if (v2157 == (3 + 0)) then
									v83[v85[1 + 1]] = v83[v85[1 + 2]][v85[11 - 7]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[121 - (35 + 84)]] = v85[218 - (75 + 140)];
									v2157 = 14 - 10;
								end
								if ((3744 >= 1718) and (v2157 == (1804 - (923 + 876)))) then
									v77 = v77 + 1;
									v85 = v73[v77];
									v2159 = v85[5 - 3];
									v2158 = v83[v85[815 - (284 + 528)]];
									v2157 = 1025 - (867 + 152);
								end
								if (v2157 == (1113 - (709 + 397))) then
									v2159 = v85[2];
									v83[v2159](v83[v2159 + (3 - 2)]);
									v77 = v77 + 1;
									v85 = v73[v77];
									v2157 = 44 - (21 + 15);
								end
								if (v2157 == (0 - 0)) then
									v2158 = nil;
									v2159 = nil;
									v83[v85[2]] = v85[5 - 2];
									v77 = v77 + 1 + 0;
									v2157 = 2 - 1;
								end
								if (v2157 == (14 - 8)) then
									v83[v2159 + 1 + 0] = v2158;
									v83[v2159] = v2158[v85[4]];
									v77 = v77 + (136 - (97 + 38));
									v85 = v73[v77];
									v2157 = 87 - (52 + 28);
								end
							end
						else
							local v2160 = 0 + 0;
							while true do
								if ((v2160 == 2) or (3339 >= 4271)) then
									v83[v85[851 - (59 + 790)]] = v83[v85[3 + 0]][v85[1 + 3]];
									v77 = v77 + (941 - (467 + 473));
									v85 = v73[v77];
									v2160 = 3;
								end
								if ((1498 == 1498) and (v2160 == (19 - 15))) then
									v63[v85[3]] = v83[v85[5 - 3]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v2160 = 5;
								end
								if ((787 < 1616) and (v2160 == (2 - 1))) then
									v83[v85[4 - 2]] = v83[v85[2 + 1]][v85[4]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v2160 = 2;
								end
								if ((719 <= 2544) and (v2160 == (0 - 0))) then
									v83[v85[2 - 0]] = v83[v85[1 + 2]][v85[4]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v2160 = 1 + 0;
								end
								if ((2369 <= 2895) and (v2160 == (2 + 1))) then
									v83[v85[239 - (58 + 179)]] = v83[v85[7 - 4]][v85[4]];
									v77 = v77 + (1254 - (677 + 576));
									v85 = v73[v77];
									v2160 = 2 + 2;
								end
								if (((11 - 6) == v2160) or (1160 > 3400)) then
									v77 = v85[223 - (88 + 132)];
									break;
								end
							end
						end
					elseif ((v86 <= 185) or (3568 >= 4990)) then
						if (v86 <= (159 + 12)) then
							if ((4482 > 2732) and (v86 <= 164)) then
								if (v86 <= 161) then
									if ((v86 <= (790 - 631)) or (858 >= 4057)) then
										local v470 = 0 - 0;
										local v471;
										while true do
											if ((2765 > 1105) and (v470 == (291 - (12 + 279)))) then
												v471 = v85[3 - 1];
												do
													return v13(v83, v471, v471 + v85[1 + 2]);
												end
												break;
											end
										end
									elseif ((4303 > 3111) and (v86 > (1107 - (652 + 295)))) then
										local v2161;
										v83[v85[1 + 1]] = v85[2 + 1];
										v77 = v77 + (990 - (848 + 141));
										v85 = v73[v77];
										for v4392 = v85[2], v85[743 - (372 + 368)] do
											v83[v4392] = nil;
										end
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1132 - (542 + 588)]] = v62[v85[3]];
										v77 = v77 + (819 - (6 + 812));
										v85 = v73[v77];
										v83[v85[1707 - (1599 + 106)]] = v62[v85[3]];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v83[v85[1 + 1]] = v83[v85[2 + 1]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2]] = v85[11 - 8];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v2161 = v85[1 + 1];
										v83[v2161] = v83[v2161](v13(v83, v2161 + 1, v85[1 + 2]));
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v85[3];
									else
										v83[v85[1 + 1]][v83[v85[1 + 2]]] = v83[v85[1933 - (1690 + 239)]];
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[3]][v85[3 + 1]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[7 - 4]][v83[v85[4]]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[7 - 5]][v83[v85[3]]] = v83[v85[1872 - (1736 + 132)]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v77 = v85[2 + 1];
									end
								elseif (v86 <= (531 - 369)) then
									local v472;
									local v473;
									v83[v85[2]] = v83[v85[13 - 10]][v85[1 + 3]];
									v77 = v77 + (33 - (27 + 5));
									v85 = v73[v77];
									v83[v85[2]] = v62[v85[1 + 2]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[1 + 2]][v85[4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v473 = v85[2];
									v83[v473](v83[v473 + (1118 - (771 + 346))]);
									v77 = v77 + (1635 - (1577 + 57));
									v85 = v73[v77];
									v83[v85[2]] = v62[v85[5 - 2]];
									v77 = v77 + (1081 - (684 + 396));
									v85 = v73[v77];
									v473 = v85[2];
									v472 = v83[v85[8 - 5]];
									v83[v473 + (1197 - (700 + 496))] = v472;
									v83[v473] = v472[v85[4 + 0]];
									v77 = v77 + (253 - (65 + 187));
									v85 = v73[v77];
									v473 = v85[941 - (827 + 112)];
									v83[v473](v83[v473 + 1]);
									v77 = v77 + 1;
									v85 = v73[v77];
									v77 = v85[3];
								elseif ((v86 > (114 + 49)) or (4426 <= 519)) then
									v83[v85[4 - 2]] = v83[v85[7 - 4]][v85[19 - 15]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[1199 - (551 + 645)]][v85[4]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[345 - (166 + 177)]] = v85[1859 - (1361 + 495)];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[3]][v83[v85[8 - 4]]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[226 - (148 + 76)]] = v85[10 - 7];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[1745 - (735 + 1007)]][v83[v85[283 - (111 + 168)]]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v63[v85[1 + 2]] = v83[v85[3 - 1]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v77 = v85[1 + 2];
								else
									local v2198;
									v83[v85[2]] = v83[v85[3]][v85[4 + 0]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[8 - 6]][v85[2 + 1]] = v83[v85[4]];
									v77 = v77 + (933 - (147 + 785));
									v85 = v73[v77];
									v83[v85[668 - (483 + 183)]] = v63[v85[8 - 5]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1913 - (1790 + 121)]] = v83[v85[9 - 6]][v85[4]];
									v77 = v77 + (1540 - (259 + 1280));
									v85 = v73[v77];
									v83[v85[1586 - (160 + 1424)]] = v85[3];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2198 = v85[1 + 1];
									v83[v2198](v83[v2198 + (771 - (479 + 291))]);
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2]] = v63[v85[3]];
									v77 = v77 + (972 - (569 + 402));
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[1308 - (635 + 670)]][v85[9 - 5]];
								end
							elseif (v86 <= (664 - 497)) then
								if (v86 <= (763 - (42 + 556))) then
									v83[v85[1403 - (1246 + 155)]] = v83[v85[735 - (31 + 701)]][v85[13 - 9]];
									v77 = v77 + (500 - (393 + 106));
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[1174 - (727 + 444)]][v85[11 - 7]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[655 - (269 + 384)]] = v83[v85[3]][v85[4]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1571 - (598 + 971)]] = v83[v85[2 + 1]][v85[4]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[9 - 7]] = v62[v85[3]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[7 - 4]][v85[1449 - (800 + 645)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									if ((3478 == 3478) and (v83[v85[792 - (687 + 103)]] ~= v83[v85[1166 - (142 + 1020)]])) then
										v77 = v77 + (2 - 1);
									else
										v77 = v85[1 + 2];
									end
								elseif (v86 > (679 - (306 + 207))) then
									local v2214 = 0;
									while true do
										if ((4188 > 4085) and (v2214 == (1408 - (112 + 1292)))) then
											v83[v85[2 + 0]] = v62[v85[955 - (587 + 365)]];
											v77 = v77 + (1716 - (829 + 886));
											v85 = v73[v77];
											v2214 = 12 - 7;
										end
										if ((v2214 == (1 + 1)) or (1613 <= 244)) then
											v83[v85[7 - 5]] = v83[v85[9 - 6]][v85[4 + 0]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v2214 = 4 - 1;
										end
										if (0 == v2214) then
											v83[v85[2]] = v83[v85[980 - (613 + 364)]][v85[4 + 0]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v2214 = 1;
										end
										if (v2214 == (2 + 3)) then
											v83[v85[4 - 2]] = v83[v85[10 - 7]][v85[4]];
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v2214 = 4 + 2;
										end
										if (v2214 == (1945 - (1467 + 472))) then
											v83[v85[2 - 0]] = v83[v85[3]][v85[4]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v2214 = 7;
										end
										if ((759 < 3886) and (v2214 == 3)) then
											v83[v85[1549 - (1077 + 470)]] = v83[v85[1 + 2]][v85[2 + 2]];
											v77 = v77 + (4 - 3);
											v85 = v73[v77];
											v2214 = 433 - (12 + 417);
										end
										if ((v2214 == (2 - 1)) or (300 == 513)) then
											v83[v85[2 + 0]][v85[3 - 0]] = v83[v85[7 - 3]];
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											v2214 = 1 + 1;
										end
										if ((v2214 == (3 + 4)) or (1372 <= 323)) then
											if (v85[1 + 1] <= v83[v85[4]]) then
												v77 = v77 + (2 - 1);
											else
												v77 = v85[1108 - (924 + 181)];
											end
											break;
										end
									end
								else
									local v2215 = 797 - (263 + 534);
									local v2216;
									while true do
										if ((1 + 2) == v2215) then
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2 + 0]] = v85[5 - 2];
											v77 = v77 + (2 - 1);
											v2215 = 3 + 1;
										end
										if (v2215 == (709 - (562 + 145))) then
											v83[v85[1 + 1]] = v62[v85[2 + 1]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[1 + 1]][v85[1 + 2]] = v85[1 + 3];
											v2215 = 3;
										end
										if ((0 - 0) == v2215) then
											v2216 = nil;
											v83[v85[2 + 0]] = v85[13 - 10];
											v77 = v77 + 1;
											v85 = v73[v77];
											v2215 = 1;
										end
										if ((2 + 2) == v2215) then
											v85 = v73[v77];
											v77 = v85[2 + 1];
											break;
										end
										if (v2215 == (1877 - (1459 + 417))) then
											v2216 = v85[2];
											v83[v2216](v83[v2216 + (287 - (194 + 92))]);
											v77 = v77 + (1386 - (1057 + 328));
											v85 = v73[v77];
											v2215 = 2;
										end
									end
								end
							elseif (v86 <= (477 - 308)) then
								if (v86 > 168) then
									local v2217;
									local v2218;
									v2218 = v85[9 - 7];
									v2217 = v83[v85[535 - (5 + 527)]];
									v83[v2218 + 1 + 0] = v2217;
									v83[v2218] = v2217[v85[784 - (342 + 438)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v85[3 + 0];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v2218 = v85[1 + 1];
									v83[v2218] = v83[v2218](v13(v83, v2218 + 1 + 0, v85[5 - 2]));
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2 - 0]] = v83[v85[15 - (6 + 6)]][v85[11 - 7]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v2218 = v85[1 + 1];
									v2217 = v83[v85[1256 - (206 + 1047)]];
									v83[v2218 + (1113 - (470 + 642))] = v2217;
									v83[v2218] = v2217[v85[4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2218 = v85[1069 - (552 + 515)];
									v83[v2218](v83[v2218 + 1 + 0]);
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v62[v85[2 + 1]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[2 + 1]][v85[1055 - (701 + 350)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2218 = v85[2 + 0];
									v2217 = v83[v85[2 + 1]];
									v83[v2218 + 1] = v2217;
									v83[v2218] = v2217[v85[6 - 2]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[2]] = v85[3];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2218 = v85[4 - 2];
									v83[v2218] = v83[v2218](v13(v83, v2218 + 1 + 0, v85[3 + 0]));
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									if not v83[v85[1348 - (281 + 1065)]] then
										v77 = v77 + 1;
									else
										v77 = v85[13 - 10];
									end
								else
									v83[v85[7 - 5]] = v85[1214 - (1114 + 97)];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[1915 - (279 + 1634)]][v85[1283 - (1213 + 67)]] = v83[v85[195 - (65 + 126)]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v63[v85[1088 - (189 + 896)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1965 - (1872 + 91)]] = v85[6 - 3];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[6 - 4]][v85[3 + 0]] = v83[v85[4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[7 - 5]] = v63[v85[79 - (22 + 54)]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[4 - 2]] = v83[v85[3]][v85[2 + 2]];
								end
							elseif (v86 == (664 - 494)) then
								v83[v85[2]] = v83[v85[3]][v85[1538 - (553 + 981)]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[3 + 0]][v85[11 - 7]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[1899 - (1320 + 577)]] = v83[v85[852 - (667 + 182)]][v85[4]];
								v77 = v77 + (1289 - (1115 + 173));
								v85 = v73[v77];
								v83[v85[3 - 1]] = v83[v85[3 + 0]][v85[1759 - (1375 + 380)]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v63[v85[3]] = v83[v85[28 - (12 + 14)]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v77 = v85[3];
							else
								v83[v85[4 - 2]][v85[7 - 4]] = v85[11 - 7];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2 - 0]] = v63[v85[734 - (354 + 377)]];
								v77 = v77 + (4 - 3);
								v85 = v73[v77];
								v83[v85[5 - 3]][v85[1985 - (263 + 1719)]] = v85[4];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v63[v85[362 - (335 + 24)]];
								v77 = v77 + (952 - (882 + 69));
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[1689 - (657 + 1029)]][v85[4]];
							end
						elseif ((v86 <= (1378 - (685 + 515))) or (4933 < 3371)) then
							if (v86 <= (1812 - (745 + 893))) then
								if ((4424 > 4287) and (v86 <= 172)) then
									local v500 = 0 + 0;
									local v501;
									local v502;
									local v503;
									while true do
										if (v500 == (773 - (274 + 498))) then
											v83[v85[2]] = {};
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[1 + 1]] = {};
											v77 = v77 + (1607 - (1035 + 571));
											v85 = v73[v77];
											v500 = 1 + 1;
										end
										if (v500 == (2 + 1)) then
											v83[v85[7 - 5]] = v83[v85[8 - 5]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											for v4821 = v85[2 + 0], v85[3] do
												v83[v4821] = nil;
											end
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v500 = 4;
										end
										if ((v500 == (229 - (109 + 115))) or (3355 == 1746)) then
											for v4823 = 1400 - (1047 + 352), v501 do
												v502[v4823] = v83[v503 + v4823];
											end
											break;
										end
										if (v500 == (1767 - (852 + 913))) then
											v83[v85[2 + 0]] = {};
											v77 = v77 + (1346 - (384 + 961));
											v85 = v73[v77];
											v83[v85[4 - 2]] = v83[v85[3]];
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v500 = 10 - 7;
										end
										if ((4625 >= 2690) and (v500 == (592 - (591 + 1)))) then
											v501 = nil;
											v502 = nil;
											v503 = nil;
											v83[v85[2]] = {};
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v500 = 1;
										end
										if (v500 == 4) then
											v83[v85[1472 - (218 + 1252)]] = v83[v85[3 + 0]];
											v77 = v77 + (357 - (321 + 35));
											v85 = v73[v77];
											v503 = v85[396 - (239 + 155)];
											v502 = v83[v503];
											v501 = v85[3 + 0];
											v500 = 5;
										end
									end
								elseif ((1678 >= 1027) and (v86 == (215 - (41 + 1)))) then
									v83[v85[2]] = v85[3];
									v77 = v77 + (201 - (80 + 120));
									v85 = v73[v77];
									v83[v85[2 + 0]][v85[5 - 2]] = v83[v85[1 + 3]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[9 - 7]] = v63[v85[6 - 3]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[8 - 6]] = v85[4 - 1];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]] = v85[3] ~= (0 + 0);
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]][v83[v85[1229 - (165 + 1061)]]] = v83[v85[4 + 0]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v85[1646 - (596 + 1047)];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v77 = v85[3 + 0];
								else
									local v2295 = 0 - 0;
									local v2296;
									local v2297;
									while true do
										if ((370 < 2950) and (v2295 == 3)) then
											v83[v2297] = v2296[v85[3 + 1]];
											v77 = v77 + (738 - (185 + 552));
											v85 = v73[v77];
											v83[v85[2 + 0]] = v85[604 - (507 + 94)];
											v77 = v77 + (4 - 3);
											v2295 = 2 + 2;
										end
										if (v2295 == 5) then
											v83[v85[2 - 0]] = v85[1740 - (569 + 1168)];
											v77 = v77 + 1;
											v85 = v73[v77];
											v2297 = v85[3 - 1];
											v2296 = v83[v85[3]];
											v2295 = 11 - 5;
										end
										if ((1690 == 1690) and ((355 - (118 + 233)) == v2295)) then
											v85 = v73[v77];
											v2297 = v85[346 - (279 + 65)];
											v83[v2297] = v83[v2297](v13(v83, v2297 + (1 - 0), v85[4 - 1]));
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											v2295 = 13 - 8;
										end
										if (v2295 == (1818 - (1414 + 404))) then
											v2296 = nil;
											v2297 = nil;
											v2297 = v85[758 - (347 + 409)];
											v83[v2297] = v83[v2297](v83[v2297 + 1]);
											v77 = v77 + 1 + 0;
											v2295 = 1 + 0;
										end
										if ((4043 >= 2662) and (v2295 == (4 + 3))) then
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[1580 - (420 + 1158)]] = v63[v85[7 - 4]];
											break;
										end
										if (v2295 == (617 - (406 + 205))) then
											v83[v2297 + (3 - 2)] = v2296;
											v83[v2297] = v2296[v83[v85[3 + 1]]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2 + 0]] = v63[v85[7 - 4]];
											v2295 = 7;
										end
										if (v2295 == 2) then
											v77 = v77 + 1;
											v85 = v73[v77];
											v2297 = v85[63 - (28 + 33)];
											v2296 = v83[v85[1 + 2]];
											v83[v2297 + (1008 - (858 + 149))] = v2296;
											v2295 = 1 + 2;
										end
										if (v2295 == 1) then
											v85 = v73[v77];
											v83[v85[2 - 0]]();
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[1509 - (829 + 678)]] = v63[v85[3]];
											v2295 = 2;
										end
									end
								end
							elseif (v86 <= (129 + 47)) then
								if (v86 > (1391 - (143 + 1073))) then
									v83[v85[1817 - (898 + 917)]] = v83[v85[5 - 2]] - v85[2 + 2];
									v77 = v77 + 1;
									v85 = v73[v77];
									v62[v85[1472 - (882 + 587)]] = v83[v85[2 + 0]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]] = v85[2 + 1];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[266 - (140 + 124)]] = v85[3 + 0];
									v77 = v77 + (1536 - (1105 + 430));
									v85 = v73[v77];
									v77 = v85[3];
								else
									local v2307;
									local v2308;
									local v2309, v2310;
									local v2311;
									v83[v85[5 - 3]] = {};
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[4 - 2]] = v83[v85[4 - 1]][v83[v85[4 + 0]]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[1 + 2]] + v85[4];
									v77 = v77 + (1992 - (1047 + 944));
									v85 = v73[v77];
									v83[v85[1304 - (206 + 1096)]] = v83[v85[197 - (30 + 164)]][v83[v85[17 - 13]]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2311 = v85[1476 - (1383 + 91)];
									v2309, v2310 = v76(v83[v2311](v83[v2311 + (3 - 2)]));
									v78 = (v2310 + v2311) - (1 - 0);
									v2308 = 1660 - (1174 + 486);
									for v4412 = v2311, v78 do
										local v4413 = 427 - (172 + 255);
										while true do
											if (v4413 == (0 - 0)) then
												v2308 = v2308 + (2 - 1);
												v83[v4412] = v2309[v2308];
												break;
											end
										end
									end
									v77 = v77 + 1;
									v85 = v73[v77];
									v2311 = v85[1530 - (594 + 934)];
									v2307 = v83[v2311];
									for v4414 = v2311 + (569 - (211 + 357)), v78 do
										v7(v2307, v83[v4414]);
									end
								end
							elseif ((1883 >= 324) and (v86 > (29 + 148))) then
								local v2322;
								v83[v85[2 + 0]] = v83[v85[4 - 1]][v85[3 + 1]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1416 - (159 + 1255)]] = v85[3 + 0];
								v77 = v77 + (778 - (24 + 753));
								v85 = v73[v77];
								v83[v85[1 + 1]] = v63[v85[3 - 0]];
								v77 = v77 + (1133 - (898 + 234));
								v85 = v73[v77];
								v83[v85[537 - (333 + 202)]] = v83[v85[2 + 1]][v85[2 + 2]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[1281 - (1018 + 261)]] = v83[v85[7 - 4]][v85[4]];
								v77 = v77 + (132 - (93 + 38));
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[1 + 2]][v85[3 + 1]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v2322 = v85[2 + 0];
								v83[v2322] = v83[v2322](v13(v83, v2322 + (2 - 1), v85[11 - 8]));
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v63[v85[3]] = v83[v85[9 - 7]];
							elseif (v83[v85[3 - 1]] ~= v85[4]) then
								v77 = v77 + 1 + 0;
							else
								v77 = v85[3 - 0];
							end
						elseif ((572 <= 1094) and (v86 <= 181)) then
							if (v86 <= (109 + 70)) then
								local v504;
								v83[v85[422 - (14 + 406)]] = v83[v85[5 - 2]][v85[14 - 10]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1632 - (20 + 1610)]] = v85[2 + 1];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[5 - 3]] = v63[v85[8 - 5]];
								v77 = v77 + (518 - (243 + 274));
								v85 = v73[v77];
								v83[v85[1624 - (1437 + 185)]] = v83[v85[9 - 6]][v85[2 + 2]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[7 - 5]] = v83[v85[3]][v85[4 + 0]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[819 - (326 + 490)]][v85[3 + 1]];
								v77 = v77 + (204 - (181 + 22));
								v85 = v73[v77];
								v504 = v85[77 - (35 + 40)];
								v83[v504] = v83[v504](v13(v83, v504 + (3 - 2), v85[3]));
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v63[v85[1 + 2]] = v83[v85[880 - (297 + 581)]];
							elseif (v86 == 180) then
								local v2340 = 0 + 0;
								local v2341;
								while true do
									if ((v2340 == (2 - 0)) or (4381 <= 3377)) then
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v2341 = v85[1 + 1];
										v83[v2341](v83[v2341 + (3 - 2)]);
										v77 = v77 + 1;
										v85 = v73[v77];
										v2340 = 3;
									end
									if (1 == v2340) then
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[8 - 6]] = v62[v85[1740 - (1505 + 232)]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1320 - (415 + 903)]] = v85[8 - 5];
										v2340 = 2 - 0;
									end
									if (v2340 == 3) then
										v83[v85[719 - (155 + 562)]] = v63[v85[3]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[119 - (71 + 46)]] = v83[v85[4 - 1]][v85[689 - (436 + 249)]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v2340 = 4;
									end
									if ((v2340 == (1626 - (56 + 1565))) or (1899 < 1509)) then
										v85 = v73[v77];
										v83[v85[1 + 1]] = v62[v85[987 - (80 + 904)]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[802 - (595 + 205)]] = v85[6 - 3];
										v77 = v77 + (2 - 1);
										v2340 = 5 + 1;
									end
									if ((v2340 == (0 + 0)) or (1360 > 4641)) then
										v2341 = nil;
										v83[v85[6 - 4]] = v85[3];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v2341 = v85[667 - (400 + 265)];
										v83[v2341](v83[v2341 + (1 - 0)]);
										v2340 = 1 + 0;
									end
									if (v2340 == (8 - 4)) then
										v83[v85[1 + 1]] = v85[3];
										v77 = v77 + (1672 - (962 + 709));
										v85 = v73[v77];
										v2341 = v85[2];
										v83[v2341](v83[v2341 + 1 + 0]);
										v77 = v77 + 1 + 0;
										v2340 = 4 + 1;
									end
									if (v2340 == (23 - 17)) then
										v85 = v73[v77];
										v2341 = v85[4 - 2];
										v83[v2341](v83[v2341 + (782 - (636 + 145))]);
										v77 = v77 + (296 - (282 + 13));
										v85 = v73[v77];
										v77 = v85[1151 - (366 + 782)];
										break;
									end
								end
							else
								v83[v85[91 - (10 + 79)]] = v83[v85[1710 - (1297 + 410)]][v83[v85[13 - 9]]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[3]][v85[282 - (262 + 16)]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[1 + 2]][v85[1854 - (1056 + 794)]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1350 - (741 + 607)]] = v83[v85[3]][v83[v85[1760 - (730 + 1026)]]];
								v77 = v77 + 1;
								v85 = v73[v77];
								do
									return v83[v85[1795 - (248 + 1545)]];
								end
								v77 = v77 + (993 - (191 + 801));
								v85 = v73[v77];
								v77 = v85[3];
							end
						elseif (v86 <= (907 - 724)) then
							if (v86 == (742 - (478 + 82))) then
								v83[v85[1709 - (434 + 1273)]][v85[8 - 5]] = v85[4];
							else
								v83[v85[2 + 0]] = v62[v85[12 - 9]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[576 - (349 + 224)]] + v85[868 - (275 + 589)];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[3 - 1]] = v83[v85[1535 - (1064 + 468)]][v83[v85[4]]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]][v83[v85[3 + 0]]] = v83[v85[3 + 1]];
								v77 = v77 + (4 - 3);
								v85 = v73[v77];
								v77 = v85[3];
							end
						elseif ((1983 <= 3893) and (v86 > (887 - (676 + 27)))) then
							local v2362 = v85[5 - 3];
							local v2363 = v83[v2362];
							local v2364 = v83[v2362 + (1429 - (48 + 1379))];
							if ((v2364 > (0 + 0)) or (4640 < 157)) then
								if (v2363 > v83[v2362 + 1]) then
									v77 = v85[3];
								else
									v83[v2362 + 2 + 1] = v2363;
								end
							elseif (v2363 < v83[v2362 + 1]) then
								v77 = v85[5 - 2];
							else
								v83[v2362 + 3 + 0] = v2363;
							end
						else
							v83[v85[117 - (79 + 36)]] = v83[v85[3]][v85[13 - 9]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[2 + 1]][v85[3 + 1]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2 + 0]][v85[6 - 3]] = v83[v85[4]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2]] = v85[2 + 1];
							v77 = v77 + 1;
							v85 = v73[v77];
							v77 = v85[1017 - (631 + 383)];
						end
					elseif (v86 <= 198) then
						if (v86 <= (1826 - (445 + 1190))) then
							if (v86 <= (1613 - (810 + 615))) then
								if (v86 <= (1480 - (819 + 475))) then
									local v522 = 1335 - (243 + 1092);
									local v523;
									while true do
										if ((2872 < 3140) and (v522 == (5 - 3))) then
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[2 + 0]] = v83[v85[1 + 2]][v85[4 + 0]];
											v77 = v77 + (1 - 0);
											v522 = 3;
										end
										if (v522 == (0 - 0)) then
											v523 = nil;
											v83[v85[526 - (119 + 405)]] = v83[v85[6 - 3]][v85[13 - 9]];
											v77 = v77 + (610 - (352 + 257));
											v85 = v73[v77];
											v522 = 1 + 0;
										end
										if ((3369 == 3369) and (v522 == (1166 - (88 + 1075)))) then
											v85 = v73[v77];
											v83[v85[1073 - (477 + 594)]] = v85[726 - (328 + 395)];
											v77 = v77 + (505 - (164 + 340));
											v85 = v73[v77];
											v522 = 5 - 1;
										end
										if ((3153 >= 434) and ((12 - 7) == v522)) then
											v77 = v77 + (1230 - (1008 + 221));
											v85 = v73[v77];
											v83[v85[1513 - (1025 + 486)]] = v83[v85[6 - 3]][v85[11 - 7]];
											v77 = v77 + (220 - (108 + 111));
											v522 = 104 - (82 + 16);
										end
										if (v522 == (1736 - (533 + 1196))) then
											v523 = v85[2 - 0];
											v83[v523] = v83[v523](v13(v83, v523 + (213 - (161 + 51)), v85[437 - (294 + 140)]));
											break;
										end
										if (v522 == (4 - 3)) then
											v83[v85[840 - (717 + 121)]] = {};
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2 - 0]] = v63[v85[3]];
											v522 = 2 + 0;
										end
										if ((1 + 3) == v522) then
											v83[v85[2]] = v62[v85[1713 - (1001 + 709)]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[1122 - (242 + 878)]] = v83[v85[1786 - (1395 + 388)]][v85[2 + 2]];
											v522 = 4 + 1;
										end
										if (v522 == (6 + 0)) then
											v85 = v73[v77];
											v83[v85[1 + 1]] = v83[v85[1950 - (1289 + 658)]][v85[4]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v522 = 7;
										end
									end
								elseif ((561 < 2624) and (v86 > (103 + 84))) then
									v83[v85[3 - 1]] = v62[v85[3 + 0]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[5 - 2]][v85[1980 - (337 + 1639)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[3 - 1]] = v83[v85[7 - 4]][v83[v85[8 - 4]]];
									v77 = v77 + (1738 - (630 + 1107));
									v85 = v73[v77];
									v83[v85[2 + 0]][v83[v85[1 + 2]]] = v83[v85[5 - 1]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v77 = v85[3 + 0];
								else
									local v2383 = 0;
									local v2384;
									while true do
										if (v2383 == (62 - (13 + 48))) then
											v85 = v73[v77];
											v83[v85[701 - (658 + 41)]] = v85[5 - 2];
											v77 = v77 + (1908 - (1591 + 316));
											v2383 = 3 - 1;
										end
										if (v2383 == (1 + 2)) then
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[2]] = v85[3];
											v2383 = 12 - 8;
										end
										if ((1278 - (1241 + 35)) == v2383) then
											v85 = v73[v77];
											v2384 = v85[42 - (18 + 22)];
											v83[v2384](v13(v83, v2384 + (1 - 0), v85[1 + 2]));
											v2383 = 1305 - (697 + 605);
										end
										if (v2383 == (0 + 0)) then
											v2384 = nil;
											v83[v85[2]] = v85[6 - 3];
											v77 = v77 + 1;
											v2383 = 330 - (188 + 141);
										end
										if (v2383 == (16 - 12)) then
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v77 = v85[3];
											break;
										end
									end
								end
							elseif ((v86 <= (1139 - (34 + 916))) or (2279 >= 4630)) then
								local v524 = v85[1739 - (357 + 1380)];
								do
									return v83[v524](v13(v83, v524 + 1 + 0, v78));
								end
							elseif (v86 == (90 + 100)) then
								v83[v85[1 + 1]] = v62[v85[3]];
							else
								local v2387 = 0;
								while true do
									if (v2387 == 2) then
										v83[v85[2]] = v83[v85[3]][v85[1931 - (178 + 1749)]];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v2387 = 1418 - (142 + 1273);
									end
									if (v2387 == (594 - (284 + 309))) then
										v83[v85[2 + 0]] = v63[v85[693 - (622 + 68)]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v2387 = 4 - 2;
									end
									if (v2387 == (7 + 1)) then
										v77 = v85[2 + 1];
										break;
									end
									if (v2387 == 4) then
										v83[v85[2]] = v83[v85[1901 - (855 + 1043)]][v85[8 - 4]];
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v2387 = 17 - 12;
									end
									if ((2692 == 2692) and (v2387 == (782 - (576 + 203)))) then
										v83[v85[2]] = v83[v85[7 - 4]][v85[5 - 1]];
										v77 = v77 + (1985 - (709 + 1275));
										v85 = v73[v77];
										v2387 = 4;
									end
									if ((547 < 2365) and (v2387 == (5 + 0))) then
										v83[v85[2]] = v83[v85[3]][v85[4]];
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v2387 = 22 - 16;
									end
									if (v2387 == 0) then
										v83[v85[120 - (31 + 87)]]();
										v77 = v77 + (132 - (44 + 87));
										v85 = v73[v77];
										v2387 = 3 - 2;
									end
									if ((1470 == 1470) and ((5 + 1) == v2387)) then
										v83[v85[2]] = v83[v85[6 - 3]][v85[11 - 7]];
										v77 = v77 + (787 - (284 + 502));
										v85 = v73[v77];
										v2387 = 5 + 2;
									end
									if (v2387 == (1193 - (124 + 1062))) then
										v83[v85[1029 - (847 + 180)]] = v85[3 + 0];
										v77 = v77 + (4 - 3);
										v85 = v73[v77];
										v2387 = 1371 - (369 + 994);
									end
								end
							end
						elseif (v86 <= (1157 - (583 + 380))) then
							if (v86 <= (43 + 149)) then
								local v525 = 0 + 0;
								while true do
									if ((2064 <= 3026) and (v525 == (0 + 0))) then
										v83[v85[2]] = v83[v85[3]] + v85[1977 - (1085 + 888)];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v62[v85[11 - 8]] = v83[v85[9 - 7]];
										v525 = 1 - 0;
									end
									if (v525 == (1 + 1)) then
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[3]][v83[v85[3 + 1]]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v525 = 3;
									end
									if (v525 == (1 + 0)) then
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[2]] = v62[v85[4 - 1]];
										v77 = v77 + 1;
										v525 = 2 + 0;
									end
									if (v525 == (3 + 0)) then
										v83[v85[2]] = v85[3 + 0];
										v77 = v77 + 1;
										v85 = v73[v77];
										v77 = v85[217 - (153 + 61)];
										break;
									end
								end
							elseif (v86 > (1136 - (704 + 239))) then
								v83[v85[1 + 1]] = v83[v85[1389 - (740 + 646)]][v85[3 + 1]];
								v77 = v77 + (1923 - (1547 + 375));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[3]][v85[4]];
								v77 = v77 + (404 - (211 + 192));
								v85 = v73[v77];
								v83[v85[8 - 6]] = v83[v85[4 - 1]][v85[785 - (425 + 356)]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[4 - 2]] = v83[v85[1569 - (83 + 1483)]][v85[1276 - (123 + 1149)]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v63[v85[3 + 0]] = v83[v85[1 + 1]];
								v77 = v77 + (1581 - (908 + 672));
								v85 = v73[v77];
								v77 = v85[516 - (206 + 307)];
							else
								local v2399 = 0 + 0;
								while true do
									if ((2579 < 3495) and ((64 - (18 + 44)) == v2399)) then
										v85 = v73[v77];
										v83[v85[2]] = v63[v85[2 + 1]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v2399 = 6 - 3;
									end
									if ((1742 < 2532) and (v2399 == 3)) then
										v83[v85[1 + 1]] = v83[v85[938 - (226 + 709)]][v85[730 - (235 + 491)]];
										break;
									end
									if ((1 - 0) == v2399) then
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1301 - (463 + 836)]][v85[407 - (166 + 238)]] = v85[4];
										v77 = v77 + (1 - 0);
										v2399 = 2 + 0;
									end
									if ((v2399 == (1441 - (1080 + 361))) or (793 == 3945)) then
										v83[v85[2 - 0]][v85[2 + 1]] = v85[5 - 1];
										v77 = v77 + (301 - (254 + 46));
										v85 = v73[v77];
										v83[v85[1 + 1]] = v63[v85[2 + 1]];
										v2399 = 1;
									end
								end
							end
						elseif (v86 <= 196) then
							if ((v86 > (451 - (37 + 219))) or (4578 == 3398)) then
								v63[v85[3]] = v83[v85[1901 - (1330 + 569)]];
							else
								local v2402 = 0;
								local v2403;
								while true do
									if (v2402 == (0 - 0)) then
										v2403 = v85[2 - 0];
										v83[v2403] = v83[v2403](v13(v83, v2403 + 1, v78));
										break;
									end
								end
							end
						elseif (v86 > (786 - 589)) then
							local v2404 = 0 - 0;
							local v2405;
							while true do
								if (((676 - (128 + 542)) == v2404) or (2337 < 1753)) then
									v85 = v73[v77];
									v2405 = v85[3 - 1];
									v83[v2405] = v83[v2405](v13(v83, v2405 + (3 - 2), v85[10 - 7]));
									v2404 = 2 + 5;
								end
								if ((v2404 == (0 - 0)) or (3753 == 3624)) then
									v2405 = nil;
									v83[v85[2 + 0]] = v83[v85[3]][v85[3 + 1]];
									v77 = v77 + 1;
									v2404 = 1 - 0;
								end
								if (((1 + 0) == v2404) or (2737 == 4865)) then
									v85 = v73[v77];
									v83[v85[814 - (96 + 716)]] = v85[1610 - (85 + 1522)];
									v77 = v77 + (854 - (724 + 129));
									v2404 = 2;
								end
								if ((6 - 4) == v2404) then
									v85 = v73[v77];
									v83[v85[375 - (83 + 290)]] = v63[v85[3 - 0]];
									v77 = v77 + (1 - 0);
									v2404 = 3 + 0;
								end
								if ((5 + 2) == v2404) then
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v63[v85[3 - 0]] = v83[v85[1 + 1]];
									break;
								end
								if (v2404 == 3) then
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[6 - 3]][v85[7 - 3]];
									v77 = v77 + (448 - (190 + 257));
									v2404 = 595 - (402 + 189);
								end
								if (((3 + 1) == v2404) or (4876 <= 1201)) then
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[569 - (90 + 476)]][v85[4]];
									v77 = v77 + (815 - (688 + 126));
									v2404 = 3 + 2;
								end
								if (v2404 == (1 + 4)) then
									v85 = v73[v77];
									v83[v85[501 - (34 + 465)]] = v83[v85[12 - 9]][v85[8 - 4]];
									v77 = v77 + 1 + 0;
									v2404 = 4 + 2;
								end
							end
						else
							local v2406;
							v83[v85[5 - 3]] = v83[v85[3 + 0]][v85[7 - 3]];
							v77 = v77 + (1808 - (587 + 1220));
							v85 = v73[v77];
							v83[v85[1894 - (1211 + 681)]] = v85[80 - (64 + 13)];
							v77 = v77 + (656 - (121 + 534));
							v85 = v73[v77];
							v83[v85[805 - (622 + 181)]] = v63[v85[2 + 1]];
							v77 = v77 + (1670 - (296 + 1373));
							v85 = v73[v77];
							v83[v85[1 + 1]] = v83[v85[3]][v85[2 + 2]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1616 - (143 + 1471)]] = v83[v85[9 - 6]][v85[2 + 2]];
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[183 - (103 + 77)]][v85[3 + 1]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v2406 = v85[1159 - (895 + 262)];
							v83[v2406] = v83[v2406](v13(v83, v2406 + (1 - 0), v85[3 + 0]));
							v77 = v77 + 1;
							v85 = v73[v77];
							v63[v85[1629 - (581 + 1045)]] = v83[v85[1277 - (582 + 693)]];
						end
					elseif ((v86 <= 205) or (4872 <= 2808)) then
						if (v86 <= (1387 - (454 + 732))) then
							if (v86 <= (371 - 172)) then
								local v526 = 0 + 0;
								while true do
									if ((v526 == (0 - 0)) or (744 > 1121)) then
										v83[v85[2 - 0]] = v83[v85[653 - (367 + 283)]][v85[72 - (7 + 61)]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v526 = 2 - 1;
									end
									if ((v526 == (6 - 3)) or (57 == 4583)) then
										v83[v85[1 + 1]] = v83[v85[681 - (332 + 346)]][v85[7 - 3]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v526 = 4;
									end
									if (v526 == (1 - 0)) then
										v83[v85[7 - 5]] = v83[v85[3 + 0]][v85[4 - 0]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v526 = 2;
									end
									if ((v526 == (1 + 1)) or (4121 < 1928)) then
										v83[v85[2 - 0]] = v83[v85[6 - 3]][v85[1858 - (815 + 1039)]];
										v77 = v77 + (777 - (336 + 440));
										v85 = v73[v77];
										v526 = 3;
									end
									if (5 == v526) then
										v77 = v85[3 + 0];
										break;
									end
									if ((v526 == 4) or (4193 < 1351)) then
										v63[v85[1 + 2]] = v83[v85[4 - 2]];
										v77 = v77 + (431 - (222 + 208));
										v85 = v73[v77];
										v526 = 1 + 4;
									end
								end
							elseif (v86 == (1030 - (652 + 178))) then
								local v2424;
								v83[v85[2 - 0]] = v83[v85[8 - 5]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[4 - 2]] = v85[397 - (259 + 135)];
								v77 = v77 + (1461 - (1393 + 67));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[1451 - (1129 + 319)];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v2424 = v85[2 - 0];
								v83[v2424] = v83[v2424](v13(v83, v2424 + (413 - (137 + 275)), v85[3]));
								v77 = v77 + (440 - (140 + 299));
								v85 = v73[v77];
								if (v83[v85[1103 - (421 + 680)]] == v85[19 - 15]) then
									v77 = v77 + (2 - 1);
								else
									v77 = v85[7 - 4];
								end
							else
								v83[v85[2 + 0]] = v63[v85[543 - (58 + 482)]];
								v77 = v77 + (680 - (310 + 369));
								v85 = v73[v77];
								v83[v85[2]] = v85[3];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[288 - (274 + 12)]][v85[3 + 0]] = v83[v85[4]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1764 - (681 + 1081)]] = v63[v85[3]];
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v83[v85[3 - 1]] = v85[3];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2]] = v85[880 - (842 + 35)] ~= (0 - 0);
								v77 = v77 + (1868 - (180 + 1687));
								v85 = v73[v77];
								v83[v85[2]][v83[v85[6 - 3]]] = v83[v85[975 - (269 + 702)]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[816 - (776 + 38)]] = v63[v85[2 + 1]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[1 + 1]] = v85[1 + 2];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v63[v85[6 - 3]];
							end
						elseif ((v86 <= 203) or (1943 > 4116)) then
							if (v86 == (140 + 62)) then
								local v2451 = 0 - 0;
								local v2452;
								local v2453;
								while true do
									if ((v2451 == 6) or (2744 == 4635)) then
										v2453 = v85[2];
										v2452 = v83[v85[2 + 1]];
										v83[v2453 + (956 - (135 + 820))] = v2452;
										v2451 = 143 - (118 + 18);
									end
									if (v2451 == (0 + 0)) then
										v2452 = nil;
										v2453 = nil;
										v83[v85[9 - 7]] = v83[v85[2 + 1]][v85[4 + 0]];
										v2451 = 1;
									end
									if (v2451 == (1 + 7)) then
										v2453 = v85[2 + 0];
										v83[v2453](v83[v2453 + (1294 - (741 + 552))]);
										v77 = v77 + 1 + 0;
										v2451 = 11 - 2;
									end
									if (v2451 == (4 + 0)) then
										v83[v2453](v83[v2453 + (885 - (779 + 105))]);
										v77 = v77 + (1782 - (1451 + 330));
										v85 = v73[v77];
										v2451 = 1874 - (1259 + 610);
									end
									if (v2451 == 3) then
										v77 = v77 + (851 - (4 + 846));
										v85 = v73[v77];
										v2453 = v85[1859 - (1108 + 749)];
										v2451 = 4;
									end
									if ((1809 > 141) and (v2451 == (1746 - (1301 + 440)))) then
										v83[v85[2 - 0]] = v62[v85[3]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v2451 = 6;
									end
									if (7 == v2451) then
										v83[v2453] = v2452[v85[1 + 3]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v2451 = 484 - (168 + 308);
									end
									if ((2488 > 420) and (v2451 == (1 - 0))) then
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1349 - (469 + 878)]] = v62[v85[3 + 0]];
										v2451 = 7 - 5;
									end
									if (v2451 == (4 + 5)) then
										v85 = v73[v77];
										v77 = v85[3];
										break;
									end
									if (v2451 == (1 + 1)) then
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v83[v85[2 + 0]] = v83[v85[11 - 8]][v85[1844 - (1332 + 508)]];
										v2451 = 1 + 2;
									end
								end
							else
								v83[v85[1 + 1]] = v83[v85[2 + 1]][v85[1146 - (650 + 492)]];
							end
						elseif ((v86 == (1010 - (689 + 117))) or (532 > 2891)) then
							local v2456 = 0;
							while true do
								if ((v2456 == (3 + 0)) or (2078 >= 3427)) then
									v83[v85[4 - 2]] = v83[v85[1926 - (794 + 1129)]][v85[4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2456 = 1 + 3;
								end
								if (v2456 == 5) then
									v77 = v85[3];
									break;
								end
								if (v2456 == (862 - (553 + 308))) then
									v83[v85[2]] = v83[v85[5 - 2]][v85[3 + 1]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2456 = 1770 - (1764 + 4);
								end
								if (v2456 == (521 - (121 + 396))) then
									v63[v85[557 - (498 + 56)]] = v83[v85[2]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2456 = 18 - 13;
								end
								if (((2 + 0) == v2456) or (3899 == 4408)) then
									v83[v85[5 - 3]] = v83[v85[3 - 0]][v85[2 + 2]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v2456 = 1619 - (316 + 1300);
								end
								if (v2456 == (172 - (78 + 94))) then
									v83[v85[2]] = v83[v85[1419 - (261 + 1155)]][v85[1460 - (1040 + 416)]];
									v77 = v77 + (44 - (29 + 14));
									v85 = v73[v77];
									v2456 = 1;
								end
							end
						else
							v83[v85[3 - 1]] = v83[v85[3]][v85[966 - (928 + 34)]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[1 + 2]][v85[4 + 0]];
							v77 = v77 + (3 - 2);
							v85 = v73[v77];
							v83[v85[5 - 3]] = v83[v85[3]][v85[6 - 2]];
							v77 = v77 + (511 - (69 + 441));
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[7 - 4]][v85[3 + 1]];
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v63[v85[1883 - (517 + 1363)]] = v83[v85[930 - (802 + 126)]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v77 = v85[3];
						end
					elseif (v86 <= 208) then
						if (v86 <= (1874 - (1660 + 8))) then
							local v527 = 0 - 0;
							local v528;
							while true do
								if ((v527 == (183 - (38 + 143))) or (1144 == 2130)) then
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[5 - 3]] = v83[v85[3]][v85[121 - (29 + 88)]];
									v77 = v77 + (1 - 0);
									v527 = 3;
								end
								if ((493 - (308 + 181)) == v527) then
									v83[v85[2]] = v83[v85[1400 - (537 + 860)]][v85[4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v528 = v85[1097 - (691 + 404)];
									v527 = 1959 - (870 + 1084);
								end
								if (v527 == 0) then
									v528 = nil;
									v83[v85[131 - (47 + 82)]] = v83[v85[1 + 2]][v85[4 + 0]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v527 = 3 - 2;
								end
								if (v527 == (120 - (84 + 33))) then
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[3]][v85[13 - 9]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v527 = 4;
								end
								if (v527 == (1 + 4)) then
									v83[v528] = v83[v528](v13(v83, v528 + 1, v85[7 - 4]));
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v63[v85[14 - 11]] = v83[v85[2 - 0]];
									break;
								end
								if (v527 == 1) then
									v83[v85[1222 - (87 + 1133)]] = v85[8 - 5];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v63[v85[3 + 0]];
									v527 = 2;
								end
							end
						elseif ((v86 == (874 - (205 + 462))) or (1002 > 4460)) then
							v83[v85[2]][v83[v85[3]]] = v83[v85[2 + 2]];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[1384 - (1035 + 346)]][v85[4]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1782 - (970 + 810)]] = v83[v85[3 + 0]][v83[v85[11 - 7]]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2 + 0]][v83[v85[3]]] = v83[v85[10 - 6]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v77 = v85[11 - 8];
						else
							local v2478;
							v83[v85[2]] = v83[v85[1391 - (601 + 787)]];
							v77 = v77 + (611 - (256 + 354));
							v85 = v73[v77];
							v83[v85[3 - 1]] = v83[v85[11 - 8]] - v85[10 - 6];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v2478 = v85[3 - 1];
							v83[v2478] = v83[v2478](v13(v83, v2478 + (2 - 1), v85[9 - 6]));
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[4 - 2]] = v83[v85[575 - (259 + 313)]] / v85[6 - 2];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1 + 1]] = v83[v85[3 + 0]] + v83[v85[11 - 7]];
							v77 = v77 + (1339 - (413 + 925));
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[3]] * v83[v85[4]];
							v77 = v77 + 1;
							v85 = v73[v77];
							do
								return v83[v85[2]];
							end
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v77 = v85[2 + 1];
						end
					elseif (v86 <= (67 + 143)) then
						if (v86 > (759 - 550)) then
							v83[v85[2 - 0]][v85[2 + 1]] = v85[11 - 7];
							v77 = v77 + (1945 - (1164 + 780));
							v85 = v73[v77];
							v83[v85[1362 - (596 + 764)]] = v63[v85[285 - (52 + 230)]];
							v77 = v77 + (3 - 2);
							v85 = v73[v77];
							v83[v85[1568 - (806 + 760)]][v85[8 - 5]] = v85[5 - 1];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2 - 0]] = v63[v85[2 + 1]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[7 - 5]] = v83[v85[5 - 2]][v85[1 + 3]];
						else
							local v2499 = 0 + 0;
							local v2500;
							local v2501;
							while true do
								if (v2499 == 4) then
									v85 = v73[v77];
									v83[v85[1967 - (1000 + 965)]] = v85[3];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2499 = 20 - 15;
								end
								if (v2499 == 3) then
									v2500 = v83[v85[8 - 5]];
									v83[v2501 + 1 + 0] = v2500;
									v83[v2501] = v2500[v85[1130 - (261 + 865)]];
									v77 = v77 + (2 - 1);
									v2499 = 5 - 1;
								end
								if (v2499 == (4 + 1)) then
									v2501 = v85[547 - (33 + 512)];
									v83[v2501] = v83[v2501](v13(v83, v2501 + (1837 - (1555 + 281)), v85[6 - 3]));
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2499 = 9 - 3;
								end
								if (v2499 == 2) then
									v83[v85[2 + 0]] = v83[v85[8 - 5]][v85[4 + 0]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v2501 = v85[41 - (34 + 5)];
									v2499 = 3;
								end
								if (v2499 == (0 + 0)) then
									v2500 = nil;
									v2501 = nil;
									v83[v85[1 + 1]] = v83[v85[3]][v85[3 + 1]];
									v77 = v77 + 1 + 0;
									v2499 = 1;
								end
								if (v2499 == (2 + 4)) then
									v83[v85[6 - 4]] = v83[v85[6 - 3]];
									v77 = v77 + 1;
									v85 = v73[v77];
									if v83[v85[1223 - (999 + 222)]] then
										v77 = v77 + 1 + 0;
									else
										v77 = v85[1 + 2];
									end
									break;
								end
								if ((345 - (166 + 178)) == v2499) then
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[8 - 5]][v85[1304 - (587 + 713)]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v2499 = 2;
								end
							end
						end
					elseif (v86 == (149 + 62)) then
						v83[v85[2]] = v85[1125 - (11 + 1111)];
						v77 = v77 + 1 + 0;
						v85 = v73[v77];
						v83[v85[2 + 0]][v85[6 - 3]] = v83[v85[4]];
						v77 = v77 + 1;
						v85 = v73[v77];
						v83[v85[1102 - (882 + 218)]] = v63[v85[3 + 0]];
						v77 = v77 + 1;
						v85 = v73[v77];
						v83[v85[964 - (115 + 847)]] = v85[8 - 5];
						v77 = v77 + (1616 - (1231 + 384));
						v85 = v73[v77];
						v83[v85[2]] = v85[3] ~= (0 - 0);
						v77 = v77 + (1697 - (1202 + 494));
						v85 = v73[v77];
						v83[v85[2]][v83[v85[3]]] = v83[v85[182 - (12 + 166)]];
						v77 = v77 + 1;
						v85 = v73[v77];
						v83[v85[4 - 2]] = v85[3 + 0];
						v77 = v77 + (605 - (202 + 402));
						v85 = v73[v77];
						v77 = v85[2 + 1];
					else
						v83[v85[2]] = v83[v85[1001 - (936 + 62)]][v83[v85[4]]];
					end
				elseif (v86 <= (666 - (119 + 229))) then
					if (v86 <= (636 - 371)) then
						if (v86 <= (902 - 664)) then
							if ((v86 <= (14 + 211)) or (645 > 4617)) then
								if (v86 <= (487 - 269)) then
									if ((931 == 931) and (v86 <= (1651 - (513 + 923)))) then
										if (v86 <= (1990 - (507 + 1270))) then
											local v529 = 0 + 0;
											while true do
												if (v529 == (7 - 5)) then
													v85 = v73[v77];
													v83[v85[2 + 0]] = v63[v85[3]];
													v77 = v77 + (3 - 2);
													v85 = v73[v77];
													v529 = 3 - 0;
												end
												if ((772 - (644 + 125)) == v529) then
													v83[v85[2 + 0]] = v83[v85[1850 - (718 + 1129)]][v85[4]];
													break;
												end
												if (v529 == (0 + 0)) then
													v83[v85[2]][v85[3]] = v85[11 - 7];
													v77 = v77 + (1410 - (564 + 845));
													v85 = v73[v77];
													v83[v85[5 - 3]] = v63[v85[165 - (46 + 116)]];
													v529 = 1;
												end
												if (v529 == (651 - (575 + 75))) then
													v77 = v77 + (2 - 1);
													v85 = v73[v77];
													v83[v85[6 - 4]][v85[3]] = v85[4];
													v77 = v77 + (3 - 2);
													v529 = 1 + 1;
												end
											end
										elseif (v86 == (128 + 86)) then
											local v2518;
											local v2519;
											v83[v85[1 + 1]] = v62[v85[3]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[672 - (224 + 446)]] = v83[v85[1 + 2]][v85[4]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v2519 = v85[6 - 4];
											v2518 = v83[v85[3]];
											v83[v2519 + 1] = v2518;
											v83[v2519] = v2518[v85[322 - (56 + 262)]];
											v77 = v77 + (3 - 2);
											v85 = v73[v77];
											v83[v85[703 - (666 + 35)]] = v85[8 - 5];
											v77 = v77 + (1181 - (553 + 627));
											v85 = v73[v77];
											v2519 = v85[1475 - (936 + 537)];
											v83[v2519] = v83[v2519](v13(v83, v2519 + 1 + 0, v85[1203 - (737 + 463)]));
											v77 = v77 + 1;
											v85 = v73[v77];
											if ((4781 < 4880) and v83[v85[2 + 0]]) then
												v77 = v77 + (668 - (424 + 243));
											else
												v77 = v85[1 + 2];
											end
										else
											local v2533 = 0 - 0;
											local v2534;
											while true do
												if (v2533 == 2) then
													v83[v85[1348 - (1213 + 133)]] = v62[v85[3]];
													v77 = v77 + (1 - 0);
													v85 = v73[v77];
													v2534 = v85[2 + 0];
													v2533 = 63 - (37 + 23);
												end
												if ((v2533 == 3) or (2213 < 1116)) then
													v83[v2534] = v83[v2534]();
													v77 = v77 + (3 - 2);
													v85 = v73[v77];
													v83[v85[1345 - (122 + 1221)]][v85[245 - (139 + 103)]] = v83[v85[1 + 3]];
													v2533 = 2 + 2;
												end
												if (v2533 == (1 - 0)) then
													v85 = v73[v77];
													v83[v85[2 + 0]][v85[2 + 1]] = v83[v85[1 + 3]];
													v77 = v77 + (107 - (9 + 97));
													v85 = v73[v77];
													v2533 = 3 - 1;
												end
												if (v2533 == (2 + 2)) then
													v77 = v77 + 1 + 0;
													v85 = v73[v77];
													v77 = v85[3 + 0];
													break;
												end
												if ((3341 <= 3513) and (v2533 == (0 - 0))) then
													v2534 = nil;
													v2534 = v85[1077 - (657 + 418)];
													v83[v2534] = v83[v2534]();
													v77 = v77 + (1981 - (448 + 1532));
													v2533 = 1;
												end
											end
										end
									elseif (v86 <= (469 - (110 + 143))) then
										if ((1241 <= 1645) and (v83[v85[5 - 3]] <= v85[947 - (549 + 394)])) then
											v77 = v77 + 1;
										else
											v77 = v85[2 + 1];
										end
									elseif (v86 > (1451 - (500 + 734))) then
										local v2536 = 0 + 0;
										local v2537;
										local v2538;
										local v2539;
										local v2540;
										while true do
											if (v2536 == (1 + 8)) then
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v77 = v85[668 - (343 + 322)];
												break;
											end
											if (v2536 == (1 + 0)) then
												v83[v85[1 + 1]] = v83[v85[1 + 2]][v83[v85[13 - 9]]];
												v77 = v77 + 1;
												v85 = v73[v77];
												v2536 = 2;
											end
											if ((v2536 == (1135 - (297 + 834))) or (358 >= 3764)) then
												v83[v85[9 - 7]] = v83[v85[1 + 2]] + v85[10 - 6];
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v2536 = 5 + 0;
											end
											if ((914 <= 2305) and (v2536 == (788 - (494 + 292)))) then
												v83[v85[1 + 1]] = v62[v85[3]];
												v77 = v77 + (4 - 3);
												v85 = v73[v77];
												v2536 = 1635 - (888 + 744);
											end
											if (v2536 == (2 + 5)) then
												v2537 = 685 - (206 + 479);
												for v6710 = v2540, v78 do
													local v6711 = 0 + 0;
													while true do
														if ((v6711 == 0) or (2590 >= 3835)) then
															v2537 = v2537 + (1174 - (861 + 312));
															v83[v6710] = v2538[v2537];
															break;
														end
													end
												end
												v77 = v77 + (737 - (135 + 601));
												v2536 = 8;
											end
											if (v2536 == (1145 - (1085 + 57))) then
												v83[v85[1927 - (224 + 1701)]] = v83[v85[1 + 2]];
												v77 = v77 + 1;
												v85 = v73[v77];
												v2536 = 10 - 6;
											end
											if (v2536 == 5) then
												v83[v85[2]] = v62[v85[3 + 0]];
												v77 = v77 + (3 - 2);
												v85 = v73[v77];
												v2536 = 5 + 1;
											end
											if (0 == v2536) then
												v2537 = nil;
												v2538, v2539 = nil;
												v2540 = nil;
												v2536 = 747 - (730 + 16);
											end
											if (v2536 == (8 + 0)) then
												v85 = v73[v77];
												v2540 = v85[2];
												v83[v2540](v13(v83, v2540 + (1583 - (790 + 792)), v78));
												v2536 = 1090 - (474 + 607);
											end
											if ((v2536 == (536 - (129 + 401))) or (3838 >= 4627)) then
												v2540 = v85[2 - 0];
												v2538, v2539 = v76(v83[v2540](v13(v83, v2540 + 1, v85[121 - (51 + 67)])));
												v78 = (v2539 + v2540) - (1 + 0);
												v2536 = 120 - (93 + 20);
											end
										end
									else
										v83[v85[7 - 5]] = v83[v85[23 - (12 + 8)]][v85[4]];
										v77 = v77 + (199 - (161 + 37));
										v85 = v73[v77];
										v83[v85[1 + 1]] = v83[v85[1560 - (507 + 1050)]][v85[7 - 3]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[2 + 0]][v85[1 + 2]] = v83[v85[1 + 3]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[3 - 1]] = v85[867 - (184 + 680)];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v77 = v85[8 - 5];
									end
								elseif (v86 <= 221) then
									if (v86 <= 219) then
										local v530 = 0;
										local v531;
										while true do
											if (v530 == (2 + 0)) then
												v85 = v73[v77];
												v83[v85[4 - 2]] = v83[v85[5 - 2]][v83[v85[2 + 2]]];
												v77 = v77 + (1051 - (629 + 421));
												v530 = 3 + 0;
											end
											if (v530 == (0 - 0)) then
												v531 = nil;
												v83[v85[3 - 1]] = v83[v85[3]][v83[v85[944 - (544 + 396)]]];
												v77 = v77 + (1 - 0);
												v530 = 1;
											end
											if (v530 == (995 - (904 + 87))) then
												v77 = v77 + (3 - 2);
												v85 = v73[v77];
												v77 = v85[3];
												break;
											end
											if (((1475 - (1443 + 31)) == v530) or (2585 < 1015)) then
												v85 = v73[v77];
												v83[v85[2]] = v83[v85[6 - 3]] + v85[1817 - (1110 + 703)];
												v77 = v77 + (2 - 1);
												v530 = 2;
											end
											if (v530 == (2 + 1)) then
												v85 = v73[v77];
												v531 = v85[2];
												v83[v531](v83[v531 + (2 - 1)]);
												v530 = 10 - 6;
											end
										end
									elseif (v86 > (423 - (78 + 125))) then
										local v2551;
										v2551 = v85[2];
										v83[v2551] = v83[v2551]();
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v83[v85[3 - 1]] = v83[v85[4 - 1]];
										v77 = v77 + 1;
										v85 = v73[v77];
										for v4517 = v85[2], v85[1827 - (1392 + 432)] do
											v83[v4517] = nil;
										end
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2]] = v85[7 - 4];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v77 = v85[1405 - (963 + 439)];
									else
										local v2560 = 0 - 0;
										local v2561;
										local v2562;
										while true do
											if ((v2560 == (1325 - (76 + 1249))) or (78 > 2661)) then
												v2561 = v85[2];
												v2562 = v83[v2561];
												v2560 = 1752 - (1165 + 586);
											end
											if (v2560 == (1929 - (1916 + 12))) then
												for v6712 = v2561 + (1257 - (604 + 652)), v78 do
													v7(v2562, v83[v6712]);
												end
												break;
											end
										end
									end
								elseif (v86 <= 223) then
									if ((2514 < 2973) and (v86 == (441 - 219))) then
										local v2563;
										local v2564;
										v83[v85[1 + 1]] = v83[v85[3]][v85[4]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[1 + 1]] = v85[6 - 3];
										v77 = v77 + 1;
										v85 = v73[v77];
										v2564 = v85[2 - 0];
										v83[v2564](v83[v2564 + (1 - 0)]);
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[15 - (11 + 2)]] = v62[v85[1445 - (64 + 1378)]];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v2564 = v85[1755 - (256 + 1497)];
										v2563 = v83[v85[3 - 0]];
										v83[v2564 + (878 - (562 + 315))] = v2563;
										v83[v2564] = v2563[v85[15 - 11]];
										v77 = v77 + (1189 - (577 + 611));
										v85 = v73[v77];
										v2564 = v85[2];
										v83[v2564](v83[v2564 + 1 + 0]);
										v77 = v77 + 1;
										v85 = v73[v77];
										v77 = v85[7 - 4];
									elseif ((v83[v85[3 - 1]] <= v83[v85[4]]) or (4387 > 4586)) then
										v77 = v77 + 1;
									else
										v77 = v85[3];
									end
								elseif ((v86 == 224) or (3062 <= 2752)) then
									local v2579 = 0;
									local v2580;
									while true do
										if (v2579 == (71 - (58 + 13))) then
											v2580 = v85[2 + 0];
											v78 = (v2580 + v84) - (1 + 0);
											v2579 = 1;
										end
										if (v2579 == 1) then
											for v6713 = v2580, v78 do
												local v6714 = 0;
												local v6715;
												while true do
													if (v6714 == (454 - (404 + 50))) then
														v6715 = v79[v6713 - v2580];
														v83[v6713] = v6715;
														break;
													end
												end
											end
											break;
										end
									end
								else
									local v2581 = 0;
									while true do
										if ((4605 >= 2925) and (v2581 == (38 - (6 + 30)))) then
											v85 = v73[v77];
											v83[v85[1335 - (770 + 563)]][v83[v85[3 + 0]]] = v83[v85[4]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v2581 = 3;
										end
										if ((0 + 0) == v2581) then
											v83[v85[2]] = v62[v85[173 - (25 + 145)]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[701 - (153 + 546)]] = v83[v85[3 + 0]] + v85[931 - (60 + 867)];
											v2581 = 3 - 2;
										end
										if ((v2581 == 1) or (551 >= 2368)) then
											v77 = v77 + (1284 - (309 + 974));
											v85 = v73[v77];
											v83[v85[1 + 1]] = v83[v85[3]][v83[v85[10 - 6]]];
											v77 = v77 + 1;
											v2581 = 1143 - (677 + 464);
										end
										if (v2581 == (825 - (567 + 255))) then
											v77 = v85[4 - 1];
											break;
										end
									end
								end
							elseif (v86 <= (304 - 73)) then
								if (v86 <= (756 - (384 + 144))) then
									if (v86 <= (1447 - (1030 + 191))) then
										if ((v85[2] < v83[v85[7 - 3]]) or (2941 < 1622)) then
											v77 = v77 + (1 - 0);
										else
											v77 = v85[3];
										end
									elseif (v86 > (108 + 119)) then
										local v2583;
										v83[v85[859 - (326 + 531)]] = v83[v85[3]][v85[9 - 5]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v85[3];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v83[v85[1 + 1]] = v63[v85[3 + 0]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1623 - (1367 + 254)]] = v83[v85[681 - (305 + 373)]][v85[4 - 0]];
										v77 = v77 + (320 - (129 + 190));
										v85 = v73[v77];
										v83[v85[5 - 3]] = v83[v85[5 - 2]][v85[4]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[3 + 0]][v85[4]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v2583 = v85[291 - (210 + 79)];
										v83[v2583] = v83[v2583](v13(v83, v2583 + (1 - 0), v85[3]));
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v63[v85[675 - (32 + 640)]] = v83[v85[2]];
									else
										local v2599 = 0;
										local v2600;
										while true do
											if ((v2599 == (4 + 0)) or (4883 < 4603)) then
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v83[v85[1 + 1]] = v63[v85[2 + 1]];
												v2599 = 1766 - (847 + 914);
											end
											if (v2599 == (5 - 3)) then
												v85 = v73[v77];
												v2600 = v85[4 - 2];
												v83[v2600] = v83[v2600](v83[v2600 + (525 - (163 + 361))]);
												v2599 = 888 - (162 + 723);
											end
											if (v2599 == (1 + 5)) then
												v77 = v77 + (402 - (258 + 143));
												v85 = v73[v77];
												v83[v85[8 - 6]] = v85[6 - 3];
												v2599 = 27 - 20;
											end
											if ((419 == 419) and (v2599 == (1691 - (486 + 1205)))) then
												v2600 = nil;
												v83[v85[2]] = v83[v85[168 - (92 + 73)]][v85[4]];
												v77 = v77 + 1 + 0;
												v2599 = 1;
											end
											if (v2599 == 3) then
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v63[v85[3]] = v83[v85[2 - 0]];
												v2599 = 276 - (68 + 204);
											end
											if (v2599 == (8 - 3)) then
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v83[v85[1 + 1]][v85[14 - 11]] = v85[4];
												v2599 = 3 + 3;
											end
											if (v2599 == (1 + 0)) then
												v85 = v73[v77];
												v83[v85[2 + 0]] = v85[319 - (20 + 296)];
												v77 = v77 + 1 + 0;
												v2599 = 8 - 6;
											end
											if (v2599 == (23 - 16)) then
												v77 = v77 + 1;
												v85 = v73[v77];
												v77 = v85[4 - 1];
												break;
											end
										end
									end
								elseif ((3542 >= 2272) and (v86 <= (152 + 77))) then
									local v532;
									local v533;
									v533 = v85[2];
									v532 = v83[v85[1 + 2]];
									v83[v533 + (2 - 1)] = v532;
									v83[v533] = v532[v85[4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v85[3];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v533 = v85[1 + 1];
									v83[v533] = v83[v533](v13(v83, v533 + 1, v85[7 - 4]));
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2 + 0]] = v63[v85[252 - (155 + 94)]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2 - 0]] = v83[v85[3]][v85[911 - (515 + 392)]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[328 - (7 + 319)]] = v85[3];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v63[v85[1500 - (292 + 1205)]];
									v77 = v77 + (53 - (13 + 39));
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[3 + 0]][v85[12 - 8]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[1040 - (850 + 188)]] = v85[1039 - (822 + 214)];
									v77 = v77 + (1162 - (317 + 844));
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[3 + 0]][v83[v85[2 + 2]]];
								elseif (v86 == (1420 - (508 + 682))) then
									local v2601 = 0 + 0;
									local v2602;
									while true do
										if (v2601 == (4 + 3)) then
											v85 = v73[v77];
											v83[v85[2]] = v85[548 - (127 + 418)];
											break;
										end
										if ((257 <= 3665) and (v2601 == 0)) then
											v2602 = nil;
											v83[v85[5 - 3]] = v83[v85[6 - 3]];
											v77 = v77 + (4 - 3);
											v85 = v73[v77];
											v83[v85[2 - 0]] = v85[3];
											v2601 = 1;
										end
										if (v2601 == (1121 - (690 + 430))) then
											v77 = v77 + (3 - 2);
											v85 = v73[v77];
											v83[v85[1 + 1]] = v85[5 - 2];
											v77 = v77 + (953 - (637 + 315));
											v85 = v73[v77];
											v2601 = 5 - 3;
										end
										if (6 == v2601) then
											v83[v2602] = v83[v2602](v13(v83, v2602 + (2 - 1), v85[9 - 6]));
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[7 - 4]];
											v77 = v77 + (21 - (13 + 7));
											v2601 = 2 + 5;
										end
										if (v2601 == (4 - 1)) then
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[2]] = v62[v85[3 - 0]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v2601 = 4;
										end
										if ((3069 > 1079) and (v2601 == 2)) then
											v2602 = v85[2 + 0];
											v83[v2602] = v83[v2602](v13(v83, v2602 + (352 - (44 + 307)), v85[800 - (127 + 670)]));
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[586 - (375 + 209)]] = v83[v85[1819 - (1673 + 143)]];
											v2601 = 3;
										end
										if (v2601 == 5) then
											v85 = v73[v77];
											v83[v85[2 + 0]] = v85[2 + 1];
											v77 = v77 + (1450 - (836 + 613));
											v85 = v73[v77];
											v2602 = v85[3 - 1];
											v2601 = 5 + 1;
										end
										if (v2601 == 4) then
											v83[v85[2]] = v83[v85[1533 - (295 + 1235)]];
											v77 = v77 + (541 - (328 + 212));
											v85 = v73[v77];
											v83[v85[2]] = v85[6 - 3];
											v77 = v77 + 1;
											v2601 = 924 - (517 + 402);
										end
									end
								else
									local v2603 = v85[4 - 2];
									local v2604 = v83[v2603 + (5 - 3)];
									local v2605 = v83[v2603] + v2604;
									v83[v2603] = v2605;
									if (v2604 > (1082 - (700 + 382))) then
										if ((v2605 <= v83[v2603 + (880 - (677 + 202))]) or (2767 == 309)) then
											local v6716 = 0 - 0;
											while true do
												if ((3153 > 160) and (v6716 == (0 - 0))) then
													v77 = v85[3 + 0];
													v83[v2603 + (756 - (360 + 393))] = v2605;
													break;
												end
											end
										end
									elseif (v2605 >= v83[v2603 + 1]) then
										local v6717 = 0 - 0;
										while true do
											if (v6717 == (1957 - (1231 + 726))) then
												v77 = v85[4 - 1];
												v83[v2603 + 3] = v2605;
												break;
											end
										end
									end
								end
							elseif (v86 <= (2144 - (173 + 1737))) then
								if (v86 <= (2179 - (441 + 1506))) then
									v83[v85[2]] = v83[v85[3]][v85[1 + 3]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[696 - (136 + 558)]] = v83[v85[2 + 1]][v85[4]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[1225 - (988 + 234)]][v85[2 + 2]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[653 - (125 + 526)]] = v83[v85[9 - 6]][v85[4 + 0]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v63[v85[8 - 5]] = v83[v85[1128 - (290 + 836)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v77 = v85[4 - 1];
								elseif ((844 < 2170) and (v86 > 233)) then
									local v2607;
									v83[v85[682 - (8 + 672)]] = v83[v85[3]][v85[4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1438 - (740 + 696)]] = v85[1049 - (353 + 693)];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v63[v85[1496 - (35 + 1458)]];
									v77 = v77 + (1871 - (1821 + 49));
									v85 = v73[v77];
									v83[v85[5 - 3]] = v83[v85[1737 - (727 + 1007)]][v85[4]];
									v77 = v77 + (168 - (165 + 2));
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[1662 - (1028 + 631)]][v85[4]];
									v77 = v77 + (1616 - (311 + 1304));
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[3]][v85[4]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v2607 = v85[1 + 1];
									v83[v2607] = v83[v2607](v13(v83, v2607 + 1 + 0, v85[582 - (512 + 67)]));
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v63[v85[1 + 2]] = v83[v85[1 + 1]];
								else
									v83[v85[2 - 0]] = v83[v85[9 - 6]] % v85[1 + 3];
								end
							elseif (v86 <= (670 - 434)) then
								if (v86 == 235) then
									local v2623 = 1789 - (395 + 1394);
									local v2624;
									local v2625;
									while true do
										if (v2623 == (14 - 10)) then
											v85 = v73[v77];
											v2625 = v85[2 + 0];
											v83[v2625] = v83[v2625](v13(v83, v2625 + (2 - 1), v85[3]));
											v77 = v77 + (2 - 1);
											v2623 = 472 - (143 + 324);
										end
										if (v2623 == (7 - 4)) then
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[1 + 1]] = v85[8 - 5];
											v77 = v77 + 1;
											v2623 = 2 + 2;
										end
										if (v2623 == (1108 - (342 + 761))) then
											v85 = v73[v77];
											if not v83[v85[2 + 0]] then
												v77 = v77 + (2 - 1);
											else
												v77 = v85[2 + 1];
											end
											break;
										end
										if (v2623 == (1 - 0)) then
											v85 = v73[v77];
											v83[v85[3 - 1]] = v83[v85[3]][v83[v85[3 + 1]]];
											v77 = v77 + (1158 - (889 + 268));
											v85 = v73[v77];
											v2623 = 2;
										end
										if ((461 == 461) and (v2623 == (0 + 0))) then
											v2624 = nil;
											v2625 = nil;
											v83[v85[1 + 1]] = v85[7 - 4];
											v77 = v77 + 1;
											v2623 = 298 - (196 + 101);
										end
										if (v2623 == (2 - 0)) then
											v2625 = v85[5 - 3];
											v2624 = v83[v85[2 + 1]];
											v83[v2625 + (3 - 2)] = v2624;
											v83[v2625] = v2624[v85[9 - 5]];
											v2623 = 8 - 5;
										end
									end
								else
									local v2626;
									local v2627;
									v83[v85[2]] = v83[v85[3]][v85[4 + 0]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[1586 - (431 + 1152)]][v85[4 + 0]];
									v77 = v77 + (345 - (107 + 237));
									v85 = v73[v77];
									v83[v85[1802 - (690 + 1110)]] = v62[v85[4 - 1]];
									v77 = v77 + (1498 - (1374 + 123));
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[6 - 3]][v85[2 + 2]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[1 + 2]][v85[1607 - (454 + 1149)]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[6 - 3]][v85[2 + 2]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[639 - (21 + 616)]] = v83[v85[3]][v85[8 - 4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[439 - (125 + 312)]][v85[3 + 0]] = v83[v85[4 + 0]];
									v77 = v77 + (1109 - (266 + 842));
									v85 = v73[v77];
									v83[v85[640 - (395 + 243)]] = v62[v85[3 + 0]];
									v77 = v77 + (1036 - (383 + 652));
									v85 = v73[v77];
									v83[v85[5 - 3]] = v83[v85[2 + 1]][v85[3 + 1]];
									v77 = v77 + (644 - (114 + 529));
									v85 = v73[v77];
									v2627 = v85[2 + 0];
									v2626 = v83[v85[2 + 1]];
									v83[v2627 + 1] = v2626;
									v83[v2627] = v2626[v85[4]];
									v77 = v77 + (1190 - (352 + 837));
									v85 = v73[v77];
									v83[v85[8 - 6]] = v62[v85[553 - (465 + 85)]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[533 - (366 + 165)]] = v83[v85[1 + 2]][v85[12 - 8]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[1668 - (521 + 1144)]][v85[7 - 3]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[93 - (5 + 85)]][v85[1697 - (1547 + 146)]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v2627 = v85[319 - (272 + 45)];
									v83[v2627] = v83[v2627](v13(v83, v2627 + (2 - 1), v85[3]));
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[4 - 1]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v85[3];
								end
							elseif ((683 < 939) and (v86 == (196 + 41))) then
								local v2659 = 0 + 0;
								while true do
									if ((v2659 == (1297 - (997 + 299))) or (2928 >= 3676)) then
										v83[v85[1289 - (903 + 384)]] = v83[v85[3]][v85[1 + 3]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v2659 = 2;
									end
									if (v2659 == 3) then
										v83[v85[2 + 0]] = v83[v85[3]][v85[7 - 3]];
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v2659 = 2 + 2;
									end
									if ((2130 >= 1674) and (v2659 == 2)) then
										v83[v85[2]] = v83[v85[3 - 0]][v85[3 + 1]];
										v77 = v77 + (590 - (313 + 276));
										v85 = v73[v77];
										v2659 = 1 + 2;
									end
									if (v2659 == (328 - (168 + 160))) then
										v83[v85[1458 - (1452 + 4)]] = v83[v85[13 - 10]][v85[424 - (338 + 82)]];
										v77 = v77 + (574 - (133 + 440));
										v85 = v73[v77];
										v2659 = 1 + 0;
									end
									if (v2659 == 4) then
										v63[v85[4 - 1]] = v83[v85[1 + 1]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v2659 = 4 + 1;
									end
									if (5 == v2659) then
										v77 = v85[1305 - (422 + 880)];
										break;
									end
								end
							else
								v83[v85[1982 - (365 + 1615)]][v85[3 - 0]] = v85[1356 - (479 + 873)];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[5 - 3]] = v63[v85[8 - 5]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]][v85[3 + 0]] = v85[4];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1504 - (832 + 670)]] = v63[v85[9 - 6]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[5 - 3]] = v83[v85[1250 - (707 + 540)]][v85[63 - (18 + 41)]];
							end
						elseif (v86 <= (228 + 23)) then
							if (v86 <= (183 + 61)) then
								if (v86 <= (1461 - (554 + 666))) then
									if (v86 <= 239) then
										v83[v85[2]][v85[503 - (438 + 62)]] = v85[4];
										v77 = v77 + (1906 - (1497 + 408));
										v85 = v73[v77];
										v83[v85[2 - 0]] = v63[v85[2 + 1]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[642 - (508 + 132)]][v85[9 - 6]] = v85[4 - 0];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1209 - (49 + 1158)]] = v63[v85[1 + 2]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[3]][v85[2 + 2]];
									elseif (v86 > (169 + 71)) then
										local v2670;
										local v2671;
										local v2672;
										v83[v85[2]] = v85[3];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[4 - 2]] = v83[v85[2 + 1]];
										v77 = v77 + (1222 - (460 + 761));
										v85 = v73[v77];
										v83[v85[5 - 3]] = v85[3 + 0];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[598 - (405 + 191)]] = v63[v85[3]];
										v77 = v77 + (1671 - (311 + 1359));
										v85 = v73[v77];
										v83[v85[4 - 2]] = v83[v85[3]][v85[3 + 1]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v2672 = v85[1 + 2];
										v2671 = v83[v2672];
										for v4519 = v2672 + 1, v85[1 + 3] do
											v2671 = v2671 .. v83[v4519];
										end
										v83[v85[2]] = v2671;
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v2670 = v85[2 - 0];
										v83[v2670](v83[v2670 + 1 + 0]);
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v77 = v85[1 + 2];
									else
										local v2686;
										local v2687;
										v83[v85[3 - 1]] = v83[v85[3 - 0]][v85[4]];
										v77 = v77 + (1521 - (1408 + 112));
										v85 = v73[v77];
										v83[v85[984 - (285 + 697)]] = v83[v85[14 - 11]][v85[1264 - (737 + 523)]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[3]][v85[4]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v2687 = v85[2];
										v2686 = v83[v85[13 - 10]];
										v83[v2687 + 1] = v2686;
										v83[v2687] = v2686[v85[4]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[846 - (789 + 55)]] = v85[3];
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v2687 = v85[2 + 0];
										v83[v2687] = v83[v2687](v13(v83, v2687 + (1 - 0), v85[4 - 1]));
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v63[v85[8 - 5]] = v83[v85[1884 - (1492 + 390)]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v77 = v85[996 - (312 + 681)];
									end
								elseif (v86 <= (2153 - (1255 + 656))) then
									local v576 = 1727 - (485 + 1242);
									local v577;
									while true do
										if (v576 == 0) then
											v577 = nil;
											v83[v85[2]] = v85[1 + 2];
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v576 = 1 - 0;
										end
										if (v576 == (39 - 29)) then
											v85 = v73[v77];
											v83[v85[6 - 4]] = v85[6 - 3];
											break;
										end
										if ((1 + 2) == v576) then
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[961 - (722 + 237)]] = v85[8 - 5];
											v77 = v77 + (717 - (77 + 639));
											v576 = 12 - 8;
										end
										if (v576 == (29 - 23)) then
											v83[v85[2]] = v85[5 - 2];
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v577 = v85[5 - 3];
											v576 = 7;
										end
										if (v576 == (4 + 0)) then
											v85 = v73[v77];
											v577 = v85[2];
											v83[v577](v83[v577 + 1]);
											v77 = v77 + 1 + 0;
											v576 = 1364 - (888 + 471);
										end
										if (v576 == (1111 - (1034 + 75))) then
											v83[v85[1159 - (448 + 709)]] = v63[v85[1 + 2]];
											v77 = v77 + (3 - 2);
											v85 = v73[v77];
											v83[v85[1857 - (1643 + 212)]] = v83[v85[483 - (320 + 160)]][v85[8 - 4]];
											v576 = 3;
										end
										if (v576 == 1) then
											v577 = v85[4 - 2];
											v83[v577](v83[v577 + 1 + 0]);
											v77 = v77 + 1;
											v85 = v73[v77];
											v576 = 3 - 1;
										end
										if (v576 == (144 - (114 + 22))) then
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[1061 - (89 + 970)]] = v85[1731 - (1083 + 645)];
											v77 = v77 + (167 - (50 + 116));
											v576 = 1971 - (1058 + 904);
										end
										if (((19 - 10) == v576) or (97 > 4482)) then
											v85 = v73[v77];
											v577 = v85[7 - 5];
											v83[v577](v83[v577 + (3 - 2)]);
											v77 = v77 + (2 - 1);
											v576 = 3 + 7;
										end
										if ((v576 == (201 - (94 + 102))) or (3188 < 983)) then
											v85 = v73[v77];
											v83[v85[2 + 0]] = v62[v85[1267 - (735 + 529)]];
											v77 = v77 + (1152 - (875 + 276));
											v85 = v73[v77];
											v576 = 985 - (461 + 518);
										end
										if (v576 == (7 + 0)) then
											v83[v577](v83[v577 + (2 - 1)]);
											v77 = v77 + (782 - (656 + 125));
											v85 = v73[v77];
											v83[v85[4 - 2]] = v62[v85[851 - (532 + 316)]];
											v576 = 262 - (150 + 104);
										end
									end
								elseif ((158 < 683) and (v86 == 243)) then
									local v2706 = 0;
									local v2707;
									while true do
										if (v2706 == 3) then
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v83[v85[5 - 3]] = v85[1850 - (564 + 1283)];
											v2706 = 3 + 1;
										end
										if (v2706 == (4 - 2)) then
											v85 = v73[v77];
											v2707 = v85[1 + 1];
											v83[v2707](v13(v83, v2707 + 1, v85[1 + 2]));
											v2706 = 10 - 7;
										end
										if (v2706 == (1549 - (330 + 1218))) then
											v85 = v73[v77];
											v83[v85[2 + 0]] = v85[3 + 0];
											v77 = v77 + 1 + 0;
											v2706 = 2;
										end
										if ((3 + 1) == v2706) then
											v77 = v77 + 1;
											v85 = v73[v77];
											v77 = v85[3];
											break;
										end
										if ((397 < 3185) and (v2706 == (0 - 0))) then
											v2707 = nil;
											v83[v85[2]] = v85[3];
											v77 = v77 + 1 + 0;
											v2706 = 4 - 3;
										end
									end
								else
									local v2708;
									v83[v85[1 + 1]] = v85[1572 - (511 + 1058)];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v2708 = v85[1500 - (1315 + 183)];
									v83[v2708](v83[v2708 + 1 + 0]);
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[544 - (233 + 309)]] = v63[v85[3 - 0]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[655 - (267 + 386)]] = v83[v85[6 - 3]][v85[857 - (744 + 109)]];
									v77 = v77 + (1551 - (1271 + 279));
									v85 = v73[v77];
									v83[v85[2]] = v85[7 - 4];
									v77 = v77 + (1645 - (642 + 1002));
									v85 = v73[v77];
									v2708 = v85[1865 - (643 + 1220)];
									v83[v2708](v83[v2708 + (2 - 1)]);
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2 - 0]] = v62[v85[1420 - (1063 + 354)]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[832 - (739 + 91)]] = v85[3];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v2708 = v85[1879 - (790 + 1087)];
									v83[v2708](v83[v2708 + 1 + 0]);
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]] = v62[v85[7 - 4]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[4 - 2]] = v85[3];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v2708 = v85[6 - 4];
									v83[v2708](v83[v2708 + 1]);
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[151 - (82 + 67)]] = v85[3];
								end
							elseif ((3824 == 3824) and (v86 <= (242 + 5))) then
								if (v86 <= 245) then
									v83[v85[3 - 1]] = v83[v85[1988 - (1835 + 150)]][v85[4]];
									v77 = v77 + (15 - (12 + 2));
									v85 = v73[v77];
									v83[v85[1038 - (784 + 252)]] = v83[v85[2 + 1]][v85[6 - 2]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[1387 - (1134 + 250)]][v85[3 + 1]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[3 - 1]] = v83[v85[3 + 0]][v85[11 - 7]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v63[v85[7 - 4]] = v83[v85[3 - 1]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v77 = v85[3];
								elseif (v86 > (2227 - (1940 + 41))) then
									v83[v85[240 - (39 + 199)]][v85[3 + 0]] = v83[v85[7 - 3]];
								else
									local v2731;
									v83[v85[2 - 0]] = v83[v85[1932 - (313 + 1616)]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[2 - 0]] = v62[v85[3]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v2731 = v85[39 - (7 + 30)];
									v83[v2731] = v83[v2731](v13(v83, v2731 + (1187 - (961 + 225)), v85[12 - 9]));
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[843 - (281 + 559)]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									for v4553 = v85[1 + 1], v85[1 + 2] do
										v83[v4553] = nil;
									end
									v77 = v77 + 1;
									v85 = v73[v77];
									v62[v85[1 + 2]] = v83[v85[1 + 1]];
									v77 = v77 + (1441 - (102 + 1338));
									v85 = v73[v77];
									v83[v85[2]] = v85[3];
									v77 = v77 + 1;
									v85 = v73[v77];
									v77 = v85[1 + 2];
								end
							elseif (v86 <= (124 + 125)) then
								if (v86 > (689 - (319 + 122))) then
									local v2744;
									v83[v85[1 + 1]] = v85[999 - (45 + 951)];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v85[2 + 1];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v2744 = v85[1 + 1];
									v83[v2744](v13(v83, v2744 + 1, v85[3]));
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v85[3];
									v77 = v77 + (1376 - (684 + 691));
									v85 = v73[v77];
									v77 = v85[1647 - (1161 + 483)];
								else
									local v2753;
									v83[v85[968 - (245 + 721)]] = v83[v85[3 + 0]][v85[4 + 0]];
									v77 = v77 + (43 - (31 + 11));
									v85 = v73[v77];
									v83[v85[6 - 4]] = v85[3];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[838 - (179 + 657)]] = v63[v85[330 - (150 + 177)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1207 - (142 + 1063)]] = v83[v85[1908 - (1346 + 559)]][v85[1 + 3]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[5 - 3]] = v83[v85[11 - 8]][v85[4 + 0]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[3]][v85[1730 - (1695 + 31)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2753 = v85[1439 - (1073 + 364)];
									v83[v2753] = v83[v2753](v13(v83, v2753 + 1, v85[3]));
									v77 = v77 + (818 - (405 + 412));
									v85 = v73[v77];
									v63[v85[652 - (518 + 131)]] = v83[v85[1304 - (667 + 635)]];
								end
							elseif (v86 > (1 + 249)) then
								v83[v85[2 - 0]] = v83[v85[3]][v85[1914 - (1397 + 513)]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[1077 - (454 + 621)]] = v83[v85[5 - 2]][v85[4]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[6 - 3]][v85[602 - (417 + 181)]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[10 - 7]][v85[19 - 15]];
								v77 = v77 + (1121 - (995 + 125));
								v85 = v73[v77];
								v63[v85[7 - 4]] = v83[v85[2 + 0]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v77 = v85[1328 - (754 + 571)];
							else
								local v2782;
								local v2783;
								v83[v85[1 + 1]] = v63[v85[8 - 5]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3]][v85[13 - 9]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v2783 = v85[7 - 5];
								v2782 = v83[v85[1 + 2]];
								v83[v2783 + (1492 - (1141 + 350))] = v2782;
								v83[v2783] = v2782[v85[1 + 3]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v2783 = v85[5 - 3];
								v83[v2783] = v83[v2783](v83[v2783 + 1 + 0]);
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								if ((3494 == 3494) and (v83[v85[2]] == v85[4 + 0])) then
									v77 = v77 + (1870 - (513 + 1356));
								else
									v77 = v85[1939 - (196 + 1740)];
								end
							end
						elseif (v86 <= (365 - 107)) then
							if ((2110 == 2110) and (v86 <= 254)) then
								if (v86 <= 252) then
									v83[v85[2 + 0]] = v83[v85[6 - 3]][v85[6 - 2]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[4 - 2]][v85[1 + 2]] = v83[v85[10 - 6]];
									v77 = v77 + (1632 - (362 + 1269));
									v85 = v73[v77];
									v83[v85[5 - 3]] = v83[v85[3]][v85[41 - (26 + 11)]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[1 + 2]][v85[4]];
									v77 = v77 + (1820 - (183 + 1636));
									v85 = v73[v77];
									v83[v85[2 + 0]] = v62[v85[3 + 0]];
									v77 = v77 + (1231 - (1161 + 69));
									v85 = v73[v77];
									v83[v85[1380 - (672 + 706)]] = v83[v85[1 + 2]][v85[109 - (82 + 23)]];
									v77 = v77 + (1522 - (100 + 1421));
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[783 - (61 + 719)]][v85[416 - (180 + 232)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									if ((v85[2 - 0] <= v83[v85[4]]) or (4175 < 444)) then
										v77 = v77 + (2 - 1);
									else
										v77 = v85[3];
									end
								elseif (v86 == (2034 - (728 + 1053))) then
									local v2796 = 0 + 0;
									local v2797;
									while true do
										if ((v2796 == (559 - (427 + 132))) or (4191 < 2442)) then
											v2797 = v85[2];
											v83[v2797] = v83[v2797]();
											break;
										end
									end
								else
									local v2798;
									local v2799;
									local v2800;
									v2800 = v85[2 + 0];
									v83[v2800] = v83[v2800]();
									v77 = v77 + (966 - (786 + 179));
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[1 + 2]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2 + 0]] = {};
									v77 = v77 + (1925 - (1685 + 239));
									v85 = v73[v77];
									v83[v85[4 - 2]] = v83[v85[3]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[4 - 2]] = v85[6 - 3];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[3]];
									v77 = v77 + (1178 - (457 + 720));
									v85 = v73[v77];
									v83[v85[4 - 2]] = v85[9 - 6];
									v77 = v77 + 1;
									v85 = v73[v77];
									v2800 = v85[2];
									v2799 = v83[v2800];
									v2798 = v83[v2800 + (723 - (124 + 597))];
									if ((1556 < 4979) and (v2798 > (0 - 0))) then
										if (v2799 > v83[v2800 + 1]) then
											v77 = v85[567 - (414 + 150)];
										else
											v83[v2800 + (14 - 11)] = v2799;
										end
									elseif (v2799 < v83[v2800 + (830 - (592 + 237))]) then
										v77 = v85[3 + 0];
									else
										v83[v2800 + (7 - 4)] = v2799;
									end
								end
							elseif ((v86 <= (869 - (122 + 491))) or (670 > 4159)) then
								if ((v86 > (1178 - 923)) or (1696 <= 1602)) then
									local v2813;
									local v2814;
									v83[v85[2]] = v83[v85[288 - (116 + 169)]][v85[4]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[7 - 5]] = v83[v85[3]][v85[4 + 0]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2814 = v85[2 - 0];
									v2813 = v83[v85[5 - 2]];
									v83[v2814 + 1] = v2813;
									v83[v2814] = v2813[v85[1 + 3]];
									v77 = v77 + (1231 - (477 + 753));
									v85 = v73[v77];
									v83[v85[1 + 1]] = v85[3 + 0];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2814 = v85[2 + 0];
									v83[v2814] = v83[v2814](v13(v83, v2814 + (3 - 2), v85[1 + 2]));
									v77 = v77 + (1378 - (649 + 728));
									v85 = v73[v77];
									if v83[v85[2]] then
										v77 = v77 + (913 - (478 + 434));
									else
										v77 = v85[5 - 2];
									end
								else
									v83[v85[2 - 0]] = v83[v85[14 - 11]][v85[4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1562 - (1329 + 231)]] = v83[v85[5 - 2]][v85[1914 - (1523 + 387)]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[1310 - (1013 + 294)]][v85[1352 - (25 + 1323)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1932 - (611 + 1319)]] = v83[v85[3 + 0]][v85[4]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v63[v85[5 - 2]] = v83[v85[2]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v77 = v85[1 + 2];
								end
							elseif ((2401 < 4262) and (v86 == (154 + 103))) then
								local v2840;
								local v2841;
								local v2842, v2843;
								local v2844;
								v83[v85[3 - 1]] = v83[v85[3]][v85[2 + 2]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[818 - (353 + 463)]] = v83[v85[3]] + v85[7 - 3];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1063 - (605 + 456)]] = {};
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[787 - (122 + 662)]][v83[v85[1496 - (1184 + 308)]]];
								v77 = v77 + (1169 - (445 + 723));
								v85 = v73[v77];
								v83[v85[1642 - (1245 + 395)]] = v83[v85[1130 - (191 + 936)]] + v85[8 - 4];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[1 + 2]][v83[v85[262 - (90 + 168)]]];
								v77 = v77 + (172 - (87 + 84));
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3]][v83[v85[8 - 4]]];
								v77 = v77 + (713 - (176 + 536));
								v85 = v73[v77];
								v2844 = v85[2];
								v2842, v2843 = v76(v83[v2844](v13(v83, v2844 + 1 + 0, v85[1701 - (858 + 840)])));
								v78 = (v2843 + v2844) - 1;
								v2841 = 660 - (447 + 213);
								for v4555 = v2844, v78 do
									v2841 = v2841 + (1461 - (1458 + 2));
									v83[v4555] = v2842[v2841];
								end
								v77 = v77 + 1;
								v85 = v73[v77];
								v2844 = v85[9 - 7];
								v2840 = v83[v2844];
								for v4558 = v2844 + (1 - 0), v78 do
									v7(v2840, v83[v4558]);
								end
							else
								v83[v85[2 + 0]] = v62[v85[3]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[7 - 4]][v85[484 - (248 + 232)]];
								v77 = v77 + (231 - (109 + 121));
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[1407 - (1288 + 116)]][v85[4 + 0]];
								v77 = v77 + (237 - (212 + 24));
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3]][v85[3 + 1]];
								v77 = v77 + 1;
								v85 = v73[v77];
								if ((2142 == 2142) and (v83[v85[2 + 0]] == v85[1711 - (1175 + 532)])) then
									v77 = v77 + 1 + 0;
								else
									v77 = v85[3];
								end
							end
						elseif ((2086 > 1145) and (v86 <= (388 - 127))) then
							if (v86 <= (134 + 125)) then
								local v602 = 0;
								local v603;
								while true do
									if (v602 == (5 + 1)) then
										v77 = v85[572 - (252 + 317)];
										break;
									end
									if (v602 == (10 - 5)) then
										v85 = v73[v77];
										v83[v85[805 - (738 + 65)]] = v85[560 - (410 + 147)];
										v77 = v77 + 1;
										v85 = v73[v77];
										v602 = 906 - (272 + 628);
									end
									if ((9 - 5) == v602) then
										v85 = v73[v77];
										v603 = v85[2];
										v83[v603](v83[v603 + 1]);
										v77 = v77 + (2 - 1);
										v602 = 5;
									end
									if ((3138 > 2600) and (v602 == (171 - (62 + 106)))) then
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v83[v85[696 - (167 + 527)]] = v85[5 - 2];
										v77 = v77 + (1 - 0);
										v602 = 6 - 2;
									end
									if ((3428 < 4861) and (v602 == (1 + 0))) then
										v83[v85[1068 - (326 + 740)]] = v85[3];
										v77 = v77 + 1;
										v85 = v73[v77];
										v603 = v85[78 - (68 + 8)];
										v602 = 1473 - (133 + 1338);
									end
									if (v602 == (5 - 3)) then
										v83[v603](v83[v603 + 1 + 0]);
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[6 - 4]] = v62[v85[2 + 1]];
										v602 = 2 + 1;
									end
									if ((v602 == (0 - 0)) or (1064 <= 134)) then
										v603 = nil;
										v83[v85[1989 - (1930 + 57)]] = v83[v85[1 + 2]][v85[4 + 0]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v602 = 905 - (14 + 890);
									end
								end
							elseif ((v86 > (897 - 637)) or (3215 <= 1208)) then
								local v2866;
								v83[v85[1 + 1]] = v83[v85[6 - 3]][v85[4 + 0]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[9 - 7]] = v85[9 - 6];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[8 - 6]] = v63[v85[3]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1783 - (755 + 1026)]] = v83[v85[8 - 5]][v85[18 - 14]];
								v77 = v77 + (947 - (217 + 729));
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[1 + 2]][v85[7 - 3]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[3]][v85[15 - 11]];
								v77 = v77 + (1681 - (619 + 1061));
								v85 = v73[v77];
								v2866 = v85[1 + 1];
								v83[v2866] = v83[v2866](v13(v83, v2866 + (1 - 0), v85[139 - (108 + 28)]));
								v77 = v77 + (1928 - (191 + 1736));
								v85 = v73[v77];
								v63[v85[766 - (757 + 6)]] = v83[v85[1 + 1]];
							else
								v83[v85[2]] = v63[v85[1258 - (337 + 918)]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2]] = v62[v85[3]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[7 - 4]][v85[1 + 3]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[1679 - (754 + 922)]][v85[638 - (487 + 147)]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 - 0]] = v83[v85[1572 - (825 + 744)]][v85[1 + 3]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[4 - 2]][v85[1 + 2]] = v83[v85[253 - (150 + 99)]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								do
									return;
								end
							end
						elseif (v86 <= 263) then
							if (v86 > (1765 - (1335 + 168))) then
								local v2893 = 939 - (256 + 683);
								while true do
									if ((v2893 == (321 - (33 + 285))) or (4668 <= 2831)) then
										v77 = v85[3];
										break;
									end
									if (v2893 == (3 - 2)) then
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[3 - 1]] = v83[v85[7 - 4]][v83[v85[4]]];
										v77 = v77 + 1 + 0;
										v2893 = 2 + 0;
									end
									if ((3496 > 458) and (v2893 == (949 - (776 + 171)))) then
										v85 = v73[v77];
										v83[v85[2]][v83[v85[266 - (244 + 19)]]] = v83[v85[5 - 1]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v2893 = 409 - (8 + 398);
									end
									if (v2893 == (516 - (228 + 288))) then
										v83[v85[2 - 0]] = v62[v85[5 - 2]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[590 - (434 + 154)]] = v83[v85[3]][v85[3 + 1]];
										v2893 = 2 - 1;
									end
								end
							else
								local v2894;
								v83[v85[2]] = v85[11 - 8];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[1 + 1]] = v85[3 - 0];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v2894 = v85[1 + 1];
								v83[v2894](v13(v83, v2894 + 1 + 0, v85[1668 - (810 + 855)]));
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v62[v85[1 + 2]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[5 - 3]] = v85[1617 - (463 + 1151)];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1977 - (29 + 1946)]] = v85[2 + 1];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v2894 = v85[517 - (337 + 178)];
								v83[v2894](v13(v83, v2894 + (65 - (4 + 60)), v85[11 - 8]));
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1118 - (425 + 691)]] = v85[2001 - (354 + 1644)];
							end
						elseif (v86 > (1105 - (499 + 342))) then
							local v2910;
							v83[v85[2 + 0]] = v83[v85[163 - (65 + 95)]][v85[3 + 1]];
							v77 = v77 + (1640 - (1403 + 236));
							v85 = v73[v77];
							v83[v85[2]] = v85[3];
							v77 = v77 + (1361 - (1117 + 243));
							v85 = v73[v77];
							v83[v85[244 - (67 + 175)]] = v63[v85[2 + 1]];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[733 - (387 + 344)]] = v83[v85[977 - (654 + 320)]][v85[7 - 3]];
							v77 = v77 + (432 - (276 + 155));
							v85 = v73[v77];
							v83[v85[5 - 3]] = v83[v85[2 + 1]][v85[4 + 0]];
							v77 = v77 + (775 - (65 + 709));
							v85 = v73[v77];
							v83[v85[2 + 0]] = v83[v85[3]][v85[1748 - (884 + 860)]];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v2910 = v85[682 - (492 + 188)];
							v83[v2910] = v83[v2910](v13(v83, v2910 + 1 + 0, v85[10 - 7]));
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v63[v85[2 + 1]] = v83[v85[2]];
						else
							local v2925 = 0 + 0;
							local v2926;
							local v2927;
							while true do
								if (v2925 == 4) then
									v85 = v73[v77];
									v83[v85[2]] = {};
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v2925 = 5;
								end
								if (v2925 == (0 - 0)) then
									v2926 = nil;
									v2927 = nil;
									v83[v85[2 - 0]] = v63[v85[1 + 2]];
									v77 = v77 + 1;
									v2925 = 1 + 0;
								end
								if (v2925 == (3 - 2)) then
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[3 + 0]][v85[9 - 5]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2925 = 1 + 1;
								end
								if (v2925 == 5) then
									v83[v85[2 - 0]][v85[3]] = v85[15 - 11];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2]][v85[5 - 2]] = v85[1255 - (1190 + 61)];
									v2925 = 4 + 2;
								end
								if (v2925 == (1695 - (1448 + 245))) then
									v2927 = v85[2];
									v2926 = v83[v85[3 - 0]];
									v83[v2927 + (2 - 1)] = v2926;
									v83[v2927] = v2926[v85[4]];
									v2925 = 8 - 5;
								end
								if (v2925 == (20 - 12)) then
									v85 = v73[v77];
									v83[v85[2 - 0]] = v63[v85[826 - (528 + 295)]];
									break;
								end
								if (v2925 == (7 - 1)) then
									v77 = v77 + (1348 - (1224 + 123));
									v85 = v73[v77];
									v83[v85[1 + 1]][v85[3]] = v85[641 - (97 + 540)];
									v77 = v77 + (1969 - (484 + 1484));
									v2925 = 1559 - (1398 + 154);
								end
								if ((v2925 == 7) or (2282 < 749)) then
									v85 = v73[v77];
									v2927 = v85[2];
									v83[v2927](v13(v83, v2927 + 1 + 0, v85[7 - 4]));
									v77 = v77 + (3 - 2);
									v2925 = 538 - (354 + 176);
								end
								if ((864 >= 378) and (v2925 == 3)) then
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[1 + 1]] = v85[4 - 1];
									v77 = v77 + 1 + 0;
									v2925 = 4;
								end
							end
						end
					elseif ((v86 <= (149 + 142)) or (3304 <= 1294)) then
						if (v86 <= (1708 - (649 + 781))) then
							if (v86 <= (234 + 37)) then
								if ((2366 > 1615) and (v86 <= (479 - 211))) then
									if ((2540 == 2540) and (v86 <= (797 - 531))) then
										local v604 = 777 - (126 + 651);
										local v605;
										while true do
											if (v604 == (5 - 2)) then
												v77 = v77 + 1 + 0;
												v85 = v73[v77];
												v83[v85[1 + 1]] = v85[6 - 3];
												v604 = 11 - 7;
											end
											if (v604 == (1 + 0)) then
												v85 = v73[v77];
												v83[v85[2]] = v85[1 + 2];
												v77 = v77 + (1030 - (179 + 850));
												v604 = 786 - (34 + 750);
											end
											if (v604 == (305 - (302 + 3))) then
												v605 = nil;
												v83[v85[2 + 0]] = v85[3];
												v77 = v77 + (1 - 0);
												v604 = 1 + 0;
											end
											if (v604 == 4) then
												v77 = v77 + (2 - 1);
												v85 = v73[v77];
												v77 = v85[4 - 1];
												break;
											end
											if (v604 == 2) then
												v85 = v73[v77];
												v605 = v85[2];
												v83[v605](v13(v83, v605 + (1 - 0), v85[2 + 1]));
												v604 = 3 - 0;
											end
										end
									elseif (v86 > (35 + 232)) then
										v83[v85[106 - (56 + 48)]]();
									else
										local v2928 = v74[v85[3 + 0]];
										local v2929;
										local v2930 = {};
										v2929 = v10({}, {__index=function(v4590, v4591)
											local v4592 = 0 + 0;
											local v4593;
											while true do
												if ((1301 <= 2016) and ((0 - 0) == v4592)) then
													v4593 = v2930[v4591];
													return v4593[1][v4593[84 - (7 + 75)]];
												end
											end
										end,__newindex=function(v4594, v4595, v4596)
											local v4597 = v2930[v4595];
											v4597[1 + 0][v4597[7 - 5]] = v4596;
										end});
										for v4599 = 256 - (170 + 85), v85[353 - (288 + 61)] do
											local v4600 = 0 + 0;
											local v4601;
											while true do
												if (0 == v4600) then
													v77 = v77 + 1 + 0;
													v4601 = v73[v77];
													v4600 = 1 + 0;
												end
												if ((576 <= 3676) and (v4600 == (1 + 0))) then
													if ((661 < 1303) and (v4601[2 - 1] == 281)) then
														v2930[v4599 - (738 - (330 + 407))] = {v83,v4601[13 - 10]};
													else
														v2930[v4599 - (1 - 0)] = {v62,v4601[3]};
													end
													v82[#v82 + (758 - (15 + 742))] = v2930;
													break;
												end
											end
										end
										v83[v85[2]] = v29(v2928, v2929, v63);
									end
								elseif (v86 <= (719 - (414 + 36))) then
									local v606;
									v83[v85[1508 - (745 + 761)]] = v85[2 + 1];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v63[v85[2 + 1]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v606 = v85[2 + 0];
									v83[v606](v13(v83, v606 + (1080 - (126 + 953)), v85[1703 - (759 + 941)]));
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1606 - (896 + 708)]] = v62[v85[3]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1579 - (555 + 1022)]] = v85[1 + 2];
									v77 = v77 + 1;
									v85 = v73[v77];
									v606 = v85[2];
									v83[v606](v83[v606 + (142 - (14 + 127))]);
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v77 = v85[798 - (141 + 654)];
								elseif (v86 > (1201 - (156 + 775))) then
									local v2932 = 1590 - (167 + 1423);
									while true do
										if ((v2932 == (8 - 5)) or (2821 < 287)) then
											v63[v85[8 - 5]] = v83[v85[2 + 0]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v77 = v85[6 - 3];
											break;
										end
										if ((v2932 == (2 + 0)) or (2475 <= 518)) then
											v85 = v73[v77];
											v83[v85[1882 - (1625 + 255)]] = v83[v85[3 + 0]][v85[1 + 3]];
											v77 = v77 + (1517 - (1026 + 490));
											v85 = v73[v77];
											v2932 = 3 + 0;
										end
										if (0 == v2932) then
											v83[v85[1736 - (16 + 1718)]] = v83[v85[2 + 1]][v85[4 + 0]];
											v77 = v77 + (2 - 1);
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[4 - 1]][v85[4]];
											v2932 = 579 - (168 + 410);
										end
										if ((2549 == 2549) and (v2932 == (1 + 0))) then
											v77 = v77 + (4 - 3);
											v85 = v73[v77];
											v83[v85[809 - (134 + 673)]] = v83[v85[3]][v85[4 + 0]];
											v77 = v77 + 1;
											v2932 = 2 - 0;
										end
									end
								else
									v83[v85[1910 - (1174 + 734)]][v83[v85[3 - 0]]] = v83[v85[2 + 2]];
								end
							elseif (v86 <= (458 - 184)) then
								if ((4994 > 3672) and (v86 <= (671 - 399))) then
									local v619;
									local v620;
									local v621;
									local v622;
									v83[v85[6 - 4]] = v63[v85[3]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[4 - 1]][v85[4]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[11 - 8]][v85[3 + 1]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v622 = v85[2];
									v621 = v83[v85[4 - 1]];
									v83[v622 + (1 - 0)] = v621;
									v83[v622] = v621[v85[1 + 3]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[3]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v622 = v85[514 - (289 + 223)];
									v83[v622] = v83[v622](v13(v83, v622 + (1 - 0), v85[2 + 1]));
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v63[v85[643 - (514 + 126)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[3 - 0]][v85[4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[6 - 4]] = v85[3];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									for v907 = v85[2 + 0], v85[1 + 2] do
										v83[v907] = nil;
									end
									v77 = v77 + 1;
									v85 = v73[v77];
									v622 = v85[4 - 2];
									v83[v622] = v83[v622](v13(v83, v622 + 1 + 0, v85[3]));
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[2 + 1]][v85[612 - (4 + 604)]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[6 - 4]][v85[13 - 10]] = v83[v85[4 + 0]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v622 = v85[2];
									v621 = v83[v85[3]];
									v83[v622 + (3 - 2)] = v621;
									v83[v622] = v621[v85[1449 - (344 + 1101)]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v622 = v85[4 - 2];
									v620 = {v83[v622](v83[v622 + 1 + 0])};
									v619 = 0 - 0;
									for v909 = v622, v85[18 - 14] do
										v619 = v619 + (1 - 0);
										v83[v909] = v620[v619];
									end
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v77 = v85[3];
								elseif ((4011 >= 2453) and (v86 == (574 - (57 + 244)))) then
									local v2935;
									local v2936;
									v2936 = v85[2 + 0];
									v2935 = v83[v85[2 + 1]];
									v83[v2936 + (2 - 1)] = v2935;
									v83[v2936] = v2935[v85[1967 - (883 + 1080)]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[202 - (138 + 62)]] = v85[1 + 2];
									v77 = v77 + (4 - 3);
									v85 = v73[v77];
									v2936 = v85[85 - (62 + 21)];
									v83[v2936] = v83[v2936](v13(v83, v2936 + 1 + 0, v85[3]));
									v77 = v77 + (1450 - (1036 + 413));
									v85 = v73[v77];
									v83[v85[3 - 1]][v85[3 + 0]] = v83[v85[10 - 6]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v77 = v85[9 - 6];
								else
									local v2949;
									local v2950, v2951;
									local v2952;
									v83[v85[2 - 0]] = v62[v85[3]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[7 - 5]] = v83[v85[3]];
									v77 = v77 + (1473 - (649 + 823));
									v85 = v73[v77];
									v83[v85[3 - 1]] = v85[3];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1565 - (1202 + 361)]] = v85[10 - 7];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v2952 = v85[1711 - (263 + 1446)];
									v2950, v2951 = v76(v83[v2952](v13(v83, v2952 + 1, v85[3])));
									v78 = (v2951 + v2952) - (1 + 0);
									v2949 = 0;
									for v4602 = v2952, v78 do
										local v4603 = 0 + 0;
										while true do
											if (v4603 == 0) then
												v2949 = v2949 + 1 + 0;
												v83[v4602] = v2950[v2949];
												break;
											end
										end
									end
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v2952 = v85[2];
									v83[v2952] = v83[v2952](v13(v83, v2952 + (744 - (387 + 356)), v78));
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v62[v85[10 - 7]] = v83[v85[2 + 0]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2]] = v85[3];
									v77 = v77 + (1717 - (646 + 1070));
									v85 = v73[v77];
									do
										return v83[v85[1 + 1]];
									end
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v77 = v85[1 + 2];
								end
							elseif ((v86 <= (1031 - 755)) or (1344 == 3261)) then
								if ((v86 > (79 + 196)) or (2254 <= 707)) then
									v83[v85[4 - 2]] = v83[v85[1100 - (288 + 809)]][v85[1657 - (471 + 1182)]];
									v77 = v77 + (1496 - (385 + 1110));
									v85 = v73[v77];
									v83[v85[1611 - (1201 + 408)]] = v83[v85[3]][v85[1851 - (747 + 1100)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[614 - (269 + 342)]][v85[4]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v63[v85[7 - 4]] = v83[v85[348 - (263 + 83)]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v77 = v85[9 - 6];
								else
									local v2979 = 821 - (659 + 162);
									while true do
										if (v2979 == (11 - 7)) then
											v77 = v85[218 - (109 + 106)];
											break;
										end
										if (v2979 == (4 - 1)) then
											v83[v85[1167 - (1157 + 8)]] = v85[3];
											v77 = v77 + 1;
											v85 = v73[v77];
											v2979 = 515 - (179 + 332);
										end
										if (v2979 == (838 - (705 + 132))) then
											v83[v85[2]] = v83[v85[3]][v85[4 + 0]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v2979 = 1 + 1;
										end
										if ((v2979 == (1 + 1)) or (3305 > 4585)) then
											v83[v85[7 - 5]][v85[3 + 0]] = v83[v85[47 - (17 + 26)]];
											v77 = v77 + (1963 - (1866 + 96));
											v85 = v73[v77];
											v2979 = 3;
										end
										if (v2979 == 0) then
											v83[v85[2]] = v83[v85[1 + 2]][v85[11 - 7]];
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											v2979 = 2 - 1;
										end
									end
								end
							elseif ((4716 >= 3915) and (v86 > (1005 - 728))) then
								v83[v85[4 - 2]][v85[1 + 2]] = v85[14 - 10];
								v77 = v77 + (1132 - (725 + 406));
								v85 = v73[v77];
								v83[v85[4 - 2]] = v63[v85[3]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1 + 1]][v85[378 - (198 + 177)]] = v85[10 - 6];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 - 0]] = v63[v85[2 + 1]];
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3]][v85[2 + 2]];
							else
								v83[v85[1 + 1]] = v63[v85[2 + 1]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[7 - 5]] = v83[v85[3]][v85[1724 - (1082 + 638)]];
								v77 = v77 + (1363 - (1322 + 40));
								v85 = v73[v77];
								v83[v85[4 - 2]] = v83[v85[1651 - (435 + 1213)]][v85[1 + 3]];
								v77 = v77 + (989 - (696 + 292));
								v85 = v73[v77];
								v83[v85[4 - 2]] = v83[v85[13 - 10]][v85[17 - 13]];
								v77 = v77 + (4 - 3);
								v85 = v73[v77];
								do
									return v83[v85[2]];
								end
								v77 = v77 + (1466 - (731 + 734));
								v85 = v73[v77];
								do
									return;
								end
							end
						elseif (v86 <= (1855 - (1286 + 285))) then
							if (v86 <= 281) then
								if ((v86 <= 279) or (4556 > 4565)) then
									local v646;
									v83[v85[7 - 5]] = v83[v85[2 + 1]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[2]] = v62[v85[3 + 0]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v646 = v85[2];
									v83[v646] = v83[v646](v13(v83, v646 + (3 - 2), v85[1264 - (1048 + 213)]));
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[1 + 2]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									for v912 = v85[2 + 0], v85[1360 - (223 + 1134)] do
										v83[v912] = nil;
									end
									v77 = v77 + 1;
									v85 = v73[v77];
									v62[v85[14 - 11]] = v83[v85[1883 - (982 + 899)]];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2 + 0]] = v85[3];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v77 = v85[1 + 2];
								elseif ((589 > 368) and (v86 > (921 - 641))) then
									v83[v85[2]] = v83[v85[4 - 1]];
								else
									local v3001;
									local v3002;
									local v3003;
									v83[v85[1485 - (310 + 1173)]] = v62[v85[2 + 1]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v3003 = v85[1453 - (968 + 483)];
									v83[v3003] = v83[v3003]();
									v77 = v77 + (225 - (37 + 187));
									v85 = v73[v77];
									v83[v85[1 + 1]] = v62[v85[3]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v3003 = v85[2];
									v83[v3003] = v83[v3003]();
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									for v4604 = v85[496 - (204 + 290)], v85[3] do
										v83[v4604] = nil;
									end
									v77 = v77 + (842 - (680 + 161));
									v85 = v73[v77];
									v3003 = v85[1 + 1];
									v3002 = v83[v3003];
									v3001 = v85[1071 - (979 + 89)];
									for v4606 = 1875 - (802 + 1072), v3001 do
										v3002[v4606] = v83[v3003 + v4606];
									end
								end
							elseif (v86 <= (886 - 604)) then
								local v660;
								v660 = v85[1 + 1];
								v83[v660](v83[v660 + 1 + 0]);
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[4 - 2]] = v63[v85[1 + 2]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[3 - 1]] = v83[v85[1997 - (1413 + 581)]][v85[1218 - (630 + 584)]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[6 - 4]] = v85[1131 - (184 + 944)];
								v77 = v77 + 1;
								v85 = v73[v77];
								v660 = v85[2 + 0];
								v83[v660](v83[v660 + (954 - (927 + 26))]);
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v85[8 - 5];
								v77 = v77 + 1;
								v85 = v73[v77];
								v77 = v85[643 - (284 + 356)];
							elseif (v86 == (98 + 185)) then
								local v3014;
								local v3015;
								local v3014, v3016;
								local v3017;
								local v3018;
								v83[v85[4 - 2]] = v83[v85[3]][v85[4 + 0]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3]][v85[3 + 1]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 + 0]][v85[1 + 2]] = v85[1132 - (211 + 917)];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								for v4609 = v85[1797 - (1151 + 644)], v85[1 + 2] do
									v83[v4609] = nil;
								end
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 - 0]] = v63[v85[1903 - (745 + 1155)]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v3018 = v85[316 - (27 + 287)];
								v3017 = v83[v85[3]];
								v83[v3018 + 1] = v3017;
								v83[v3018] = v3017[v85[6 - 2]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v3018 = v85[4 - 2];
								v3014, v3016 = v76(v83[v3018](v83[v3018 + (2 - 1)]));
								v78 = (v3016 + v3018) - (217 - (148 + 68));
								v3015 = 0 + 0;
								for v4611 = v3018, v78 do
									local v4612 = 0 + 0;
									while true do
										if (v4612 == 0) then
											v3015 = v3015 + 1 + 0;
											v83[v4611] = v3014[v3015];
											break;
										end
									end
								end
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v3018 = v85[2];
								v3014 = {v83[v3018](v13(v83, v3018 + (1175 - (1064 + 110)), v78))};
								v3015 = 19 - (9 + 10);
								for v4613 = v3018, v85[1 + 3] do
									v3015 = v3015 + 1;
									v83[v4613] = v3014[v3015];
								end
								v77 = v77 + (1896 - (1219 + 676));
								v85 = v73[v77];
								v77 = v85[1144 - (130 + 1011)];
							else
								v83[v85[1973 - (1639 + 332)]] = v83[v85[5 - 2]][v85[4]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[251 - (229 + 19)]][v85[127 - (21 + 102)]];
								v77 = v77 + (1186 - (931 + 254));
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[3]][v85[449 - (428 + 17)]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[91 - (26 + 62)]][v85[4]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v63[v85[1083 - (173 + 907)]] = v83[v85[2 + 0]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v77 = v85[3];
							end
						elseif (v86 <= (418 - (71 + 60))) then
							if ((267 < 3300) and (v86 <= 285)) then
								local v673 = 0 - 0;
								local v674;
								local v675;
								local v676;
								while true do
									if ((138 < 2234) and (v673 == (1232 - (774 + 454)))) then
										v676 = v85[1604 - (849 + 753)];
										v83[v676] = v83[v676](v83[v676 + (2 - 1)]);
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v675 = v85[1219 - (861 + 355)];
										v674 = v83[v675];
										for v4833 = v675 + 1, v85[5 - 1] do
											v674 = v674 .. v83[v4833];
										end
										v673 = 5;
									end
									if (((3 + 7) == v673) or (2317 < 665)) then
										v83[v85[2]] = v63[v85[8 - 5]];
										break;
									end
									if (v673 == (1 + 2)) then
										v85 = v73[v77];
										v83[v85[4 - 2]] = v63[v85[1146 - (455 + 688)]];
										v77 = v77 + (1345 - (481 + 863));
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[3]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v673 = 1 + 3;
									end
									if ((341 < 4095) and (v673 == 9)) then
										v83[v85[5 - 3]] = v83[v85[1971 - (896 + 1072)]];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v676 = v85[2];
										v83[v676](v13(v83, v676 + 1 + 0, v85[6 - 3]));
										v77 = v77 + (789 - (50 + 738));
										v85 = v73[v77];
										v673 = 8 + 2;
									end
									if ((18 - 11) == v673) then
										v85 = v73[v77];
										v83[v85[4 - 2]] = v85[1556 - (1128 + 425)];
										v77 = v77 + 1;
										v85 = v73[v77];
										v676 = v85[1 + 1];
										v83[v676] = v83[v676](v13(v83, v676 + 1, v85[3]));
										v77 = v77 + (457 - (398 + 58));
										v673 = 720 - (194 + 518);
									end
									if ((2724 >= 84) and (v673 == (376 - (42 + 333)))) then
										v77 = v77 + (1445 - (1308 + 136));
										v85 = v73[v77];
										v83[v85[2 + 0]] = v85[123 - (56 + 64)];
										v77 = v77 + (697 - (251 + 445));
										v85 = v73[v77];
										v83[v85[1 + 1]] = v63[v85[1 + 2]];
										v77 = v77 + 1;
										v673 = 2 + 0;
									end
									if ((v673 == (1571 - (999 + 570))) or (2260 > 3778)) then
										v85 = v73[v77];
										v676 = v85[2 - 0];
										v83[v676] = v83[v676](v13(v83, v676 + (2 - 1), v85[6 - 3]));
										v77 = v77 + (1700 - (1476 + 223));
										v85 = v73[v77];
										v83[v85[2]] = v85[1839 - (597 + 1239)];
										v77 = v77 + (3 - 2);
										v673 = 3;
									end
									if (v673 == (4 + 2)) then
										v77 = v77 + (885 - (590 + 294));
										v85 = v73[v77];
										v676 = v85[3 - 1];
										v675 = v83[v85[792 - (433 + 356)]];
										v83[v676 + 1] = v675;
										v83[v676] = v675[v85[2 + 2]];
										v77 = v77 + (1 - 0);
										v673 = 1263 - (791 + 465);
									end
									if (v673 == (1122 - (1048 + 66))) then
										v85 = v73[v77];
										v676 = v85[1 + 1];
										v675 = v83[v85[12 - 9]];
										v83[v676 + (1998 - (666 + 1331))] = v675;
										v83[v676] = v675[v85[1904 - (854 + 1046)]];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v673 = 9 + 0;
									end
									if (v673 == (12 - 7)) then
										v83[v85[2 + 0]] = v674;
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2]][v85[99 - (61 + 35)]] = v83[v85[19 - 15]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1820 - (1591 + 227)]] = v63[v85[5 - 2]];
										v673 = 797 - (173 + 618);
									end
									if (v673 == (1323 - (588 + 735))) then
										v674 = nil;
										v675 = nil;
										v676 = nil;
										v83[v85[582 - (170 + 410)]] = v63[v85[3 + 0]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[4 - 2]] = v83[v85[1 + 2]][v85[4 + 0]];
										v673 = 553 - (362 + 190);
									end
								end
							elseif ((2969 <= 4522) and (v86 > 286)) then
								for v4670 = v85[850 - (529 + 319)], v85[2 + 1] do
									v83[v4670] = nil;
								end
							else
								v83[v85[6 - 4]] = v83[v85[2 + 1]][v85[3 + 1]];
								v77 = v77 + (1201 - (829 + 371));
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[4 - 1]][v85[3 + 1]];
								v77 = v77 + (1677 - (700 + 976));
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[6 - 3]][v85[4]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[1644 - (1137 + 504)]][v85[14 - 10]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2 - 0]] = v62[v85[1 + 2]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1616 - (327 + 1287)]] = v83[v85[5 - 2]][v85[5 - 1]];
								v77 = v77 + 1;
								v85 = v73[v77];
								if (v83[v85[1 + 1]] ~= v83[v85[11 - 7]]) then
									v77 = v77 + (1114 - (224 + 889));
								else
									v77 = v85[3];
								end
							end
						elseif (v86 <= (1509 - (574 + 646))) then
							if ((3456 < 4991) and (v86 == (895 - (83 + 524)))) then
								local v3059 = v85[771 - (577 + 191)];
								local v3060 = v83[v3059];
								for v4672 = v3059 + 1 + 0, v85[3 + 1] do
									v3060 = v3060 .. v83[v4672];
								end
								v83[v85[801 - (248 + 551)]] = v3060;
							else
								local v3062;
								local v3063;
								v83[v85[79 - (53 + 24)]] = v83[v85[136 - (12 + 121)]][v83[v85[11 - 7]]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v3063 = v85[608 - (164 + 442)];
								v3062 = v83[v85[3]];
								v83[v3063 + 1 + 0] = v3062;
								v83[v3063] = v3062[v85[3 + 1]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[4 - 2]] = v85[3];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v3063 = v85[2 + 0];
								v83[v3063] = v83[v3063](v13(v83, v3063 + 1, v85[6 - 3]));
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								if (not v83[v85[1249 - (585 + 662)]] or (1172 > 4773)) then
									v77 = v77 + 1 + 0;
								else
									v77 = v85[1 + 2];
								end
							end
						elseif (v86 == 290) then
							local v3075;
							local v3076;
							v83[v85[582 - (126 + 454)]] = v83[v85[417 - (366 + 48)]][v85[1687 - (1633 + 50)]];
							v77 = v77 + (1102 - (892 + 209));
							v85 = v73[v77];
							v83[v85[2 + 0]] = v83[v85[6 - 3]][v85[7 - 3]];
							v77 = v77 + (661 - (495 + 165));
							v85 = v73[v77];
							v83[v85[5 - 3]] = v62[v85[7 - 4]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[5 - 2]][v85[4]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[1 + 2]][v85[586 - (431 + 151)]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[3]][v85[5 - 1]];
							v77 = v77 + (16 - (10 + 5));
							v85 = v73[v77];
							v83[v85[424 - (403 + 19)]] = v83[v85[1774 - (454 + 1317)]][v85[2 + 2]];
							v77 = v77 + (1815 - (187 + 1627));
							v85 = v73[v77];
							v83[v85[2]][v85[3]] = v83[v85[4]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1954 - (832 + 1120)]] = v62[v85[8 - 5]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[1099 - (1001 + 95)]][v85[33 - (4 + 25)]];
							v77 = v77 + (1162 - (904 + 257));
							v85 = v73[v77];
							v3076 = v85[4 - 2];
							v3075 = v83[v85[3]];
							v83[v3076 + 1 + 0] = v3075;
							v83[v3076] = v3075[v85[4 - 0]];
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v83[v85[8 - 6]] = v62[v85[3 + 0]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2 - 0]] = v83[v85[3]][v85[1793 - (735 + 1054)]];
							v77 = v77 + (1694 - (418 + 1275));
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[2 + 1]][v85[11 - 7]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[7 - 5]] = v83[v85[1475 - (784 + 688)]][v85[13 - 9]];
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v3076 = v85[1251 - (374 + 875)];
							v83[v3076] = v83[v3076](v13(v83, v3076 + (2 - 1), v85[983 - (304 + 676)]));
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1360 - (517 + 841)]] = v83[v85[869 - (356 + 510)]];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[2]] = v85[6 - 3];
						else
							local v3111 = 1209 - (306 + 903);
							local v3112;
							local v3113;
							while true do
								if (v3111 == (1103 - (70 + 1033))) then
									v3112 = nil;
									v3113 = nil;
									v83[v85[2]] = v83[v85[12 - 9]][v85[3 + 1]];
									v77 = v77 + 1 + 0;
									v3111 = 1 + 0;
								end
								if ((806 - (523 + 281)) == v3111) then
									v83[v85[924 - (241 + 681)]] = v85[3];
									v77 = v77 + (1099 - (358 + 740));
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[3]][v83[v85[4]]];
									v3111 = 11 - 8;
								end
								if ((v3111 == 1) or (2810 >= 3701)) then
									v85 = v73[v77];
									v83[v85[1043 - (1005 + 36)]] = v83[v85[1 + 2]][v85[706 - (533 + 169)]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v3111 = 1 + 1;
								end
								if ((3 + 2) == v3111) then
									v83[v85[1 + 1]] = v85[1528 - (817 + 708)];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v3113 = v85[2 + 0];
									v3111 = 1704 - (636 + 1062);
								end
								if (v3111 == (24 - 18)) then
									v83[v3113] = v83[v3113](v13(v83, v3113 + (1 - 0), v85[3]));
									v77 = v77 + 1;
									v85 = v73[v77];
									if v83[v85[2]] then
										v77 = v77 + (1659 - (1130 + 528));
									else
										v77 = v85[3];
									end
									break;
								end
								if (v3111 == 3) then
									v77 = v77 + 1;
									v85 = v73[v77];
									v3113 = v85[2];
									v3112 = v83[v85[9 - 6]];
									v3111 = 4 + 0;
								end
								if (v3111 == (147 - (115 + 28))) then
									v83[v3113 + 1 + 0] = v3112;
									v83[v3113] = v3112[v85[4]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v3111 = 1386 - (1076 + 305);
								end
							end
						end
					elseif ((3385 < 4069) and (v86 <= (2073 - (1198 + 571)))) then
						if (v86 <= 297) then
							if ((v86 <= (1811 - (629 + 888))) or (395 == 4149)) then
								if (v86 <= (667 - 375)) then
									local v677 = v85[1 + 1];
									local v678 = {v83[v677](v13(v83, v677 + 1 + 0, v78))};
									local v679 = 0;
									for v914 = v677, v85[173 - (113 + 56)] do
										v679 = v679 + (1254 - (521 + 732));
										v83[v914] = v678[v679];
									end
								elseif ((v86 > 293) or (2987 >= 3447)) then
									v83[v85[2 - 0]] = v85[1541 - (99 + 1439)] / v85[3 + 1];
								else
									local v3115;
									local v3116;
									local v3117;
									v83[v85[2]] = v62[v85[3]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[7 - 5]] = v62[v85[411 - (39 + 369)]];
									v77 = v77 + (1960 - (870 + 1089));
									v85 = v73[v77];
									v83[v85[797 - (564 + 231)]] = v62[v85[1924 - (1893 + 28)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v62[v85[3]];
									v77 = v77 + (527 - (140 + 386));
									v85 = v73[v77];
									v83[v85[2 + 0]] = {};
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]] = {};
									v77 = v77 + (1917 - (485 + 1431));
									v85 = v73[v77];
									v83[v85[4 - 2]] = {};
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[1 + 1]] = v85[3 + 0];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[7 - 5]] = v62[v85[1 + 2]];
									v77 = v77 + (1182 - (945 + 236));
									v85 = v73[v77];
									v83[v85[2]] = v85[6 - 3];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v3117 = v85[4 - 2];
									v3116 = v83[v3117];
									v3115 = v83[v3117 + (4 - 2)];
									if (v3115 > (0 + 0)) then
										if (v3116 > v83[v3117 + (514 - (383 + 130))]) then
											v77 = v85[906 - (643 + 260)];
										else
											v83[v3117 + (1450 - (109 + 1338))] = v3116;
										end
									elseif (v3116 < v83[v3117 + 1 + 0]) then
										v77 = v85[13 - 10];
									else
										v83[v3117 + (747 - (338 + 406))] = v3116;
									end
								end
							elseif (v86 <= (869 - 574)) then
								local v680;
								v680 = v85[477 - (20 + 455)];
								v83[v680] = v83[v680]();
								v77 = v77 + (4 - 3);
								v85 = v73[v77];
								v83[v85[2 - 0]] = v83[v85[78 - (39 + 36)]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v62[v85[3 + 0]];
								v77 = v77 + (1707 - (609 + 1097));
								v85 = v73[v77];
								v83[v85[660 - (543 + 115)]] = v83[v85[2 + 1]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2]] = v85[5 - 2];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[1610 - (1559 + 49)]] = v85[625 - (317 + 305)];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v680 = v85[8 - 6];
								v83[v680] = v83[v680](v13(v83, v680 + (828 - (509 + 318)), v85[3]));
								v77 = v77 + (1818 - (384 + 1433));
								v85 = v73[v77];
								if (v83[v85[2 + 0]] == v85[11 - 7]) then
									v77 = v77 + 1;
								else
									v77 = v85[3];
								end
							elseif (v86 == (45 + 251)) then
								local v3135 = 0;
								while true do
									if ((1628 < 3940) and (v3135 == 2)) then
										v85 = v73[v77];
										v83[v85[8 - 6]] = v83[v85[1537 - (198 + 1336)]][v83[v85[1 + 3]]];
										v77 = v77 + (1406 - (1149 + 256));
										v85 = v73[v77];
										v3135 = 6 - 3;
									end
									if (v3135 == (4 - 0)) then
										v77 = v77 + 1;
										v85 = v73[v77];
										v77 = v85[1769 - (1280 + 486)];
										break;
									end
									if ((4697 > 1866) and (1 == v3135)) then
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[2 - 0]] = v83[v85[3]][v85[4 + 0]];
										v77 = v77 + 1;
										v3135 = 1610 - (786 + 822);
									end
									if (v3135 == 0) then
										v83[v85[4 - 2]] = v83[v85[1 + 2]][v85[3 + 1]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1462 - (1303 + 157)]] = v83[v85[2 + 1]][v83[v85[1419 - (505 + 910)]]];
										v3135 = 2 - 1;
									end
									if (v3135 == (871 - (548 + 320))) then
										v83[v85[2]] = v83[v85[3]] * v83[v85[595 - (52 + 539)]];
										v77 = v77 + (556 - (378 + 177));
										v85 = v73[v77];
										v83[v85[5 - 3]][v83[v85[7 - 4]]] = v83[v85[4]];
										v3135 = 3 + 1;
									end
								end
							else
								local v3136;
								v83[v85[209 - (108 + 99)]] = v62[v85[2 + 1]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[8 - 6]] = v62[v85[3 + 0]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2 + 0]] = v62[v85[3 + 0]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[4 - 2]] = v83[v85[6 - 3]] + v83[v85[2 + 2]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[3 - 1]] = v83[v85[2 + 1]] - v85[18 - 14];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v3136 = v85[841 - (823 + 16)];
								v83[v3136] = v83[v3136](v13(v83, v3136 + (279 - (19 + 259)), v85[1823 - (1780 + 40)]));
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[7 - 4]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[3 - 1]] = v62[v85[1 + 2]];
								v77 = v77 + (4 - 3);
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[11 - 8]] + v83[v85[2 + 2]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v62[v85[8 - 5]] = v83[v85[1 + 1]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1182 - (825 + 355)]] = v85[3];
							end
						elseif (v86 <= 300) then
							if (v86 <= (1158 - (846 + 14))) then
								local v694;
								local v695;
								local v696;
								v696 = v85[2 + 0];
								v83[v696] = v83[v696]();
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[3 - 1]][v85[373 - (237 + 133)]] = v83[v85[4]];
								v77 = v77 + (1187 - (624 + 562));
								v85 = v73[v77];
								v83[v85[5 - 3]] = v85[3];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2]] = v62[v85[3 + 0]];
								v77 = v77 + (803 - (700 + 102));
								v85 = v73[v77];
								v696 = v85[6 - 4];
								v83[v696] = v83[v696]();
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2]] = v85[3];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v696 = v85[2];
								v695 = v83[v696];
								v694 = v83[v696 + 2];
								if ((1524 >= 1098) and (v694 > (0 + 0))) then
									if (v695 > v83[v696 + (1 - 0)]) then
										v77 = v85[7 - 4];
									else
										v83[v696 + 1 + 2] = v695;
									end
								elseif ((v695 < v83[v696 + (1277 - (735 + 541))]) or (2083 <= 1138)) then
									v77 = v85[843 - (497 + 343)];
								else
									v83[v696 + (1786 - (995 + 788))] = v695;
								end
							elseif ((v86 > (958 - 659)) or (290 >= 3702)) then
								v83[v85[2]] = v83[v85[1 + 2]][v85[5 - 1]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[200 - (37 + 161)]] = v83[v85[5 - 2]][v83[v85[11 - 7]]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[3]][v85[8 - 4]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1274 - (357 + 915)]] = v83[v85[678 - (50 + 625)]][v83[v85[1884 - (1624 + 256)]]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[3 - 1]] = v83[v85[3 - 0]][v83[v85[1527 - (180 + 1343)]]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1344 - (1057 + 285)]][v83[v85[1 + 2]]] = v83[v85[7 - 3]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v77 = v85[1406 - (135 + 1268)];
							else
								local v3168;
								local v3169;
								v83[v85[1423 - (1088 + 333)]] = v85[1685 - (1280 + 402)];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3 + 0]][v83[v85[4]]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[7 - 5]] = v85[1 + 2];
								v77 = v77 + (18 - (11 + 6));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[5 - 2]][v83[v85[15 - 11]]];
								v77 = v77 + (1737 - (1015 + 721));
								v85 = v73[v77];
								v3169 = v85[5 - 3];
								v3168 = v83[v85[245 - (169 + 73)]];
								v83[v3169 + (1 - 0)] = v3168;
								v83[v3169] = v3168[v85[4]];
							end
						elseif ((v86 <= (2198 - (1052 + 844))) or (1787 > 2804)) then
							if (v86 > (1010 - 709)) then
								local v3184;
								local v3185;
								v3185 = v85[2];
								v83[v3185](v83[v3185 + (17 - (5 + 11))]);
								v77 = v77 + 1;
								v85 = v73[v77];
								v3185 = v85[1517 - (210 + 1305)];
								v3184 = v83[v85[2 + 1]];
								v83[v3185 + (1 - 0)] = v3184;
								v83[v3185] = v3184[v85[751 - (646 + 101)]];
								v77 = v77 + (377 - (12 + 364));
								v85 = v73[v77];
								v83[v85[717 - (587 + 128)]] = v85[6 - 3];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v3185 = v85[4 - 2];
								v83[v3185](v13(v83, v3185 + (228 - (196 + 31)), v85[2 + 1]));
								v77 = v77 + (538 - (227 + 310));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v63[v85[3]];
								v77 = v77 + (774 - (689 + 84));
								v85 = v73[v77];
								v83[v85[1377 - (404 + 971)]] = v83[v85[3]][v85[8 - 4]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1399 - (764 + 633)]] = v85[3 + 0];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v3185 = v85[208 - (114 + 92)];
								v83[v3185](v83[v3185 + 1]);
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[531 - (4 + 525)]] = v85[3];
								v77 = v77 + 1;
								v85 = v73[v77];
								v77 = v85[4 - 1];
							else
								v83[v85[2 - 0]] = v83[v85[3]][v85[1317 - (636 + 677)]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[6 - 4]] = v83[v85[1357 - (447 + 907)]][v85[1802 - (303 + 1495)]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[5 - 3]][v85[6 - 3]] = v83[v85[1820 - (1446 + 370)]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[554 - (245 + 306)]][v85[3 + 1]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[10 - 7]][v85[2 + 2]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1475 - (536 + 937)]] = v83[v85[7 - 4]][v85[156 - (143 + 9)]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[1076 - (474 + 600)]][v85[7 - 4]] = v83[v85[12 - 8]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[3];
							end
						elseif (v86 == (860 - 557)) then
							local v3222 = 0;
							while true do
								if ((719 <= 2539) and (v3222 == (4 + 0))) then
									v63[v85[3 - 0]] = v83[v85[1 + 1]];
									v77 = v77 + (1489 - (49 + 1439));
									v85 = v73[v77];
									v3222 = 2 + 3;
								end
								if ((v3222 == (20 - 15)) or (4444 < 3952)) then
									v77 = v85[1993 - (769 + 1221)];
									break;
								end
								if (v3222 == 1) then
									v83[v85[1 + 1]] = v83[v85[1075 - (270 + 802)]][v85[1860 - (301 + 1555)]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v3222 = 1 + 1;
								end
								if (v3222 == (1 + 1)) then
									v83[v85[2]] = v83[v85[3]][v85[79 - (22 + 53)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v3222 = 14 - 11;
								end
								if (v3222 == (0 - 0)) then
									v83[v85[2]] = v83[v85[3]][v85[1 + 3]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v3222 = 1 + 0;
								end
								if (v3222 == 3) then
									v83[v85[2 + 0]] = v83[v85[1 + 2]][v85[96 - (41 + 51)]];
									v77 = v77 + (604 - (391 + 212));
									v85 = v73[v77];
									v3222 = 6 - 2;
								end
							end
						else
							local v3223;
							local v3224;
							v83[v85[2 + 0]] = v85[3 + 0];
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v83[v85[2 - 0]] = v85[3];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[4 - 2]] = v85[1 + 2];
							v77 = v77 + (3 - 2);
							v85 = v73[v77];
							v3224 = v85[2 + 0];
							v83[v3224] = v83[v3224](v13(v83, v3224 + (1 - 0), v85[3 + 0]));
							v77 = v77 + (377 - (155 + 221));
							v85 = v73[v77];
							v83[v85[2]][v83[v85[2 + 1]]] = v83[v85[4]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2]] = v85[3];
							v77 = v77 + (1458 - (366 + 1091));
							v85 = v73[v77];
							v83[v85[2 + 0]] = v83[v85[289 - (90 + 196)]][v83[v85[1778 - (1710 + 64)]]];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[9 - 7]] = v85[5 - 2];
							v77 = v77 + (3 - 2);
							v85 = v73[v77];
							v83[v85[2 - 0]] = v83[v85[3 - 0]][v83[v85[4]]];
							v77 = v77 + (268 - (72 + 195));
							v85 = v73[v77];
							v83[v85[2]] = v85[2 + 1];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[1180 - (28 + 1150)]] = v63[v85[1 + 2]];
							v77 = v77 + (599 - (102 + 496));
							v85 = v73[v77];
							v83[v85[446 - (181 + 263)]] = v83[v85[2 + 1]][v85[4]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[7 - 5]] = v85[3 + 0];
							v77 = v77 + (1509 - (822 + 686));
							v85 = v73[v77];
							v83[v85[5 - 3]] = v85[7 - 4];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2]] = v85[7 - 4];
							v77 = v77 + (862 - (252 + 609));
							v85 = v73[v77];
							v3224 = v85[1 + 1];
							v83[v3224] = v83[v3224](v13(v83, v3224 + 1 + 0, v85[4 - 1]));
							v77 = v77 + (959 - (578 + 380));
							v85 = v73[v77];
							v83[v85[2]][v83[v85[1 + 2]]] = v83[v85[1720 - (1431 + 285)]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[1 + 1]] = v85[4 - 1];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2 - 0]] = v83[v85[11 - 8]][v83[v85[8 - 4]]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2]] = v85[4 - 1];
							v77 = v77 + (1113 - (1013 + 99));
							v85 = v73[v77];
							v83[v85[3 - 1]] = v83[v85[960 - (449 + 508)]][v83[v85[6 - 2]]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2]] = v85[3];
							v77 = v77 + (1893 - (1562 + 330));
							v85 = v73[v77];
							v83[v85[1974 - (1870 + 102)]] = v63[v85[1 + 2]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[3 + 0]][v85[5 - 1]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[3 - 1]] = v85[3 + 0];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2]] = v85[3];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[1 + 1]] = v85[3];
							v77 = v77 + 1;
							v85 = v73[v77];
							v3224 = v85[1 + 1];
							v83[v3224] = v83[v3224](v13(v83, v3224 + (995 - (550 + 444)), v85[1 + 2]));
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[2 + 0]][v83[v85[2 + 1]]] = v83[v85[4]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[1 + 1]] = v85[1 + 2];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[582 - (544 + 36)]] = v83[v85[3]][v83[v85[4]]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[1233 - (70 + 1161)]] = v85[2 + 1];
							v77 = v77 + (758 - (130 + 627));
							v85 = v73[v77];
							v83[v85[3 - 1]] = v83[v85[314 - (121 + 190)]][v83[v85[4]]];
							v77 = v77 + (3 - 2);
							v85 = v73[v77];
							v83[v85[2 + 0]] = v85[12 - 9];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2]] = v63[v85[325 - (255 + 67)]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[4 - 2]] = v83[v85[281 - (225 + 53)]][v85[4 - 0]];
							v77 = v77 + (1300 - (738 + 561));
							v85 = v73[v77];
							v83[v85[2]] = v85[10 - 7];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2 + 0]] = v85[1614 - (1450 + 161)];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2]] = v85[1731 - (183 + 1545)];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v3224 = v85[1172 - (736 + 434)];
							v83[v3224] = v83[v3224](v13(v83, v3224 + 1 + 0, v85[3]));
							v77 = v77 + (4 - 3);
							v85 = v73[v77];
							v83[v85[41 - (32 + 7)]][v83[v85[3]]] = v83[v85[15 - 11]];
							v77 = v77 + (374 - (103 + 270));
							v85 = v73[v77];
							v83[v85[2]] = v85[3];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2 + 0]] = v83[v85[3]][v83[v85[1457 - (1021 + 432)]]];
							v77 = v77 + (3 - 2);
							v85 = v73[v77];
							v83[v85[1416 - (153 + 1261)]] = v85[1 + 2];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2]] = v63[v85[891 - (800 + 88)]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[5 - 3]] = v83[v85[824 - (358 + 463)]][v85[4]];
							v77 = v77 + (259 - (176 + 82));
							v85 = v73[v77];
							v83[v85[4 - 2]] = v85[3];
							v77 = v77 + (771 - (543 + 227));
							v85 = v73[v77];
							v83[v85[2 + 0]] = v85[1 + 2];
							v77 = v77 + (3 - 2);
							v85 = v73[v77];
							v83[v85[1788 - (1509 + 277)]] = v85[1963 - (1453 + 507)];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v3224 = v85[2];
							v83[v3224] = v83[v3224](v13(v83, v3224 + (3 - 2), v85[11 - 8]));
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1 + 1]][v83[v85[3]]] = v83[v85[4]];
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v83[v85[1033 - (22 + 1009)]] = v85[14 - 11];
							v77 = v77 + (1941 - (245 + 1695));
							v85 = v73[v77];
							v83[v85[1037 - (611 + 424)]] = v83[v85[301 - (280 + 18)]][v83[v85[3 + 1]]];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[4 - 2]] = v85[281 - (109 + 169)];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1 + 1]] = v83[v85[1 + 2]][v83[v85[2 + 2]]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[1 + 1]] = v85[11 - 8];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[4 - 2]] = v63[v85[1345 - (875 + 467)]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[1 + 1]] = v83[v85[13 - 10]][v85[10 - 6]];
							v77 = v77 + (3 - 2);
							v85 = v73[v77];
							v83[v85[801 - (717 + 82)]] = v85[1023 - (693 + 327)];
							v77 = v77 + (1912 - (746 + 1165));
							v85 = v73[v77];
							v83[v85[1737 - (1473 + 262)]] = v85[3 + 0];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2]] = v85[1876 - (874 + 999)];
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v3224 = v85[2 + 0];
							v83[v3224] = v83[v3224](v13(v83, v3224 + 1, v85[7 - 4]));
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2 + 0]][v83[v85[2 + 1]]] = v83[v85[17 - 13]];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[2 + 0]] = v83[v85[2 + 1]][v85[3 + 1]];
							v77 = v77 + (459 - (388 + 70));
							v85 = v73[v77];
							v3224 = v85[2];
							v3223 = v83[v85[3]];
							v83[v3224 + 1] = v3223;
							v83[v3224] = v3223[v85[4]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2 + 0]] = v85[3 + 0];
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v3224 = v85[2];
							v83[v3224] = v83[v3224](v13(v83, v3224 + 1 + 0, v85[585 - (319 + 263)]));
							v77 = v77 + (3 - 2);
							v85 = v73[v77];
							if ((3873 < 4041) and v83[v85[3 - 1]]) then
								v77 = v77 + 1 + 0;
							else
								v77 = v85[2 + 1];
							end
						end
					elseif (v86 <= (223 + 88)) then
						if (v86 <= (1121 - (94 + 720))) then
							if ((1640 < 2349) and (v86 <= (683 - (78 + 300)))) then
								local v709 = 1917 - (774 + 1143);
								local v710;
								while true do
									if (v709 == 2) then
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[193 - (18 + 173)]][v85[7 - 4]] = v83[v85[5 - 1]];
										v709 = 7 - 4;
									end
									if (((29 - 23) == v709) or (367 >= 4717)) then
										v83[v85[2]][v85[3]] = v83[v85[1489 - (677 + 808)]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v709 = 7;
									end
									if ((v709 == (970 - (528 + 442))) or (3389 > 4626)) then
										v710 = nil;
										v710 = v85[2];
										v83[v710] = v83[v710]();
										v709 = 1;
									end
									if (v709 == (20 - 13)) then
										v77 = v85[350 - (116 + 231)];
										break;
									end
									if ((767 > 163) and (v709 == 4)) then
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v710 = v85[2 + 0];
										v709 = 5;
									end
									if (v709 == (19 - 14)) then
										v83[v710] = v83[v710]();
										v77 = v77 + 1;
										v85 = v73[v77];
										v709 = 2 + 4;
									end
									if (v709 == (1473 - (1242 + 228))) then
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v83[v85[2]] = v62[v85[847 - (320 + 524)]];
										v709 = 4;
									end
									if ((v709 == (2 - 1)) or (3210 <= 1821)) then
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[4 - 2]] = v83[v85[13 - 10]] - v85[4];
										v709 = 2;
									end
								end
							elseif ((v86 > (19 + 287)) or (1151 >= 2584)) then
								v83[v85[5 - 3]] = v83[v85[478 - (63 + 412)]][v85[1868 - (1299 + 565)]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[5 - 3]] = v62[v85[3]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[8 - 6]] = v83[v85[3]][v85[4]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[3 + 0]][v85[3 + 1]];
								v77 = v77 + 1;
								v85 = v73[v77];
								if (v85[6 - 4] <= v83[v85[332 - (79 + 249)]]) then
									v77 = v77 + (2 - 1);
								else
									v77 = v85[3];
								end
							else
								local v3307 = 0;
								while true do
									if (v3307 == (1632 - (305 + 1325))) then
										v85 = v73[v77];
										v83[v85[1730 - (1585 + 143)]] = v63[v85[9 - 6]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v3307 = 3;
									end
									if (v3307 == (1830 - (1727 + 103))) then
										v83[v85[6 - 4]][v85[3]] = v85[4];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2 + 0]] = v63[v85[9 - 6]];
										v3307 = 275 - (135 + 139);
									end
									if (v3307 == (3 + 0)) then
										v83[v85[2 - 0]] = v83[v85[3 + 0]][v85[4]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v83[v85[2 + 1]][v85[4]];
										break;
									end
									if (v3307 == (2 - 1)) then
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1706 - (1084 + 620)]][v85[1056 - (404 + 649)]] = v85[818 - (318 + 496)];
										v77 = v77 + (1883 - (1730 + 152));
										v3307 = 2;
									end
								end
							end
						elseif (v86 <= (945 - 636)) then
							if (v86 == (1074 - 766)) then
								if (v83[v85[1863 - (527 + 1334)]] ~= v83[v85[2 + 2]]) then
									v77 = v77 + 1;
								else
									v77 = v85[3];
								end
							else
								local v3308;
								local v3309;
								v83[v85[1948 - (464 + 1482)]] = v83[v85[6 - 3]][v83[v85[1 + 3]]];
								v77 = v77 + (570 - (485 + 84));
								v85 = v73[v77];
								v83[v85[1 + 1]] = v85[3 + 0];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[1 + 2]][v83[v85[9 - 5]]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[5 - 3]] = v85[1004 - (359 + 642)];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v3309 = v85[1 + 1];
								v3308 = v83[v85[1347 - (564 + 780)]];
								v83[v3309 + (3 - 2)] = v3308;
								v83[v3309] = v3308[v83[v85[4]]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v85[5 - 2];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v3309 = v85[4 - 2];
								v83[v3309] = v83[v3309](v13(v83, v3309 + 1, v85[2 + 1]));
								v77 = v77 + (1427 - (909 + 517));
								v85 = v73[v77];
								v3309 = v85[461 - (432 + 27)];
								v3308 = v83[v85[3]];
								v83[v3309 + 1] = v3308;
								v83[v3309] = v3308[v85[1740 - (69 + 1667)]];
							end
						elseif (v86 > (143 + 167)) then
							v83[v85[124 - (16 + 106)]][v85[3]] = v85[3 + 1];
							v77 = v77 + (1253 - (1178 + 74));
							v85 = v73[v77];
							v83[v85[1 + 1]] = v63[v85[10 - 7]];
							v77 = v77 + (448 - (312 + 135));
							v85 = v73[v77];
							v83[v85[2 + 0]][v85[1 + 2]] = v85[13 - 9];
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v83[v85[1831 - (492 + 1337)]] = v63[v85[1 + 2]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[3]][v85[4]];
						else
							local v3341 = 1390 - (814 + 576);
							while true do
								if ((4185 <= 4661) and (v3341 == (6 - 3))) then
									v83[v85[2]] = v83[v85[7 - 4]][v85[4 + 0]];
									break;
								end
								if ((v3341 == (5 - 3)) or (455 <= 140)) then
									v85 = v73[v77];
									v83[v85[5 - 3]] = v63[v85[1 + 2]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v3341 = 3;
								end
								if (v3341 == 0) then
									v83[v85[5 - 3]][v85[2 + 1]] = v85[1 + 3];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[1 + 1]] = v63[v85[1362 - (978 + 381)]];
									v3341 = 1;
								end
								if (v3341 == (1 + 0)) then
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]][v85[2 + 1]] = v85[8 - 4];
									v77 = v77 + 1;
									v3341 = 1 + 1;
								end
							end
						end
					elseif (v86 <= (904 - 590)) then
						if ((v86 <= 312) or (353 > 2350)) then
							v83[v85[2 + 0]] = v62[v85[3]];
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v83[v85[2 + 0]] = v83[v85[2 + 1]][v85[1 + 3]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[571 - (397 + 172)]] = v83[v85[4 - 1]][v85[4]];
							v77 = v77 + (1118 - (267 + 850));
							v85 = v73[v77];
							v83[v85[2 + 0]] = v83[v85[3]][v85[12 - 8]];
							v77 = v77 + (995 - (41 + 953));
							v85 = v73[v77];
							if ((v83[v85[8 - 6]] == v85[1 + 3]) or (844 <= 747)) then
								v77 = v77 + (1 - 0);
							else
								v77 = v85[823 - (817 + 3)];
							end
						elseif ((v86 == (1698 - (867 + 518))) or (2007 <= 1868)) then
							local v3343;
							v83[v85[5 - 3]] = v83[v85[333 - (256 + 74)]][v85[4]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1 + 1]] = v85[12 - 9];
							v77 = v77 + (188 - (111 + 76));
							v85 = v73[v77];
							v83[v85[2 + 0]] = v63[v85[1054 - (100 + 951)]];
							v77 = v77 + (626 - (369 + 256));
							v85 = v73[v77];
							v83[v85[8 - 6]] = v83[v85[3]][v85[1 + 3]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[65 - (25 + 38)]] = v83[v85[1039 - (890 + 146)]][v85[4]];
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v83[v85[2 + 0]] = v83[v85[1587 - (549 + 1035)]][v85[8 - 4]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v3343 = v85[2];
							v83[v3343] = v83[v3343](v13(v83, v3343 + 1 + 0, v85[964 - (546 + 415)]));
							v77 = v77 + (1025 - (175 + 849));
							v85 = v73[v77];
							v63[v85[3]] = v83[v85[2]];
						else
							local v3360;
							v83[v85[1666 - (734 + 930)]] = v62[v85[3]];
							v77 = v77 + (1416 - (1093 + 322));
							v85 = v73[v77];
							v83[v85[7 - 5]] = v83[v85[3]];
							v77 = v77 + (1302 - (1256 + 45));
							v85 = v73[v77];
							v83[v85[2]] = v85[1848 - (66 + 1779)];
							v77 = v77 + (1774 - (920 + 853));
							v85 = v73[v77];
							v83[v85[60 - (6 + 52)]] = v85[5 - 2];
							v77 = v77 + 1;
							v85 = v73[v77];
							v3360 = v85[7 - 5];
							v83[v3360] = v83[v3360](v13(v83, v3360 + (2 - 1), v85[11 - 8]));
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[3]] * v85[4];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[89 - (11 + 76)]] = v83[v85[3]] + v83[v85[10 - 6]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[824 - (560 + 262)]] = v85[3 - 0];
							v77 = v77 + 1;
							v85 = v73[v77];
							v77 = v85[1860 - (12 + 1845)];
						end
					elseif (v86 <= (295 + 21)) then
						if ((805 < 3967) and (v86 == 315)) then
							v83[v85[1319 - (1278 + 39)]] = v63[v85[9 - 6]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2 + 0]] = v62[v85[3]];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[7 - 5]] = v83[v85[3]][v85[4]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1 + 1]] = v83[v85[1539 - (385 + 1151)]][v85[1454 - (240 + 1210)]];
							v77 = v77 + (1666 - (816 + 849));
							v85 = v73[v77];
							if ((v85[2] <= v83[v85[4]]) or (788 < 485)) then
								v77 = v77 + (1855 - (99 + 1755));
							else
								v77 = v85[3 - 0];
							end
						else
							local v3385;
							v83[v85[786 - (424 + 360)]] = v62[v85[1377 - (41 + 1333)]];
							v77 = v77 + (546 - (161 + 384));
							v85 = v73[v77];
							v83[v85[933 - (355 + 576)]] = v83[v85[3]][v85[4]];
							v77 = v77 + (688 - (348 + 339));
							v85 = v73[v77];
							v83[v85[9 - 7]] = v83[v85[14 - 11]][v83[v85[472 - (285 + 183)]]];
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							for v4691 = v85[1 + 1], v85[1973 - (928 + 1042)] do
								v83[v4691] = nil;
							end
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[1578 - (545 + 1031)]] = v62[v85[8 - 5]];
							v77 = v77 + (3 - 2);
							v85 = v73[v77];
							v3385 = v85[2 - 0];
							v83[v3385] = v83[v3385](v13(v83, v3385 + 1, v85[928 - (345 + 580)]));
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[1 + 1]][v83[v85[3]]] = v83[v85[313 - (136 + 173)]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v77 = v85[1906 - (1448 + 455)];
						end
					elseif ((2775 >= 2417) and (v86 == (876 - 559))) then
						local v3400 = 0 + 0;
						while true do
							if (v3400 == (0 + 0)) then
								v83[v85[2 + 0]] = v83[v85[3]][v83[v85[8 - 4]]];
								v77 = v77 + (1562 - (1137 + 424));
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[1930 - (372 + 1555)]][v85[385 - (174 + 207)]];
								v3400 = 1 + 0;
							end
							if ((v3400 == 3) or (3445 <= 3346)) then
								v83[v85[2]][v83[v85[3 + 0]]] = v83[v85[1 + 3]];
								v77 = v77 + (72 - (65 + 6));
								v85 = v73[v77];
								v77 = v85[1314 - (1041 + 270)];
								break;
							end
							if ((4602 >= 515) and (v3400 == (1 - 0))) then
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[6 - 4]] = v83[v85[1713 - (222 + 1488)]][v85[3 + 1]];
								v77 = v77 + 1 + 0;
								v3400 = 2;
							end
							if (v3400 == (1524 - (1023 + 499))) then
								v85 = v73[v77];
								v83[v85[3 - 1]] = v83[v85[10 - 7]][v83[v85[3 + 1]]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v3400 = 1 + 2;
							end
						end
					else
						local v3401;
						local v3402;
						v83[v85[2 + 0]] = v83[v85[2 + 1]][v85[4]];
						v77 = v77 + 1;
						v85 = v73[v77];
						v83[v85[809 - (134 + 673)]] = v83[v85[1060 - (810 + 247)]][v85[1464 - (753 + 707)]];
						v77 = v77 + 1;
						v85 = v73[v77];
						v83[v85[4 - 2]] = v62[v85[6 - 3]];
						v77 = v77 + 1;
						v85 = v73[v77];
						v83[v85[2]] = v83[v85[603 - (462 + 138)]][v85[4]];
						v77 = v77 + 1;
						v85 = v73[v77];
						v83[v85[2 + 0]] = v83[v85[1 + 2]][v85[13 - 9]];
						v77 = v77 + (661 - (642 + 18));
						v85 = v73[v77];
						v83[v85[980 - (155 + 823)]] = v83[v85[3 + 0]][v85[4]];
						v77 = v77 + 1;
						v85 = v73[v77];
						v83[v85[2 + 0]] = v83[v85[3 + 0]][v85[3 + 1]];
						v77 = v77 + (1454 - (799 + 654));
						v85 = v73[v77];
						v83[v85[3 - 1]][v85[10 - 7]] = v83[v85[4 - 0]];
						v77 = v77 + (634 - (527 + 106));
						v85 = v73[v77];
						v83[v85[3 - 1]] = v62[v85[3]];
						v77 = v77 + 1;
						v85 = v73[v77];
						v83[v85[2 - 0]] = v83[v85[1 + 2]][v85[4]];
						v77 = v77 + 1 + 0;
						v85 = v73[v77];
						v3402 = v85[2];
						v3401 = v83[v85[3 + 0]];
						v83[v3402 + 1] = v3401;
						v83[v3402] = v3401[v85[4]];
						v77 = v77 + 1 + 0;
						v85 = v73[v77];
						v83[v85[6 - 4]] = v62[v85[3 + 0]];
						v77 = v77 + 1;
						v85 = v73[v77];
						v83[v85[735 - (589 + 144)]] = v83[v85[3]][v85[3 + 1]];
						v77 = v77 + 1 + 0;
						v85 = v73[v77];
						v83[v85[2]] = v83[v85[531 - (179 + 349)]][v85[16 - 12]];
						v77 = v77 + (2 - 1);
						v85 = v73[v77];
						v83[v85[2 + 0]] = v83[v85[3]][v85[4]];
						v77 = v77 + 1;
						v85 = v73[v77];
						v3402 = v85[1 + 1];
						v83[v3402] = v83[v3402](v13(v83, v3402 + 1 + 0, v85[3]));
						v77 = v77 + 1;
						v85 = v73[v77];
						v83[v85[3 - 1]] = v83[v85[3]];
						v77 = v77 + 1 + 0;
						v85 = v73[v77];
						v83[v85[2]] = v85[10 - 7];
					end
				elseif (v86 <= (250 + 121)) then
					if (v86 <= (316 + 28)) then
						if (v86 <= (102 + 229)) then
							if (v86 <= 324) then
								if (v86 <= (807 - (242 + 244))) then
									if (v86 <= (726 - (303 + 104))) then
										local v718;
										v83[v85[6 - 4]] = v83[v85[3]][v83[v85[2 + 2]]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[646 - (411 + 232)]] + v85[4 + 0];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v83[v85[8 - 5]][v83[v85[4]]];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v718 = v85[2 + 0];
										v83[v718](v83[v718 + 1 + 0]);
										v77 = v77 + 1;
										v85 = v73[v77];
										v77 = v85[8 - 5];
									elseif (v86 == (801 - (164 + 317))) then
										local v3436;
										v83[v85[101 - (65 + 34)]] = v83[v85[7 - 4]][v85[3 + 1]];
										v77 = v77 + (319 - (61 + 257));
										v85 = v73[v77];
										v83[v85[1881 - (398 + 1481)]] = v85[5 - 2];
										v77 = v77 + (2 - 1);
										v85 = v73[v77];
										v83[v85[2 + 0]] = v63[v85[3]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v83[v85[688 - (338 + 348)]] = v83[v85[1381 - (401 + 977)]][v85[9 - 5]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2 + 0]] = v83[v85[48 - (17 + 28)]][v85[189 - (27 + 158)]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[5 - 3]] = v83[v85[1 + 2]][v85[2 + 2]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v3436 = v85[1295 - (372 + 921)];
										v83[v3436] = v83[v3436](v13(v83, v3436 + 1 + 0, v85[486 - (350 + 133)]));
										v77 = v77 + 1;
										v85 = v73[v77];
										v63[v85[3 + 0]] = v83[v85[1 + 1]];
									else
										local v3453;
										local v3454;
										v83[v85[1 + 1]] = v83[v85[1541 - (1432 + 106)]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[3]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v3454 = v85[2 - 0];
										v83[v3454] = v83[v3454]();
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2 + 0]] = {};
										v77 = v77 + (1447 - (1075 + 371));
										v85 = v73[v77];
										v83[v85[7 - 5]] = v83[v85[6 - 3]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v3454 = v85[6 - 4];
										v83[v3454] = v83[v3454](v13(v83, v3454 + 1 + 0, v85[3 + 0]));
										v77 = v77 + (1548 - (234 + 1313));
										v85 = v73[v77];
										v3454 = v85[3 - 1];
										v78 = (v3454 + v84) - (1 + 0);
										for v4693 = v3454, v78 do
											local v4694 = 0;
											while true do
												if ((405 <= 1021) and (v4694 == 0)) then
													v3453 = v79[v4693 - v3454];
													v83[v4693] = v3453;
													break;
												end
											end
										end
										v77 = v77 + (909 - (597 + 311));
										v85 = v73[v77];
										v3454 = v85[29 - (13 + 14)];
										do
											return v83[v3454](v13(v83, v3454 + 1, v78));
										end
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v3454 = v85[2];
										do
											return v13(v83, v3454, v78);
										end
										v77 = v77 + (1054 - (713 + 340));
										v85 = v73[v77];
										do
											return;
										end
									end
								elseif ((v86 <= 322) or (1359 < 73)) then
									local v727 = 0 - 0;
									local v728;
									while true do
										if ((4970 >= 2521) and (v727 == 0)) then
											v728 = v85[2];
											v83[v728] = v83[v728](v13(v83, v728 + 1 + 0, v85[3]));
											break;
										end
									end
								elseif (v86 == 323) then
									v83[v85[4 - 2]] = v83[v85[3 + 0]][v85[355 - (265 + 86)]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[874 - (747 + 124)]][v85[1460 - (692 + 764)]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[2 + 0]] = v83[v85[11 - 8]][v85[3 + 1]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[1033 - (283 + 747)]][v85[4 + 0]];
									v77 = v77 + (906 - (816 + 89));
									v85 = v73[v77];
									v63[v85[3]] = v83[v85[2]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v77 = v85[1 + 2];
								else
									local v3480;
									v83[v85[1080 - (709 + 369)]] = v85[11 - 8];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v3480 = v85[2];
									v83[v3480](v83[v3480 + (1 - 0)]);
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v63[v85[3 + 0]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[701 - (478 + 221)]] = v83[v85[775 - (607 + 165)]][v85[1248 - (1108 + 136)]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[2]] = v85[6 - 3];
									v77 = v77 + 1;
									v85 = v73[v77];
									v3480 = v85[5 - 3];
									v83[v3480](v83[v3480 + (637 - (352 + 284))]);
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[893 - (352 + 539)]] = v85[11 - 8];
									v77 = v77 + 1;
									v85 = v73[v77];
									v77 = v85[2 + 1];
								end
							elseif (v86 <= (296 + 31)) then
								if ((2637 == 2637) and (v86 <= (782 - 457))) then
									local v729 = 766 - (714 + 52);
									local v730;
									while true do
										if ((v729 == (3 + 0)) or (233 >= 4267)) then
											v85 = v73[v77];
											v730 = v85[2];
											v83[v730] = v83[v730](v13(v83, v730 + (1814 - (1482 + 331)), v85[1204 - (766 + 435)]));
											v729 = 2 + 2;
										end
										if (v729 == (1820 - (62 + 1757))) then
											v85 = v73[v77];
											v83[v85[1370 - (833 + 535)]] = v85[1 + 2];
											v77 = v77 + (139 - (5 + 133));
											v729 = 2;
										end
										if (v729 == (4 + 0)) then
											v77 = v77 + (521 - (393 + 127));
											v85 = v73[v77];
											if ((2405 >= 1194) and (v83[v85[1058 - (705 + 351)]] == v85[4])) then
												v77 = v77 + 1;
											else
												v77 = v85[3];
											end
											break;
										end
										if ((1 + 1) == v729) then
											v85 = v73[v77];
											v83[v85[1 + 1]] = v85[3];
											v77 = v77 + 1 + 0;
											v729 = 3;
										end
										if ((0 == v729) or (4463 <= 85)) then
											v730 = nil;
											v83[v85[1159 - (414 + 743)]] = v83[v85[3 + 0]];
											v77 = v77 + (473 - (65 + 407));
											v729 = 1 - 0;
										end
									end
								elseif (v86 > (667 - 341)) then
									v83[v85[9 - 7]] = v85[11 - 8] ^ v83[v85[1548 - (116 + 1428)]];
								else
									local v3495 = v85[8 - 6];
									local v3496 = v83[v3495];
									local v3497 = v85[1305 - (79 + 1223)];
									for v4709 = 1 + 0, v3497 do
										v3496[v4709] = v83[v3495 + v4709];
									end
								end
							elseif ((v86 <= (717 - (353 + 35))) or (9 == 2420)) then
								if (v86 > 328) then
									v83[v85[3 - 1]] = v83[v85[7 - 4]] * v85[4];
								else
									local v3499 = v85[1942 - (490 + 1450)];
									local v3500 = {v83[v3499](v13(v83, v3499 + 1 + 0, v85[1297 - (914 + 380)]))};
									local v3501 = 0 + 0;
									for v4712 = v3499, v85[4] do
										v3501 = v3501 + (533 - (126 + 406));
										v83[v4712] = v3500[v3501];
									end
								end
							elseif (v86 == (1520 - (655 + 535))) then
								local v3502;
								local v3503;
								local v3504;
								v83[v85[1 + 1]] = v62[v85[8 - 5]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v3504 = v85[4 - 2];
								v83[v3504] = v83[v3504]();
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1300 - (711 + 587)]] = v62[v85[886 - (168 + 715)]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v3504 = v85[2 + 0];
								v83[v3504] = v83[v3504]();
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								for v4715 = v85[294 - (232 + 60)], v85[3] do
									v83[v4715] = nil;
								end
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v3504 = v85[2];
								v3503 = v83[v3504];
								v3502 = v85[3];
								for v4717 = 38 - (22 + 15), v3502 do
									v3503[v4717] = v83[v3504 + v4717];
								end
							else
								local v3515;
								v83[v85[2]] = v83[v85[3]][v85[8 - 4]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v85[3];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[1175 - (797 + 376)]] = v63[v85[3 + 0]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[12 - 9]][v85[3 + 1]];
								v77 = v77 + (4 - 3);
								v85 = v73[v77];
								v83[v85[5 - 3]] = v83[v85[10 - 7]][v85[1381 - (1071 + 306)]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[1193 - (412 + 779)]] = v83[v85[3]][v85[4]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v3515 = v85[3 - 1];
								v83[v3515] = v83[v3515](v13(v83, v3515 + (2 - 1), v85[615 - (427 + 185)]));
								v77 = v77 + 1;
								v85 = v73[v77];
								v63[v85[3]] = v83[v85[1653 - (1444 + 207)]];
							end
						elseif (v86 <= (880 - 543)) then
							if (v86 <= (17 + 317)) then
								if (v86 <= (784 - 452)) then
									local v731;
									local v732;
									local v733, v734;
									local v735;
									v83[v85[2 - 0]] = {};
									v77 = v77 + (640 - (261 + 378));
									v85 = v73[v77];
									v83[v85[1 + 1]] = v83[v85[1 + 2]][v83[v85[4]]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[3 - 1]] = v62[v85[3]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[350 - (22 + 326)]] = v83[v85[9 - 6]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1216 - (836 + 378)]] = v83[v85[2 + 1]] + v85[10 - 6];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[6 - 4]] = v62[v85[1 + 2]];
									v77 = v77 + (1288 - (742 + 545));
									v85 = v73[v77];
									v735 = v85[4 - 2];
									v733, v734 = v76(v83[v735](v13(v83, v735 + 1, v85[3])));
									v78 = (v734 + v735) - (3 - 2);
									v732 = 1201 - (334 + 867);
									for v917 = v735, v78 do
										v732 = v732 + (2 - 1);
										v83[v917] = v733[v732];
									end
									v77 = v77 + (1405 - (317 + 1087));
									v85 = v73[v77];
									v735 = v85[1 + 1];
									v733, v734 = v76(v83[v735](v13(v83, v735 + (1 - 0), v78)));
									v78 = (v734 + v735) - (671 - (97 + 573));
									v732 = 0 - 0;
									for v920 = v735, v78 do
										v732 = v732 + 1 + 0;
										v83[v920] = v733[v732];
									end
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v735 = v85[2];
									v731 = v83[v735];
									for v923 = v735 + (2 - 1), v78 do
										v7(v731, v83[v923]);
									end
								elseif (v86 == 333) then
									local v3532 = 0;
									local v3533;
									while true do
										if (v3532 == (4 + 1)) then
											v3533 = v85[1337 - (1234 + 101)];
											do
												return v13(v83, v3533, v78);
											end
											v77 = v77 + (1 - 0);
											v85 = v73[v77];
											v3532 = 4 + 2;
										end
										if (v3532 == (4 - 3)) then
											v83[v85[4 - 2]] = v83[v85[1203 - (711 + 489)]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[2 + 0]] = v83[v85[3]];
											v3532 = 7 - 5;
										end
										if (v3532 == 6) then
											v77 = v85[3 + 0];
											break;
										end
										if ((0 - 0) == v3532) then
											v3533 = nil;
											v83[v85[4 - 2]] = v62[v85[645 - (483 + 159)]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v3532 = 1 + 0;
										end
										if ((1916 > 682) and ((321 - (200 + 117)) == v3532)) then
											v3533 = v85[49 - (5 + 42)];
											do
												return v83[v3533](v13(v83, v3533 + (3 - 2), v85[3]));
											end
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v3532 = 5;
										end
										if ((v3532 == (14 - 11)) or (4390 == 372)) then
											v85 = v73[v77];
											v83[v85[538 - (298 + 238)]] = v83[v85[1824 - (1370 + 451)]] + v83[v85[3 + 1]];
											v77 = v77 + 1;
											v85 = v73[v77];
											v3532 = 1265 - (493 + 768);
										end
										if (2 == v3532) then
											v77 = v77 + (1178 - (622 + 555));
											v85 = v73[v77];
											v83[v85[621 - (581 + 38)]] = v83[v85[3]][v85[3 + 1]];
											v77 = v77 + (2 - 1);
											v3532 = 13 - 10;
										end
									end
								else
									local v3534 = 0;
									local v3535;
									while true do
										if ((1926 - (567 + 1355)) == v3534) then
											v83[v85[1566 - (801 + 763)]] = v83[v85[1 + 2]][v85[408 - (251 + 153)]];
											v77 = v77 + (903 - (709 + 193));
											v85 = v73[v77];
											v3535 = v85[1889 - (737 + 1150)];
											v3534 = 3 + 2;
										end
										if (v3534 == (1032 - (755 + 277))) then
											v3535 = nil;
											v83[v85[463 - (182 + 279)]] = v83[v85[363 - (323 + 37)]][v85[6 - 2]];
											v77 = v77 + 1 + 0;
											v85 = v73[v77];
											v3534 = 1016 - (992 + 23);
										end
										if (v3534 == (2 + 1)) then
											v85 = v73[v77];
											v83[v85[5 - 3]] = v83[v85[648 - (269 + 376)]][v85[8 - 4]];
											v77 = v77 + (472 - (169 + 302));
											v85 = v73[v77];
											v3534 = 3 + 1;
										end
										if (v3534 == (1 + 1)) then
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[1329 - (623 + 704)]] = v83[v85[2 + 1]][v85[821 - (420 + 397)]];
											v77 = v77 + 1 + 0;
											v3534 = 1 + 2;
										end
										if (v3534 == 1) then
											v83[v85[2]] = v85[1 + 2];
											v77 = v77 + 1;
											v85 = v73[v77];
											v83[v85[5 - 3]] = v63[v85[13 - 10]];
											v3534 = 7 - 5;
										end
										if ((v3534 == (3 + 2)) or (2075 <= 876)) then
											v83[v3535] = v83[v3535](v13(v83, v3535 + 1 + 0, v85[8 - 5]));
											v77 = v77 + 1;
											v85 = v73[v77];
											v63[v85[3]] = v83[v85[4 - 2]];
											break;
										end
									end
								end
							elseif (v86 <= (973 - 638)) then
								local v751;
								local v752;
								v83[v85[4 - 2]] = v85[1061 - (440 + 618)];
								v77 = v77 + (1036 - (593 + 442));
								v85 = v73[v77];
								v752 = v85[1 + 1];
								v83[v752](v83[v752 + (1 - 0)]);
								v77 = v77 + 1;
								v85 = v73[v77];
								v752 = v85[1046 - (801 + 243)];
								v751 = v83[v85[8 - 5]];
								v83[v752 + (1 - 0)] = v751;
								v83[v752] = v751[v85[8 - 4]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v752 = v85[124 - (41 + 81)];
								v83[v752](v83[v752 + (3 - 2)]);
								v77 = v77 + (507 - (145 + 361));
								v85 = v73[v77];
								v77 = v85[3];
							elseif (v86 > (280 + 56)) then
								local v3536 = 0;
								local v3537;
								local v3538;
								while true do
									if (v3536 == (3 - 1)) then
										v77 = v77 + (157 - (28 + 128));
										v85 = v73[v77];
										v83[v85[3 - 1]][v85[4 - 1]] = v83[v85[2 + 2]];
										v3536 = 88 - (33 + 52);
									end
									if (v3536 == (4 - 1)) then
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v3538 = v85[2];
										v3536 = 19 - 15;
									end
									if (v3536 == (3 - 2)) then
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[2 + 0]] = v83[v85[1349 - (1135 + 211)]][v85[4 + 0]];
										v3536 = 7 - 5;
									end
									if (v3536 == (3 + 3)) then
										v77 = v77 + 1;
										v85 = v73[v77];
										v3538 = v85[1097 - (380 + 715)];
										v3536 = 1 + 6;
									end
									if (v3536 == (1976 - (462 + 1506))) then
										v83[v85[1824 - (1182 + 640)]] = v85[7 - 4];
										break;
									end
									if (v3536 == (23 - 16)) then
										v83[v3538](v13(v83, v3538 + 1 + 0, v85[3]));
										v77 = v77 + (4 - 3);
										v85 = v73[v77];
										v3536 = 3 + 5;
									end
									if (v3536 == (347 - (323 + 20))) then
										v3537 = v83[v85[6 - 3]];
										v83[v3538 + 1 + 0] = v3537;
										v83[v3538] = v3537[v85[3 + 1]];
										v3536 = 11 - 6;
									end
									if (v3536 == (1179 - (769 + 405))) then
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[7 - 5]] = v85[88 - (9 + 76)];
										v3536 = 260 - (244 + 10);
									end
									if ((v3536 == (0 + 0)) or (936 > 3720)) then
										v3537 = nil;
										v3538 = nil;
										v83[v85[1307 - (601 + 704)]] = v83[v85[3]][v85[2 + 2]];
										v3536 = 523 - (23 + 499);
									end
								end
							else
								v83[v85[2]] = v83[v85[1 + 2]][v85[4 + 0]];
								v77 = v77 + (307 - (35 + 271));
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[4 - 1]][v85[5 - 1]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[12 - 9]][v85[1 + 3]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[6 - 4]] = v83[v85[1 + 2]][v85[4]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v63[v85[8 - 5]] = v83[v85[2]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v77 = v85[3];
							end
						elseif (v86 <= (982 - 642)) then
							if (v86 <= 338) then
								v83[v85[1877 - (1136 + 739)]] = v83[v85[11 - 8]][v83[v85[7 - 3]]];
								v77 = v77 + (575 - (125 + 449));
								v85 = v73[v77];
								v83[v85[4 - 2]] = v83[v85[882 - (96 + 783)]][v85[4]];
								v77 = v77 + (1029 - (888 + 140));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[65 - (41 + 21)]][v85[591 - (570 + 17)]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[3]][v83[v85[2 + 2]]];
								v77 = v77 + 1;
								v85 = v73[v77];
								do
									return v83[v85[4 - 2]];
								end
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v77 = v85[11 - 8];
							elseif (v86 > (894 - 555)) then
								v83[v85[2]] = v85[3] ^ v83[v85[4 + 0]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[757 - (321 + 434)]] = v83[v85[3]] / v83[v85[11 - 7]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[1289 - (137 + 1149)]] - v85[4];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3]] - v85[8 - 4];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1825 - (566 + 1257)]] = v83[v85[680 - (391 + 286)]] - v83[v85[4]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1376 - (384 + 990)]] = v83[v85[3]] + v85[617 - (505 + 108)];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v85[3] ^ v83[v85[1301 - (549 + 748)]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3 + 0]] % v83[v85[4]];
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[3 + 0]] % v85[10 - 6];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[4 - 2]] = v83[v85[2 + 1]] - v83[v85[4 + 0]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								do
									return v83[v85[4 - 2]];
								end
								v77 = v77 + (693 - (205 + 487));
								v85 = v73[v77];
								v77 = v85[8 - 5];
							else
								local v3557;
								v83[v85[1 + 1]] = v85[2 + 1];
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v83[v85[1428 - (309 + 1117)]] = v83[v85[3]][v83[v85[3 + 1]]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2]] = v85[3 + 0];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[78 - (50 + 26)]] = v63[v85[2 + 1]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[3 + 0]][v85[1822 - (520 + 1298)]];
								v77 = v77 + (1061 - (420 + 640));
								v85 = v73[v77];
								v83[v85[3 - 1]] = v85[4 - 1];
								v77 = v77 + (1583 - (15 + 1567));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[1 + 2];
								v77 = v77 + (1985 - (110 + 1874));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[3];
								v77 = v77 + (783 - (101 + 681));
								v85 = v73[v77];
								v3557 = v85[2 + 0];
								v83[v3557] = v83[v3557](v13(v83, v3557 + (2 - 1), v85[546 - (120 + 423)]));
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2 + 0]][v83[v85[3]]] = v83[v85[1 + 3]];
							end
						elseif (v86 <= 342) then
							if (v86 == 341) then
								v83[v85[2 + 0]] = v83[v85[2 + 1]] + v83[v85[10 - 6]];
							else
								local v3578;
								v83[v85[2]] = v62[v85[3]];
								v77 = v77 + (46 - (41 + 4));
								v85 = v73[v77];
								v83[v85[1085 - (246 + 837)]] = v83[v85[3]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v85[909 - (492 + 414)];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v3578 = v85[4 - 2];
								v83[v3578] = v83[v3578](v13(v83, v3578 + 1, v85[1052 - (829 + 220)]));
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								if (v83[v85[2 + 0]] == v85[13 - 9]) then
									v77 = v77 + 1;
								else
									v77 = v85[5 - 2];
								end
							end
						elseif (v86 == 343) then
							v83[v85[3 - 1]] = v83[v85[3]] / v85[1499 - (345 + 1150)];
						else
							v83[v85[1359 - (1017 + 340)]] = v63[v85[2 + 1]];
							v77 = v77 + (3 - 2);
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[2 + 1]][v85[3 + 1]];
							v77 = v77 + (1840 - (1279 + 560));
							v85 = v73[v77];
							v83[v85[2 - 0]] = v83[v85[1 + 2]][v85[9 - 5]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2]] = v63[v85[1466 - (140 + 1323)]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[3]][v85[1992 - (1607 + 381)]];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[5 - 3]] = v83[v85[3]][v85[198 - (162 + 32)]];
						end
					elseif ((v86 <= 357) or (508 > 4566)) then
						if (v86 <= 350) then
							if (v86 <= 347) then
								if (v86 <= 345) then
									v83[v85[2]] = v83[v85[607 - (440 + 164)]][v83[v85[8 - 4]]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[3 - 1]] = v83[v85[4 - 1]][v85[960 - (553 + 403)]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[3 - 1]] = v83[v85[344 - (111 + 230)]][v85[5 - 1]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[8 - 6]][v83[v85[1 + 2]]] = v83[v85[4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v77 = v85[341 - (85 + 253)];
								elseif (v86 > (2195 - (1558 + 291))) then
									local v3599 = v85[1 + 1];
									local v3600 = v83[v85[7 - 4]];
									v83[v3599 + 1] = v3600;
									v83[v3599] = v3600[v83[v85[5 - 1]]];
								else
									local v3604 = 1082 - (985 + 97);
									local v3605;
									while true do
										if (v3604 == (4 - 2)) then
											v85 = v73[v77];
											v83[v85[615 - (424 + 189)]] = v63[v85[3 + 0]];
											v77 = v77 + (1024 - (19 + 1004));
											v3604 = 3 + 0;
										end
										if (v3604 == (1 + 0)) then
											v85 = v73[v77];
											v83[v85[1 + 1]] = v85[3 + 0];
											v77 = v77 + 1;
											v3604 = 1347 - (231 + 1114);
										end
										if (v3604 == (3 + 3)) then
											v85 = v73[v77];
											v3605 = v85[1047 - (114 + 931)];
											v83[v3605] = v83[v3605](v13(v83, v3605 + 1, v85[3 + 0]));
											v3604 = 9 - 2;
										end
										if ((0 + 0) == v3604) then
											v3605 = nil;
											v83[v85[2]] = v83[v85[1 + 2]][v85[67 - (17 + 46)]];
											v77 = v77 + 1 + 0;
											v3604 = 2 - 1;
										end
										if (((1041 - (931 + 105)) == v3604) or (2522 > 4316)) then
											v85 = v73[v77];
											v83[v85[1130 - (718 + 410)]] = v83[v85[1208 - (361 + 844)]][v85[1914 - (1760 + 150)]];
											v77 = v77 + (1568 - (917 + 650));
											v3604 = 6;
										end
										if (v3604 == 7) then
											v77 = v77 + (182 - (104 + 77));
											v85 = v73[v77];
											v63[v85[7 - 4]] = v83[v85[1 + 1]];
											break;
										end
										if (v3604 == (3 - 0)) then
											v85 = v73[v77];
											v83[v85[3 - 1]] = v83[v85[267 - (53 + 211)]][v85[4]];
											v77 = v77 + 1 + 0;
											v3604 = 9 - 5;
										end
										if ((1415 >= 958) and ((3 + 1) == v3604)) then
											v85 = v73[v77];
											v83[v85[2]] = v83[v85[10 - 7]][v85[1304 - (282 + 1018)]];
											v77 = v77 + 1;
											v3604 = 5 + 0;
										end
									end
								end
							elseif (v86 <= (862 - (162 + 352))) then
								local v783 = 0 + 0;
								local v784;
								local v785;
								local v786;
								while true do
									if (v783 == (933 - (22 + 907))) then
										v784 = 439 - (280 + 159);
										for v4845 = v786, v85[1584 - (1064 + 516)] do
											v784 = v784 + (2 - 1);
											v83[v4845] = v785[v784];
										end
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[2 + 0]] = v62[v85[3 + 0]];
										v783 = 1 + 4;
									end
									if (v783 == 5) then
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1907 - (1293 + 612)]] = v83[v85[3]] + v85[3 + 1];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v783 = 22 - 16;
									end
									if (v783 == (0 + 0)) then
										v784 = nil;
										v785 = nil;
										v786 = nil;
										v83[v85[2]] = v62[v85[1754 - (782 + 969)]];
										v77 = v77 + (2 - 1);
										v783 = 1669 - (1085 + 583);
									end
									if (v783 == (4 + 4)) then
										v77 = v77 + 1;
										v85 = v73[v77];
										do
											return;
										end
										break;
									end
									if (v783 == 7) then
										v85 = v73[v77];
										v83[v85[1462 - (229 + 1231)]] = v83[v85[8 - 5]] + v83[v85[11 - 7]];
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										do
											return v83[v85[1 + 1]];
										end
										v783 = 153 - (48 + 97);
									end
									if (v783 == (1849 - (676 + 1170))) then
										v83[v85[1974 - (830 + 1142)]] = v83[v85[98 - (41 + 54)]] + v85[16 - 12];
										v77 = v77 + (1067 - (536 + 530));
										v85 = v73[v77];
										v786 = v85[3 - 1];
										v785 = {v83[v786](v13(v83, v786 + (3 - 2), v85[1258 - (1129 + 126)]))};
										v783 = 4;
									end
									if ((v783 == (2 + 0)) or (843 == 1572)) then
										v77 = v77 + (453 - (282 + 170));
										v85 = v73[v77];
										v83[v85[2 + 0]] = v62[v85[3 + 0]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v783 = 14 - 11;
									end
									if (v783 == (1229 - (610 + 613))) then
										v62[v85[8 - 5]] = v83[v85[2]];
										v77 = v77 + (1609 - (1182 + 426));
										v85 = v73[v77];
										v83[v85[1 + 1]] = v83[v85[2 + 1]] * v85[1238 - (1210 + 24)];
										v77 = v77 + 1 + 0;
										v783 = 2 + 5;
									end
									if ((1358 - (307 + 1050)) == v783) then
										v85 = v73[v77];
										v83[v85[816 - (693 + 121)]] = v62[v85[3]];
										v77 = v77 + (285 - (267 + 17));
										v85 = v73[v77];
										v83[v85[61 - (22 + 37)]] = v62[v85[5 - 2]];
										v783 = 2;
									end
								end
							elseif (v86 > (158 + 191)) then
								v83[v85[1449 - (391 + 1056)]] = v83[v85[2 + 1]][v83[v85[1580 - (1117 + 459)]]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3]][v85[4 + 0]];
								v77 = v77 + (462 - (65 + 396));
								v85 = v73[v77];
								v83[v85[4 - 2]] = v83[v85[10 - 7]][v85[3 + 1]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1703 - (620 + 1081)]] = v83[v85[3]][v83[v85[4]]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1882 - (845 + 1035)]][v83[v85[5 - 2]]] = v83[v85[4]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v77 = v85[1572 - (1348 + 221)];
							else
								local v3618 = 1041 - (320 + 721);
								local v3619;
								local v3620;
								local v3621;
								while true do
									if ((v3618 == (1958 - (1284 + 673))) or (3268 < 1683)) then
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[4 - 2]] = v85[3 + 0];
										v77 = v77 + 1 + 0;
										v3618 = 5 - 3;
									end
									if (v3618 == (1 + 1)) then
										v85 = v73[v77];
										v83[v85[4 - 2]] = #v83[v85[8 - 5]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v3618 = 10 - 7;
									end
									if (v3618 == (9 - 5)) then
										v3620 = v83[v3621];
										v3619 = v83[v3621 + (7 - 5)];
										if ((v3619 > (0 - 0)) or (2226 >= 2929)) then
											if (v3620 > v83[v3621 + (362 - (170 + 191))]) then
												v77 = v85[1745 - (209 + 1533)];
											else
												v83[v3621 + 3] = v3620;
											end
										elseif (v3620 < v83[v3621 + 1]) then
											v77 = v85[4 - 1];
										else
											v83[v3621 + (1419 - (1049 + 367))] = v3620;
										end
										break;
									end
									if ((2607 == 2607) and (v3618 == (0 - 0))) then
										v3619 = nil;
										v3620 = nil;
										v3621 = nil;
										v83[v85[6 - 4]] = v83[v85[8 - 5]];
										v3618 = 1 + 0;
									end
									if (v3618 == (7 - 4)) then
										v83[v85[3 - 1]] = v85[1 + 2];
										v77 = v77 + (224 - (167 + 56));
										v85 = v73[v77];
										v3621 = v85[5 - 3];
										v3618 = 2 + 2;
									end
								end
							end
						elseif ((54 <= 3260) and (v86 <= (64 + 289))) then
							if (v86 <= 351) then
								local v787;
								v83[v85[2 - 0]] = v85[3 + 0];
								v77 = v77 + (881 - (752 + 128));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[1 + 2];
								v77 = v77 + (19 - (7 + 11));
								v85 = v73[v77];
								v787 = v85[2 + 0];
								v83[v787](v13(v83, v787 + (132 - (87 + 44)), v85[7 - 4]));
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v83[v85[7 - 5]] = v62[v85[1538 - (656 + 879)]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v85[3];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v787 = v85[1 + 1];
								v83[v787](v83[v787 + (2 - 1)]);
								v77 = v77 + (4 - 3);
								v85 = v73[v77];
								v83[v85[1084 - (529 + 553)]] = v85[3 + 0];
							elseif (v86 > (1289 - (613 + 324))) then
								local v3622 = v85[1322 - (585 + 735)];
								local v3623 = v83[v85[3]];
								v83[v3622 + 1] = v3623;
								v83[v3622] = v3623[v85[4]];
							else
								local v3627 = 0 - 0;
								local v3628;
								while true do
									if (v3627 == (6 - 3)) then
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[5 - 3]] = v63[v85[3]];
										v77 = v77 + (2 - 1);
										v3627 = 19 - (6 + 9);
									end
									if ((18 - 13) == v3627) then
										v83[v85[5 - 3]] = v85[8 - 5];
										break;
									end
									if (1 == v3627) then
										v83[v85[5 - 3]] = v85[463 - (59 + 401)];
										v77 = v77 + 1;
										v85 = v73[v77];
										v3628 = v85[791 - (743 + 46)];
										v3627 = 2 + 0;
									end
									if ((2218 >= 420) and (v3627 == (3 - 1))) then
										v83[v3628] = v83[v3628](v83[v3628 + 1]);
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v63[v85[3]] = v83[v85[2]];
										v3627 = 3;
									end
									if (v3627 == (3 + 1)) then
										v85 = v73[v77];
										v83[v85[539 - (285 + 252)]][v85[3]] = v85[4];
										v77 = v77 + (476 - (146 + 329));
										v85 = v73[v77];
										v3627 = 3 + 2;
									end
									if (v3627 == 0) then
										v3628 = nil;
										v83[v85[2 + 0]] = v83[v85[1473 - (417 + 1053)]][v85[1876 - (1251 + 621)]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v3627 = 1 + 0;
									end
								end
							end
						elseif ((661 <= 3423) and (v86 <= 355)) then
							if ((v86 == (1556 - 1202)) or (452 > 2626)) then
								local v3629;
								local v3630;
								v3630 = v85[2];
								v3629 = v83[v85[3]];
								v83[v3630 + (237 - (213 + 23))] = v3629;
								v83[v3630] = v3629[v85[748 - (617 + 127)]];
								v77 = v77 + (693 - (181 + 511));
								v85 = v73[v77];
								v83[v85[2]] = v85[383 - (187 + 193)];
								v77 = v77 + (1290 - (107 + 1182));
								v85 = v73[v77];
								v3630 = v85[1986 - (1623 + 361)];
								v83[v3630] = v83[v3630](v13(v83, v3630 + 1 + 0, v85[1824 - (325 + 1496)]));
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[358 - (235 + 121)]] = v83[v85[3 + 0]][v85[9 - 5]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v3630 = v85[7 - 5];
								v3629 = v83[v85[3]];
								v83[v3630 + (2 - 1)] = v3629;
								v83[v3630] = v3629[v85[53 - (28 + 21)]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v3630 = v85[4 - 2];
								v83[v3630](v83[v3630 + 1]);
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v62[v85[690 - (630 + 57)]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3]][v85[3 + 1]];
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v3630 = v85[1 + 1];
								v3629 = v83[v85[3 + 0]];
								v83[v3630 + (889 - (21 + 867))] = v3629;
								v83[v3630] = v3629[v85[13 - 9]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v85[3];
								v77 = v77 + (1768 - (1555 + 212));
								v85 = v73[v77];
								v3630 = v85[2];
								v83[v3630] = v83[v3630](v13(v83, v3630 + 1, v85[3 + 0]));
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								if v83[v85[2 + 0]] then
									v77 = v77 + 1 + 0;
								else
									v77 = v85[3 + 0];
								end
							else
								local v3653;
								local v3654, v3655;
								local v3656;
								local v3657;
								v83[v85[1 + 1]] = v85[8 - 5];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v3657 = v85[2 - 0];
								v78 = (v3657 + v84) - 1;
								for v4745 = v3657, v78 do
									local v4746 = 0 - 0;
									while true do
										if (v4746 == (0 - 0)) then
											v3656 = v79[v4745 - v3657];
											v83[v4745] = v3656;
											break;
										end
									end
								end
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v3657 = v85[1 + 1];
								v3654, v3655 = v76(v83[v3657](v13(v83, v3657 + (2 - 1), v78)));
								v78 = (v3655 + v3657) - (1 + 0);
								v3653 = 0;
								for v4747 = v3657, v78 do
									v3653 = v3653 + 1;
									v83[v4747] = v3654[v3653];
								end
								v77 = v77 + 1;
								v85 = v73[v77];
								v3657 = v85[2 + 0];
								do
									return v13(v83, v3657, v78);
								end
								v77 = v77 + 1;
								v85 = v73[v77];
								do
									return;
								end
							end
						elseif (v86 > 356) then
							local v3664;
							v83[v85[943 - (903 + 38)]] = v85[389 - (74 + 312)];
							v77 = v77 + 1;
							v85 = v73[v77];
							v3664 = v85[2];
							v83[v3664](v83[v3664 + (1321 - (837 + 483))]);
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2 - 0]] = v63[v85[3]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2 + 0]] = v83[v85[3]][v85[4]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2]] = v85[2 + 1];
							v77 = v77 + (1542 - (1455 + 86));
							v85 = v73[v77];
							v3664 = v85[826 - (803 + 21)];
							v83[v3664](v83[v3664 + (1 - 0)]);
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v83[v85[2 - 0]] = v85[1 + 2];
						else
							v83[v85[2 + 0]][v85[1 + 2]] = v85[4];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[4 - 2]] = v63[v85[3]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2 + 0]][v85[7 - 4]] = v85[3 + 1];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[901 - (497 + 402)]] = v63[v85[991 - (578 + 410)]];
							v77 = v77 + (3 - 2);
							v85 = v73[v77];
							v83[v85[1545 - (464 + 1079)]] = v83[v85[3 + 0]][v85[1700 - (1398 + 298)]];
						end
					elseif (v86 <= (555 - 191)) then
						if (v86 <= (333 + 27)) then
							if (v86 <= 358) then
								v83[v85[2]] = v83[v85[3 - 0]][v85[1 + 3]];
								v77 = v77 + (1291 - (561 + 729));
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[3]][v85[8 - 4]];
								v77 = v77 + (1160 - (104 + 1055));
								v85 = v73[v77];
								v83[v85[1675 - (308 + 1365)]] = v83[v85[550 - (500 + 47)]][v85[4]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[3]][v85[1954 - (186 + 1764)]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v63[v85[2 + 1]] = v83[v85[4 - 2]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v77 = v85[2 + 1];
							elseif (v86 == (170 + 189)) then
								v83[v85[2]] = v83[v85[2 + 1]][v85[1178 - (1133 + 41)]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[3 - 1]] = v83[v85[1896 - (1786 + 107)]][v83[v85[8 - 4]]];
								v77 = v77 + (1530 - (344 + 1185));
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[1 + 2]][v85[4]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[697 - (72 + 623)]] = v83[v85[7 - 4]][v83[v85[4 + 0]]];
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v83[v85[1894 - (1093 + 799)]][v83[v85[2 + 1]]] = v83[v85[4 + 0]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v77 = v85[11 - 8];
							else
								v83[v85[1057 - (721 + 334)]] = #v83[v85[1865 - (1322 + 540)]];
							end
						elseif (v86 <= (293 + 69)) then
							if (v86 > (1733 - (575 + 797))) then
								local v3700;
								v83[v85[1131 - (274 + 855)]] = v83[v85[6 - 3]][v83[v85[4]]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v85[4 - 1];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[1812 - (986 + 823)]][v83[v85[3 + 1]]];
								v77 = v77 + (1014 - (872 + 141));
								v85 = v73[v77];
								v83[v85[1 + 1]] = v85[10 - 7];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[540 - (139 + 399)]][v85[3 + 0]] = v83[v85[3 + 1]];
								v77 = v77 + (1703 - (1038 + 664));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[3];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[3]][v83[v85[4 - 0]]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2]] = v85[3 + 0];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[7 - 4]][v83[v85[578 - (388 + 186)]]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[488 - (421 + 65)]] = v85[5 - 2];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v63[v85[1266 - (604 + 659)]];
								v77 = v77 + (1505 - (1267 + 237));
								v85 = v73[v77];
								v83[v85[183 - (112 + 69)]] = v83[v85[4 - 1]][v85[488 - (319 + 165)]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v85[1356 - (634 + 719)];
								v77 = v77 + (1040 - (248 + 791));
								v85 = v73[v77];
								v83[v85[1 + 1]] = v85[3 + 0];
								v77 = v77 + (1086 - (888 + 197));
								v85 = v73[v77];
								v83[v85[2]] = v85[11 - 8];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2]] = v85[11 - 8];
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v3700 = v85[2];
								v83[v3700] = v83[v3700](v13(v83, v3700 + 1 + 0, v85[1 + 2]));
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v83[v85[4 - 2]][v83[v85[4 - 1]]] = v83[v85[4]];
								v77 = v77 + (1967 - (1355 + 611));
								v85 = v73[v77];
								v83[v85[1 + 1]] = v85[3];
								v77 = v77 + (1002 - (497 + 504));
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3 - 0]][v83[v85[2 + 2]]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[9 - 6];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[1259 - (1159 + 98)]] = v83[v85[1446 - (418 + 1025)]][v83[v85[4]]];
								v77 = v77 + (4 - 3);
								v85 = v73[v77];
								v83[v85[4 - 2]] = v85[3];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1795 - (297 + 1496)]][v85[5 - 2]] = v83[v85[947 - (547 + 396)]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2]] = v85[2 + 1];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[1745 - (999 + 744)]] = v83[v85[2 + 1]][v83[v85[4]]];
								v77 = v77 + (501 - (324 + 176));
								v85 = v73[v77];
								v83[v85[1512 - (1171 + 339)]] = v85[3];
								v77 = v77 + (948 - (492 + 455));
								v85 = v73[v77];
								v83[v85[1478 - (805 + 671)]] = v83[v85[1316 - (265 + 1048)]][v83[v85[1580 - (252 + 1324)]]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[1573 - (544 + 1026)];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[3 - 1]] = v85[3] ~= (662 - (217 + 445));
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[942 - (492 + 448)]][v83[v85[1435 - (1152 + 280)]]] = v83[v85[5 - 1]];
								v77 = v77 + (4 - 3);
								v85 = v73[v77];
								v83[v85[2]] = v85[3 + 0];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[848 - (175 + 670)]][v83[v85[1 + 3]]];
								v77 = v77 + (1654 - (1411 + 242));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[696 - (678 + 15)];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[813 - (593 + 217)]][v83[v85[4]]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[3];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2]] = v85[493 - (112 + 378)];
								v77 = v77 + (1548 - (952 + 595));
								v85 = v73[v77];
								v83[v85[2]][v83[v85[399 - (23 + 373)]]] = v83[v85[8 - 4]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[3];
								v77 = v77 + (1785 - (1102 + 682));
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[1 + 2]][v83[v85[1387 - (118 + 1265)]]];
								v77 = v77 + (1100 - (725 + 374));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[3];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[2001 - (1142 + 856)]][v83[v85[4]]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 - 0]] = v85[3 + 0];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v63[v85[647 - (104 + 540)]];
								v77 = v77 + (963 - (496 + 466));
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[3]][v85[1 + 3]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[726 - (657 + 67)]] = v85[3];
								v77 = v77 + (4 - 3);
								v85 = v73[v77];
								v83[v85[1748 - (127 + 1619)]] = v85[10 - 7];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v85[1193 - (1069 + 121)];
								v77 = v77 + 1;
								v85 = v73[v77];
								v3700 = v85[2];
								v83[v3700] = v83[v3700](v13(v83, v3700 + 1 + 0, v85[3 + 0]));
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[7 - 5]][v83[v85[7 - 4]]] = v83[v85[1194 - (27 + 1163)]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[1161 - (371 + 788)]] = v85[3];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[4 - 2]] = v83[v85[2 + 1]][v83[v85[14 - 10]]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v85[8 - 5];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[432 - (139 + 290)]][v83[v85[1339 - (639 + 696)]]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2]] = v85[3];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2]] = v63[v85[3 + 0]];
								v77 = v77 + (505 - (156 + 348));
								v85 = v73[v77];
								v83[v85[892 - (488 + 402)]] = v83[v85[3]][v85[206 - (186 + 16)]];
								v77 = v77 + (324 - (119 + 204));
								v85 = v73[v77];
								v83[v85[3 - 1]] = v85[4 - 1];
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[7 - 4];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v85[1762 - (1709 + 50)];
								v77 = v77 + (1330 - (249 + 1080));
								v85 = v73[v77];
								v3700 = v85[2 + 0];
								v83[v3700] = v83[v3700](v13(v83, v3700 + 1, v85[454 - (155 + 296)]));
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 + 0]][v83[v85[3 + 0]]] = v83[v85[4]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2]] = v85[4 - 1];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[3]][v83[v85[12 - 8]]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v85[1 + 2];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[2 + 1]][v83[v85[11 - 7]]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[700 - (604 + 94)]] = v85[1 + 2];
								v77 = v77 + (1804 - (500 + 1303));
								v85 = v73[v77];
								v83[v85[1522 - (916 + 604)]] = v63[v85[1 + 2]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[11 - 8]][v85[3 + 1]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[1478 - (754 + 721)];
								v77 = v77 + (507 - (181 + 325));
								v85 = v73[v77];
								v83[v85[3 - 1]] = v85[1 + 2];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1412 - (413 + 997)]] = v85[3];
								v77 = v77 + 1;
								v85 = v73[v77];
								v3700 = v85[4 - 2];
								v83[v3700] = v83[v3700](v13(v83, v3700 + (1 - 0), v85[3 + 0]));
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1 + 1]][v83[v85[3]]] = v83[v85[12 - 8]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[4 - 2]] = v85[1744 - (708 + 1033)];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[3]][v83[v85[3 + 1]]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[1 + 1]] = v85[6 - 3];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[1660 - (505 + 1152)]][v83[v85[4 + 0]]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v85[3 + 0];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[7 - 5]] = v63[v85[5 - 2]];
							else
								v83[v85[1525 - (53 + 1470)]] = v85[1007 - (482 + 522)] ~= 0;
							end
						elseif (v86 > (1009 - (496 + 150))) then
							local v3790;
							v83[v85[2]] = v83[v85[3 - 0]][v85[89 - (32 + 53)]];
							v77 = v77 + (1811 - (956 + 854));
							v85 = v73[v77];
							v83[v85[1 + 1]] = v85[5 - 2];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2]] = v63[v85[3]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[5 - 3]] = v83[v85[3]][v85[1897 - (1192 + 701)]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[1623 - (326 + 1295)]] = v83[v85[1815 - (1595 + 217)]][v85[220 - (93 + 123)]];
							v77 = v77 + (1837 - (848 + 988));
							v85 = v73[v77];
							v83[v85[1562 - (546 + 1014)]] = v83[v85[6 - 3]][v85[3 + 1]];
							v77 = v77 + (75 - (53 + 21));
							v85 = v73[v77];
							v3790 = v85[2];
							v83[v3790] = v83[v3790](v13(v83, v3790 + (292 - (167 + 124)), v85[3]));
							v77 = v77 + (181 - (4 + 176));
							v85 = v73[v77];
							v63[v85[6 - 3]] = v83[v85[2]];
						else
							local v3806 = 0 - 0;
							local v3807;
							while true do
								if ((4081 > 1557) and (v3806 == (0 - 0))) then
									v3807 = nil;
									v83[v85[2 + 0]] = v85[1 + 2];
									v77 = v77 + 1 + 0;
									v3806 = 1 + 0;
								end
								if ((3592 >= 2091) and (v3806 == 4)) then
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v77 = v85[122 - (93 + 26)];
									break;
								end
								if (v3806 == (3 + 0)) then
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[2 + 0]] = v85[2 + 1];
									v3806 = 1 + 3;
								end
								if (v3806 == (1656 - (220 + 1434))) then
									v85 = v73[v77];
									v3807 = v85[6 - 4];
									v83[v3807](v13(v83, v3807 + (1 - 0), v85[10 - 7]));
									v3806 = 1605 - (906 + 696);
								end
								if (v3806 == (1 - 0)) then
									v85 = v73[v77];
									v83[v85[1 + 1]] = v85[682 - (178 + 501)];
									v77 = v77 + (4 - 3);
									v3806 = 1 + 1;
								end
							end
						end
					elseif (v86 <= 367) then
						if (v86 <= 365) then
							local v811;
							v83[v85[1029 - (444 + 583)]] = v85[3];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v811 = v85[2 + 0];
							v83[v811](v83[v811 + (430 - (407 + 22))]);
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[1234 - (1139 + 93)]] = v62[v85[2 + 1]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2]] = v85[1347 - (237 + 1107)];
							v77 = v77 + 1;
							v85 = v73[v77];
							v811 = v85[1 + 1];
							v83[v811](v83[v811 + (12 - (4 + 7))]);
							v77 = v77 + (3 - 2);
							v85 = v73[v77];
							v83[v85[2]] = v85[516 - (8 + 505)];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v77 = v85[3];
						elseif (v86 > (261 + 105)) then
							local v3808;
							v83[v85[1 + 1]] = v62[v85[3 + 0]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[1 + 1]][v85[3]] = v83[v85[939 - (662 + 273)]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[1 + 1]] = v62[v85[3 + 0]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[7 - 5]] = v85[247 - (127 + 117)];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2]] = v63[v85[210 - (105 + 102)]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v3808 = v85[4 - 2];
							v83[v3808](v13(v83, v3808 + 1, v85[1 + 2]));
							v77 = v77 + 1;
							v85 = v73[v77];
							v77 = v85[3];
						else
							do
								return v83[v85[9 - 7]];
							end
						end
					elseif (v86 <= (1209 - 840)) then
						if (v86 == (1114 - (588 + 158))) then
							local v3820 = 0;
							local v3821;
							while true do
								if (v3820 == (1080 - (126 + 954))) then
									v3821 = nil;
									v83[v85[6 - 4]] = v83[v85[346 - (52 + 291)]];
									v77 = v77 + (279 - (76 + 202));
									v85 = v73[v77];
									v83[v85[2]] = v85[3 + 0];
									v77 = v77 + (847 - (504 + 342));
									v3820 = 1 + 0;
								end
								if ((11 - 7) == v3820) then
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[4 - 2]] = v85[3];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v3821 = v85[482 - (387 + 93)];
									v3820 = 10 - 5;
								end
								if (v3820 == (5 - 2)) then
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[8 - 5]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[2 + 0]] = v85[942 - (36 + 903)];
									v3820 = 6 - 2;
								end
								if (v3820 == (1 + 1)) then
									v77 = v77 + (263 - (220 + 42));
									v85 = v73[v77];
									v83[v85[7 - 5]] = v83[v85[1508 - (300 + 1205)]];
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[924 - (728 + 194)]] = v62[v85[3]];
									v3820 = 660 - (445 + 212);
								end
								if ((3996 > 164) and (v3820 == (3 - 2))) then
									v85 = v73[v77];
									v83[v85[2 + 0]] = v85[3 + 0];
									v77 = v77 + (1358 - (167 + 1190));
									v85 = v73[v77];
									v3821 = v85[646 - (315 + 329)];
									v83[v3821] = v83[v3821](v13(v83, v3821 + 1 + 0, v85[2 + 1]));
									v3820 = 2;
								end
								if ((v3820 == (656 - (545 + 105))) or (1879 <= 767)) then
									v83[v85[1 + 1]] = v85[1 + 2];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v77 = v85[7 - 4];
									break;
								end
								if (v3820 == (7 - 2)) then
									v83[v3821] = v83[v3821](v13(v83, v3821 + (1 - 0), v85[1192 - (1044 + 145)]));
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[1252 - (122 + 1128)]] = v83[v85[3]];
									v77 = v77 + (1816 - (371 + 1444));
									v85 = v73[v77];
									v3820 = 22 - (14 + 2);
								end
							end
						else
							local v3822;
							local v3823;
							v83[v85[1 + 1]] = v85[3 + 0];
							v77 = v77 + 1;
							v85 = v73[v77];
							v3823 = v85[3 - 1];
							v83[v3823](v13(v83, v3823 + (1 - 0), v85[2 + 1]));
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v3823 = v85[6 - 4];
							v3822 = v83[v85[3]];
							v83[v3823 + 1 + 0] = v3822;
							v83[v3823] = v3822[v85[9 - 5]];
							v77 = v77 + (3 - 2);
							v85 = v73[v77];
							v3823 = v85[2];
							v83[v3823](v83[v3823 + (4 - 3)]);
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1 + 1]] = v85[12 - 9];
						end
					elseif (v86 == (655 - 285)) then
						if ((v83[v85[2]] == v85[153 - (50 + 99)]) or (1658 >= 2349)) then
							v77 = v77 + (440 - (123 + 316));
						else
							v77 = v85[4 - 1];
						end
					else
						local v3835 = v85[1584 - (1507 + 75)];
						local v3836 = v85[598 - (145 + 449)];
						local v3837 = v3835 + (1113 - (241 + 870));
						local v3838 = {v83[v3835](v83[v3835 + (2 - 1)], v83[v3837])};
						for v4750 = 3 - 2, v3836 do
							v83[v3837 + v4750] = v3838[v4750];
						end
						local v3839 = v3838[2 - 1];
						if v3839 then
							local v4850 = 0;
							while true do
								if (v4850 == (757 - (627 + 130))) then
									v83[v3837] = v3839;
									v77 = v85[148 - (82 + 63)];
									break;
								end
							end
						else
							v77 = v77 + 1 + 0;
						end
					end
				elseif (v86 <= (1682 - (386 + 898))) then
					if (v86 <= (97 + 287)) then
						if (v86 <= (1181 - 804)) then
							if (v86 <= (302 + 72)) then
								if ((v86 <= 372) or (1510 > 4981)) then
									local v822;
									local v823;
									v823 = v85[2 + 0];
									v83[v823](v13(v83, v823 + (970 - (659 + 310)), v85[2 + 1]));
									v77 = v77 + (604 - (364 + 239));
									v85 = v73[v77];
									v83[v85[2 + 0]] = v85[11 - 8];
									v77 = v77 + (1 - 0);
									v85 = v73[v77];
									v83[v85[6 - 4]] = v83[v85[196 - (30 + 163)]][v83[v85[11 - 7]]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[557 - (213 + 342)]] = v85[8 - 5];
									v77 = v77 + (1419 - (843 + 575));
									v85 = v73[v77];
									v83[v85[704 - (347 + 355)]] = v83[v85[3]][v83[v85[10 - 6]]];
									v77 = v77 + (468 - (386 + 81));
									v85 = v73[v77];
									v83[v85[3 - 1]] = v85[6 - 3];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v823 = v85[2 + 0];
									v822 = v83[v85[5 - 2]];
									v83[v823 + (1658 - (610 + 1047))] = v822;
									v83[v823] = v822[v83[v85[1 + 3]]];
									v77 = v77 + (564 - (304 + 259));
									v85 = v73[v77];
									v83[v85[5 - 3]] = v85[968 - (306 + 659)];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v823 = v85[1 + 1];
									v83[v823] = v83[v823](v13(v83, v823 + 1, v85[1742 - (315 + 1424)]));
									v77 = v77 + (589 - (27 + 561));
									v85 = v73[v77];
									v823 = v85[1 + 1];
									v822 = v83[v85[3]];
									v83[v823 + 1] = v822;
									v83[v823] = v822[v85[1931 - (1904 + 23)]];
								elseif (v86 == (86 + 287)) then
									local v3840;
									local v3841;
									v83[v85[1 + 1]] = v63[v85[2001 - (1852 + 146)]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[7 - 5]] = v83[v85[3 + 0]][v85[190 - (18 + 168)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v3841 = v85[2 - 0];
									v3840 = v83[v85[4 - 1]];
									v83[v3841 + (3 - 2)] = v3840;
									v83[v3841] = v3840[v85[5 - 1]];
									v77 = v77 + (639 - (399 + 239));
									v85 = v73[v77];
									v3841 = v85[7 - 5];
									v83[v3841] = v83[v3841](v83[v3841 + 1]);
									v77 = v77 + (1409 - (779 + 629));
									v85 = v73[v77];
									if ((4397 >= 127) and (v83[v85[2]] == v85[2 + 2])) then
										v77 = v77 + 1;
									else
										v77 = v85[2 + 1];
									end
								else
									local v3853 = v85[1771 - (855 + 914)];
									do
										return v83[v3853](v13(v83, v3853 + (23 - (15 + 7)), v85[3 + 0]));
									end
								end
							elseif ((v86 <= (2077 - (646 + 1056))) or (1854 >= 2237)) then
								v83[v85[2]] = v83[v85[1 + 2]][v83[v85[4]]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[4 - 1]][v85[1870 - (1443 + 423)]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[4 - 2]] = v83[v85[3 + 0]][v85[2 + 2]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[4 - 2]][v83[v85[1509 - (271 + 1235)]]] = v83[v85[2 + 2]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v77 = v85[10 - 7];
							elseif (v86 == 376) then
								local v3854 = 0 - 0;
								local v3855;
								while true do
									if ((v3854 == 3) or (1397 >= 4402)) then
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[9 - 6]][v85[1048 - (463 + 581)]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v3854 = 1179 - (599 + 576);
									end
									if ((v3854 == 2) or (4207 == 3768)) then
										v77 = v77 + (1513 - (316 + 1196));
										v85 = v73[v77];
										v83[v85[2]] = v83[v85[1306 - (970 + 333)]][v85[2 + 2]];
										v77 = v77 + 1 + 0;
										v3854 = 964 - (538 + 423);
									end
									if (v3854 == 4) then
										v83[v85[1 + 1]] = v83[v85[3]][v85[17 - 13]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v3855 = v85[4 - 2];
										v3854 = 1 + 4;
									end
									if (v3854 == 1) then
										v83[v85[1356 - (1061 + 293)]] = v85[532 - (153 + 376)];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[707 - (173 + 532)]] = v63[v85[3]];
										v3854 = 3 - 1;
									end
									if (v3854 == (0 - 0)) then
										v3855 = nil;
										v83[v85[4 - 2]] = v83[v85[2 + 1]][v85[4]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v3854 = 2 - 1;
									end
									if (v3854 == (17 - 12)) then
										v83[v3855] = v83[v3855](v13(v83, v3855 + 1 + 0, v85[1539 - (561 + 975)]));
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v63[v85[1 + 2]] = v83[v85[2 + 0]];
										break;
									end
								end
							else
								local v3856 = v85[2];
								local v3857, v3858 = v76(v83[v3856](v83[v3856 + (2 - 1)]));
								v78 = (v3858 + v3856) - (1 + 0);
								local v3859 = 0;
								for v4753 = v3856, v78 do
									v3859 = v3859 + (3 - 2);
									v83[v4753] = v3857[v3859];
								end
							end
						elseif (v86 <= (292 + 88)) then
							if (v86 <= (821 - 443)) then
								local v856 = v85[125 - (115 + 8)];
								v83[v856](v13(v83, v856 + (1557 - (1476 + 80)), v78));
							elseif (v86 > (571 - 192)) then
								local v3860;
								v83[v85[2]] = v63[v85[845 - (648 + 194)]];
								v77 = v77 + (256 - (111 + 144));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[4 - 1]][v85[5 - 1]];
								v77 = v77 + (318 - (275 + 42));
								v85 = v73[v77];
								v83[v85[184 - (104 + 78)]] = v85[3];
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v83[v85[2]] = v85[7 - 4];
								v77 = v77 + (1937 - (813 + 1123));
								v85 = v73[v77];
								v83[v85[2]] = v85[1 + 2];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v3860 = v85[6 - 4];
								v83[v3860] = v83[v3860](v13(v83, v3860 + 1 + 0, v85[1796 - (144 + 1649)]));
								v77 = v77 + (552 - (125 + 426));
								v85 = v73[v77];
								v83[v85[2]][v85[6 - 3]] = v83[v85[86 - (51 + 31)]];
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v83[v85[2]] = v85[3 + 0];
							else
								local v3875;
								local v3876;
								v83[v85[291 - (174 + 115)]] = v83[v85[1 + 2]][v85[1702 - (941 + 757)]];
								v77 = v77 + (1163 - (696 + 466));
								v85 = v73[v77];
								v83[v85[3 - 1]] = v85[6 - 3];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[1353 - (165 + 1186)]] = v63[v85[3]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[9 - 7]] = v83[v85[2 + 1]][v85[4 + 0]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[3]][v85[4]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[3 + 0]][v85[1041 - (853 + 184)]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[36 - (14 + 20)]] = v83[v85[1 + 2]][v85[4]];
								v77 = v77 + (767 - (35 + 731));
								v85 = v73[v77];
								v3876 = v85[2];
								v83[v3876] = v83[v3876](v13(v83, v3876 + 1 + 0, v85[1 + 2]));
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[3]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v62[v85[3 + 0]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v3876 = v85[3 - 1];
								v3875 = v83[v85[3 + 0]];
								v83[v3876 + (148 - (26 + 121))] = v3875;
								v83[v3876] = v3875[v85[115 - (95 + 16)]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[9 - 6]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2]] = v62[v85[554 - (423 + 128)]];
								v77 = v77 + (1575 - (1331 + 243));
								v85 = v73[v77];
								v83[v85[4 - 2]] = {};
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[1636 - (284 + 1350)]][v85[1 + 2]] = v85[4];
								v77 = v77 + (29 - (10 + 18));
								v85 = v73[v77];
								v3876 = v85[5 - 3];
								v83[v3876] = v83[v3876](v13(v83, v3876 + (1308 - (73 + 1234)), v85[740 - (503 + 234)]));
								v77 = v77 + (1902 - (425 + 1476));
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[1 + 2]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[1058 - (856 + 200)]] = v63[v85[1 + 2]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[3 + 0]][v85[1 + 3]];
								v77 = v77 + (1612 - (734 + 877));
								v85 = v73[v77];
								v83[v85[1 + 1]] = v83[v85[1484 - (514 + 967)]][v85[6 - 2]];
								v77 = v77 + (648 - (325 + 322));
								v85 = v73[v77];
								v83[v85[2 - 0]] = v83[v85[1833 - (1668 + 162)]][v85[11 - 7]];
								v77 = v77 + (233 - (43 + 189));
								v85 = v73[v77];
								v83[v85[3 - 1]] = v83[v85[1661 - (694 + 964)]][v85[4]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2 - 0]] = v83[v85[4 - 1]][v85[2 + 2]];
								v77 = v77 + (338 - (57 + 280));
								v85 = v73[v77];
								v83[v85[2]] = v85[1957 - (414 + 1540)];
							end
						elseif (v86 <= (1282 - (561 + 339))) then
							if ((1806 <= 4253) and (v86 == (70 + 311))) then
								if (v83[v85[2 + 0]] == v83[v85[1554 - (1342 + 208)]]) then
									v77 = v77 + (1 - 0);
								else
									v77 = v85[10 - 7];
								end
							else
								v83[v85[2]][v85[3 + 0]] = v85[12 - 8];
								v77 = v77 + (1847 - (1139 + 707));
								v85 = v73[v77];
								v83[v85[2]] = v63[v85[2 + 1]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]][v85[1 + 2]] = v85[544 - (335 + 205)];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v63[v85[3]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3]][v85[7 - 3]];
							end
						elseif ((v86 == (1122 - 739)) or (2486 > 3825)) then
							local v3926;
							v83[v85[2]] = v63[v85[1 + 2]];
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v83[v85[1064 - (622 + 440)]] = v83[v85[5 - 2]][v85[756 - (672 + 80)]];
							v77 = v77 + (1127 - (601 + 525));
							v85 = v73[v77];
							v83[v85[1820 - (1515 + 303)]] = v85[1 + 2];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2 - 0]] = v85[8 - 5];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[964 - (144 + 818)]] = v85[30 - (5 + 22)];
							v77 = v77 + (862 - (446 + 415));
							v85 = v73[v77];
							v3926 = v85[2];
							v83[v3926] = v83[v3926](v13(v83, v3926 + (214 - (204 + 9)), v85[1261 - (479 + 779)]));
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v83[v85[117 - (61 + 54)]][v85[1808 - (1235 + 570)]] = v83[v85[972 - (217 + 751)]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2]] = v63[v85[1 + 2]];
							v77 = v77 + (111 - (94 + 16));
							v85 = v73[v77];
							v83[v85[2]][v85[10 - 7]] = v85[4 + 0];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1547 - (1188 + 357)]] = v63[v85[3]];
						else
							local v3946;
							v83[v85[811 - (580 + 229)]] = v83[v85[513 - (82 + 428)]][v85[12 - 8]];
							v77 = v77 + (497 - (259 + 237));
							v85 = v73[v77];
							v83[v85[7 - 5]] = v85[1359 - (215 + 1141)];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[2]] = v63[v85[673 - (405 + 265)]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[1985 - (1136 + 847)]] = v83[v85[1737 - (230 + 1504)]][v85[12 - 8]];
							v77 = v77 + (1883 - (913 + 969));
							v85 = v73[v77];
							v83[v85[3 - 1]] = v83[v85[2 + 1]][v85[1397 - (1277 + 116)]];
							v77 = v77 + (1188 - (1178 + 9));
							v85 = v73[v77];
							v83[v85[1 + 1]] = v83[v85[4 - 1]][v85[1844 - (1018 + 822)]];
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v3946 = v85[2 + 0];
							v83[v3946] = v83[v3946](v13(v83, v3946 + 1, v85[1 + 2]));
							v77 = v77 + 1;
							v85 = v73[v77];
							v63[v85[2 + 1]] = v83[v85[2]];
						end
					elseif ((v86 <= (242 + 149)) or (4706 < 4304)) then
						if (v86 <= 387) then
							if (v86 <= (766 - (111 + 270))) then
								v62[v85[1199 - (1082 + 114)]] = v83[v85[2 + 0]];
							elseif ((v86 == (1146 - 760)) or (3991 < 289)) then
								local v3963;
								local v3964;
								v83[v85[497 - (257 + 238)]] = v62[v85[3]];
								v77 = v77 + (1855 - (831 + 1023));
								v85 = v73[v77];
								v83[v85[123 - (6 + 115)]] = v83[v85[4 - 1]][v85[9 - 5]];
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v3964 = v85[2 + 0];
								v3963 = v83[v85[2 + 1]];
								v83[v3964 + (2 - 1)] = v3963;
								v83[v3964] = v3963[v85[9 - 5]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1202 - (608 + 592)]] = v85[6 - 3];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v3964 = v85[1943 - (24 + 1917)];
								v83[v3964] = v83[v3964](v13(v83, v3964 + (2 - 1), v85[1528 - (521 + 1004)]));
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								if ((2231 < 4747) and v83[v85[2 + 0]]) then
									v77 = v77 + 1 + 0;
								else
									v77 = v85[297 - (87 + 207)];
								end
							else
								local v3978 = 0 + 0;
								local v3979;
								while true do
									if (v3978 == (0 - 0)) then
										v3979 = nil;
										v83[v85[2]][v85[3]] = v85[4];
										v77 = v77 + (1596 - (625 + 970));
										v85 = v73[v77];
										v3978 = 1 + 0;
									end
									if ((v3978 == (351 - (122 + 227))) or (4319 < 710)) then
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v83[v85[1117 - (706 + 409)]] = v85[2 + 1];
										v77 = v77 + 1;
										v3978 = 7 - 4;
									end
									if (v3978 == 4) then
										v83[v85[2]] = v83[v85[2 + 1]][v85[8 - 4]];
										v77 = v77 + (447 - (433 + 13));
										v85 = v73[v77];
										v83[v85[2]] = v85[3 + 0];
										v3978 = 986 - (824 + 157);
									end
									if ((2681 >= 2127) and (v3978 == (365 - (120 + 240)))) then
										v77 = v77 + 1;
										v85 = v73[v77];
										v83[v85[1 + 1]] = v85[2 + 1];
										v77 = v77 + 1 + 0;
										v3978 = 1038 - (291 + 741);
									end
									if ((v3978 == (3 + 4)) or (478 < 259)) then
										v3979 = v85[1 + 1];
										v83[v3979] = v83[v3979](v13(v83, v3979 + 1 + 0, v85[1495 - (810 + 682)]));
										break;
									end
									if (v3978 == 1) then
										v83[v85[495 - (16 + 477)]] = v63[v85[3 - 0]];
										v77 = v77 + (1367 - (658 + 708));
										v85 = v73[v77];
										v83[v85[1 + 1]][v85[3]] = v85[6 - 2];
										v3978 = 2 + 0;
									end
									if (v3978 == 3) then
										v85 = v73[v77];
										v83[v85[649 - (483 + 164)]] = v63[v85[7 - 4]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v3978 = 4;
									end
									if (v3978 == (554 - (151 + 397))) then
										v85 = v73[v77];
										v83[v85[5 - 3]] = v85[1226 - (1005 + 218)];
										v77 = v77 + (656 - (294 + 361));
										v85 = v73[v77];
										v3978 = 1067 - (150 + 910);
									end
								end
							end
						elseif (v86 <= (126 + 263)) then
							if ((v86 == (281 + 107)) or (787 > 4911)) then
								local v3980;
								local v3981;
								v3981 = v85[1 + 1];
								v3980 = v83[v85[12 - 9]];
								v83[v3981 + 1 + 0] = v3980;
								v83[v3981] = v3980[v83[v85[12 - 8]]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v3981 = v85[1 + 1];
								v83[v3981] = v83[v3981](v83[v3981 + 1 + 0]);
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1802 - (756 + 1044)]] = v85[3];
								v77 = v77 + 1;
								v85 = v73[v77];
								v3981 = v85[832 - (738 + 92)];
								v3980 = v83[v85[3]];
								v83[v3981 + 1] = v3980;
								v83[v3981] = v3980[v83[v85[11 - 7]]];
								v77 = v77 + (1413 - (569 + 843));
								v85 = v73[v77];
								v83[v85[1430 - (262 + 1166)]] = v85[654 - (410 + 241)];
								v77 = v77 + (1185 - (388 + 796));
								v85 = v73[v77];
								v3981 = v85[2];
								v83[v3981] = v83[v3981](v13(v83, v3981 + (1009 - (534 + 474)), v85[2 + 1]));
								v77 = v77 + (1100 - (642 + 457));
								v85 = v73[v77];
								v83[v85[3 - 1]] = v83[v85[3]];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[1478 - (384 + 1092)]] = v85[1732 - (1190 + 539)];
								v77 = v77 + (754 - (91 + 662));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v63[v85[11 - 8]];
								v77 = v77 + (1048 - (116 + 931));
								v85 = v73[v77];
								v3981 = v85[2 + 0];
								v83[v3981](v13(v83, v3981 + 1, v85[1 + 2]));
							else
								local v4003;
								v83[v85[1 + 1]] = v83[v85[11 - 8]][v85[4]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2]] = v85[180 - (18 + 159)];
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[2]] = v63[v85[8 - 5]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[4 - 2]] = v83[v85[3 - 0]][v85[9 - 5]];
								v77 = v77 + (320 - (111 + 208));
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[595 - (364 + 228)]][v85[4]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3]][v85[6 - 2]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v4003 = v85[2 + 0];
								v83[v4003] = v83[v4003](v13(v83, v4003 + 1 + 0, v85[3]));
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v63[v85[3]] = v83[v85[2 + 0]];
							end
						elseif (v86 == (767 - (121 + 256))) then
							v77 = v85[12 - 9];
						else
							local v4019 = 0;
							local v4020;
							local v4021;
							local v4022;
							local v4023;
							while true do
								if (v4019 == (4 - 2)) then
									for v6737 = v4020, v78 do
										v4023 = v4023 + 1 + 0;
										v83[v6737] = v4021[v4023];
									end
									break;
								end
								if (v4019 == (0 + 0)) then
									v4020 = v85[2];
									v4021, v4022 = v76(v83[v4020](v13(v83, v4020 + 1 + 0, v78)));
									v4019 = 1759 - (549 + 1209);
								end
								if (v4019 == 1) then
									v78 = (v4022 + v4020) - (1 - 0);
									v4023 = 0;
									v4019 = 2 + 0;
								end
							end
						end
					elseif (v86 <= (1775 - (643 + 738))) then
						if (v86 <= 392) then
							v83[v85[2]] = v83[v85[3]][v85[4]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[4 - 2]] = v83[v85[7 - 4]][v85[4]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[1 + 1]] = v83[v85[6 - 3]][v85[6 - 2]];
							v77 = v77 + (1108 - (1038 + 69));
							v85 = v73[v77];
							v83[v85[338 - (157 + 179)]] = v83[v85[3]][v85[1134 - (204 + 926)]];
							v77 = v77 + (1958 - (184 + 1773));
							v85 = v73[v77];
							v63[v85[722 - (111 + 608)]] = v83[v85[2 + 0]];
							v77 = v77 + (3 - 2);
							v85 = v73[v77];
							v77 = v85[2 + 1];
						elseif (v86 > (222 + 171)) then
							local v4024;
							local v4025, v4026;
							local v4027;
							v83[v85[2]] = v62[v85[1 + 2]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[8 - 6]] = v62[v85[6 - 3]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[6 - 4]] = v83[v85[3]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1670 - (1328 + 340)]] = v83[v85[3]];
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v83[v85[2 + 0]] = v83[v85[6 - 3]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v4027 = v85[1016 - (782 + 232)];
							v4025, v4026 = v76(v83[v4027](v13(v83, v4027 + 1, v85[2 + 1])));
							v78 = (v4026 + v4027) - 1;
							v4024 = 1303 - (397 + 906);
							for v4756 = v4027, v78 do
								v4024 = v4024 + (601 - (360 + 240));
								v83[v4756] = v4025[v4024];
							end
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v4027 = v85[2];
							v4025, v4026 = v76(v83[v4027](v13(v83, v4027 + 1 + 0, v78)));
							v78 = (v4026 + v4027) - (23 - (13 + 9));
							v4024 = 0 - 0;
							for v4759 = v4027, v78 do
								v4024 = v4024 + (2 - 1);
								v83[v4759] = v4025[v4024];
							end
							v77 = v77 + (1575 - (272 + 1302));
							v85 = v73[v77];
							v4027 = v85[8 - 6];
							v83[v4027] = v83[v4027](v13(v83, v4027 + (2 - 1), v78));
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v83[v85[1 + 1]][v83[v85[5 - 2]]] = v83[v85[4]];
						else
							local v4044 = v85[23 - (8 + 13)];
							v83[v4044] = v83[v4044](v83[v4044 + 1 + 0]);
						end
					elseif ((621 <= 756) and (v86 <= (1257 - 861))) then
						if (v86 > 395) then
							local v4046 = v85[2 + 0];
							v83[v4046](v83[v4046 + (89 - (28 + 60))]);
						else
							local v4047 = 0 + 0;
							while true do
								if ((1 + 0) == v4047) then
									v83[v85[955 - (133 + 820)]] = v83[v85[3]][v85[1 + 3]];
									v77 = v77 + (98 - (9 + 88));
									v85 = v73[v77];
									v4047 = 252 - (98 + 152);
								end
								if ((v4047 == (3 + 0)) or (1034 >= 1538)) then
									v83[v85[5 - 3]] = v85[13 - 10];
									v77 = v77 + 1;
									v85 = v73[v77];
									v4047 = 4;
								end
								if (v4047 == (0 - 0)) then
									v83[v85[1 + 1]] = v83[v85[3 - 0]][v85[4]];
									v77 = v77 + (289 - (44 + 244));
									v85 = v73[v77];
									v4047 = 1390 - (207 + 1182);
								end
								if ((2 + 0) == v4047) then
									v83[v85[918 - (904 + 12)]][v85[5 - 2]] = v83[v85[4]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v4047 = 3;
								end
								if ((v4047 == (15 - 11)) or (2735 < 379)) then
									v77 = v85[256 - (241 + 12)];
									break;
								end
							end
						end
					elseif (v86 > (363 + 34)) then
						local v4048;
						v83[v85[3 - 1]] = v62[v85[1257 - (1187 + 67)]];
						v77 = v77 + (273 - (56 + 216));
						v85 = v73[v77];
						v83[v85[2]] = v62[v85[4 - 1]];
						v77 = v77 + (1480 - (1194 + 285));
						v85 = v73[v77];
						v83[v85[1702 - (401 + 1299)]] = v62[v85[1558 - (1522 + 33)]];
						v77 = v77 + (2 - 1);
						v85 = v73[v77];
						v4048 = v85[2];
						v83[v4048] = v83[v4048](v13(v83, v4048 + (1 - 0), v85[1825 - (1108 + 714)]));
						v77 = v77 + (675 - (357 + 317));
						v85 = v73[v77];
						v83[v85[2]] = v83[v85[3 + 0]];
						v77 = v77 + 1 + 0;
						v85 = v73[v77];
						v83[v85[2]] = v62[v85[3]];
						v77 = v77 + 1;
						v85 = v73[v77];
						v83[v85[469 - (73 + 394)]] = v83[v85[9 - 6]] + v85[4];
						v77 = v77 + 1 + 0;
						v85 = v73[v77];
						v62[v85[3 + 0]] = v83[v85[253 - (247 + 4)]];
						v77 = v77 + (629 - (435 + 193));
						v85 = v73[v77];
						v83[v85[475 - (428 + 45)]] = v85[1223 - (158 + 1062)];
						v77 = v77 + (1378 - (858 + 519));
						v85 = v73[v77];
						v77 = v85[5 - 2];
					else
						v83[v85[1459 - (711 + 746)]] = v85[3];
					end
				elseif (v86 <= (67 + 344)) then
					if (v86 <= 404) then
						if (v86 <= (69 + 332)) then
							if ((497 == 497) and (v86 <= (1076 - (229 + 448)))) then
								v83[v85[2]] = v83[v85[744 - (357 + 384)]] + v85[1 + 3];
							elseif ((2376 <= 2611) and (v86 > (1980 - (984 + 596)))) then
								local v4068;
								v83[v85[2]] = v85[3];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								for v4762 = v85[923 - (465 + 456)], v85[3 + 0] do
									v83[v4762] = nil;
								end
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[1 + 1]] = v62[v85[3]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[2 + 0]] = v62[v85[10 - 7]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3 + 0]];
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[218 - (172 + 44)]] = v85[3];
								v77 = v77 + 1;
								v85 = v73[v77];
								v4068 = v85[1 + 1];
								v83[v4068] = v83[v4068](v13(v83, v4068 + 1 + 0, v85[382 - (170 + 209)]));
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v83[v85[4 - 2]] = v85[2 + 1];
							else
								local v4082 = 956 - (244 + 712);
								while true do
									if (v4082 == 1) then
										v83[v85[2 + 0]] = v83[v85[3]][v85[4 + 0]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v4082 = 5 - 3;
									end
									if (v4082 == (17 - 11)) then
										v83[v85[2]] = v83[v85[1 + 2]][v85[3 + 1]];
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v4082 = 1253 - (769 + 477);
									end
									if ((4408 >= 1447) and (v4082 == (4 - 0))) then
										v83[v85[2 + 0]] = v83[v85[3]][v85[9 - 5]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v4082 = 5;
									end
									if (v4082 == (6 + 2)) then
										v83[v85[1 + 1]] = v83[v85[6 - 3]][v85[7 - 3]];
										v77 = v77 + (3 - 2);
										v85 = v73[v77];
										v4082 = 9 + 0;
									end
									if (v4082 == (24 - 17)) then
										v83[v85[3 - 1]] = v83[v85[641 - (526 + 112)]][v85[7 - 3]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v4082 = 8;
									end
									if (v4082 == 5) then
										v83[v85[2]] = v83[v85[661 - (318 + 340)]][v85[4]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v4082 = 629 - (274 + 349);
									end
									if ((2270 > 1648) and (v4082 == 0)) then
										v83[v85[2]] = v63[v85[3]];
										v77 = v77 + 1;
										v85 = v73[v77];
										v4082 = 1 - 0;
									end
									if (v4082 == (4 - 1)) then
										v83[v85[2]] = v63[v85[7 - 4]];
										v77 = v77 + 1 + 0;
										v85 = v73[v77];
										v4082 = 6 - 2;
									end
									if ((v4082 == (1461 - (1429 + 23))) or (4672 <= 3952)) then
										v83[v85[2]] = v83[v85[11 - 8]][v85[4]];
										break;
									end
									if (v4082 == (1 + 1)) then
										v83[v85[2 + 0]] = v83[v85[5 - 2]][v85[1 + 3]];
										v77 = v77 + (1 - 0);
										v85 = v73[v77];
										v4082 = 1509 - (1140 + 366);
									end
								end
							end
						elseif (v86 <= 402) then
							v83[v85[2]] = v83[v85[4 - 1]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1 + 1]] = v62[v85[8 - 5]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[1 + 2]][v85[4]];
							v77 = v77 + (386 - (271 + 114));
							v85 = v73[v77];
							v83[v85[2]] = v85[3];
							v77 = v77 + 1;
							v85 = v73[v77];
							v77 = v85[13 - 10];
						elseif (v86 > (1262 - (240 + 619))) then
							local v4083;
							v83[v85[2 + 0]] = v85[2 + 1];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v4083 = v85[859 - (509 + 348)];
							v83[v4083](v83[v4083 + (2 - 1)]);
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1380 - (1014 + 364)]] = v63[v85[7 - 4]];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[5 - 3]] = v83[v85[5 - 2]][v85[3 + 1]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2]] = v85[3 + 0];
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v4083 = v85[1726 - (1565 + 159)];
							v83[v4083](v83[v4083 + 1 + 0]);
							v77 = v77 + (2 - 1);
							v85 = v73[v77];
							v83[v85[1 + 1]] = v62[v85[3]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[7 - 5]] = v85[4 - 1];
							v77 = v77 + (1864 - (1445 + 418));
							v85 = v73[v77];
							v4083 = v85[6 - 4];
							v83[v4083](v83[v4083 + 1]);
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1415 - (26 + 1387)]] = v85[3 + 0];
						else
							local v4101;
							v83[v85[1 + 1]] = v62[v85[3 + 0]];
							v77 = v77 + (804 - (355 + 448));
							v85 = v73[v77];
							v83[v85[263 - (246 + 15)]] = v83[v85[1 + 2]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[1 + 2]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[1 + 1]] = v62[v85[1 + 2]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v4101 = v85[2];
							v83[v4101] = v83[v4101](v13(v83, v4101 + (1120 - (391 + 728)), v85[3]));
							v77 = v77 + (1096 - (594 + 501));
							v85 = v73[v77];
							v83[v85[2 + 0]][v83[v85[1140 - (730 + 407)]]] = v83[v85[3 + 1]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v77 = v85[5 - 2];
						end
					elseif ((1563 < 2177) and (v86 <= 407)) then
						if ((712 > 124) and (v86 <= (1008 - 603))) then
							local v880 = 0;
							while true do
								if (v880 == (3 - 1)) then
									v85 = v73[v77];
									v83[v85[2 + 0]] = v63[v85[3]];
									v77 = v77 + (1902 - (438 + 1463));
									v85 = v73[v77];
									v880 = 3;
								end
								if (v880 == (1 + 2)) then
									v83[v85[1 + 1]] = v83[v85[1620 - (900 + 717)]][v85[1140 - (820 + 316)]];
									break;
								end
								if ((v880 == (0 - 0)) or (1366 <= 531)) then
									v83[v85[1800 - (719 + 1079)]][v85[6 - 3]] = v85[5 - 1];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v83[v85[1 + 1]] = v63[v85[4 - 1]];
									v880 = 204 - (148 + 55);
								end
								if ((906 > 70) and (v880 == 1)) then
									v77 = v77 + 1;
									v85 = v73[v77];
									v83[v85[1455 - (914 + 539)]][v85[2 + 1]] = v85[564 - (253 + 307)];
									v77 = v77 + (1067 - (926 + 140));
									v880 = 1060 - (331 + 727);
								end
							end
						elseif ((v86 == (1788 - (1014 + 368))) or (1750 < 1366)) then
							local v4114;
							local v4115, v4116;
							local v4117;
							v83[v85[2]] = v83[v85[3]][v83[v85[1581 - (1035 + 542)]]];
							v77 = v77 + (79 - (44 + 34));
							v85 = v73[v77];
							v83[v85[3 - 1]] = v62[v85[1 + 2]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[6 - 4]] = v83[v85[3]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[3 - 1]] = v83[v85[2 + 1]] + v85[672 - (355 + 313)];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[4 - 2]] = v83[v85[5 - 2]][v85[4]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v4117 = v85[1867 - (762 + 1103)];
							v4115, v4116 = v76(v83[v4117](v13(v83, v4117 + 1 + 0, v85[3])));
							v78 = (v4116 + v4117) - (1 + 0);
							v4114 = 0 + 0;
							for v4777 = v4117, v78 do
								local v4778 = 1567 - (1491 + 76);
								while true do
									if ((0 + 0) == v4778) then
										v4114 = v4114 + 1 + 0;
										v83[v4777] = v4115[v4114];
										break;
									end
								end
							end
							v77 = v77 + (763 - (94 + 668));
							v85 = v73[v77];
							v4117 = v85[1411 - (36 + 1373)];
							v83[v4117](v13(v83, v4117 + (1102 - (58 + 1043)), v78));
							v77 = v77 + (4 - 3);
							v85 = v73[v77];
							v77 = v85[4 - 1];
						else
							v83[v85[4 - 2]] = v83[v85[8 - 5]][v85[15 - 11]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[230 - (35 + 193)]] = v83[v85[14 - 11]][v85[656 - (242 + 410)]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[1497 - (1285 + 210)]][v85[1742 - (1179 + 560)]] = v83[v85[4]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[6 - 4]] = v85[5 - 2];
							v77 = v77 + 1;
							v85 = v73[v77];
							v77 = v85[3];
						end
					elseif ((v86 <= 409) or (151 >= 2640)) then
						if (v86 > (1624 - (262 + 954))) then
							local v4140 = v85[7 - 5];
							local v4141 = v83[v4140];
							for v4779 = v4140 + (2 - 1), v85[3 + 0] do
								v7(v4141, v83[v4779]);
							end
						else
							v83[v85[2]][v85[10 - 7]] = v85[3 + 1];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1 + 1]] = v63[v85[3]];
							v77 = v77 + (1843 - (1696 + 146));
							v85 = v73[v77];
							v83[v85[1908 - (1835 + 71)]][v85[637 - (58 + 576)]] = v85[3 + 1];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[2]] = v63[v85[3]];
							v77 = v77 + 1;
							v85 = v73[v77];
							v83[v85[4 - 2]] = v83[v85[3 + 0]][v85[84 - (27 + 53)]];
						end
					elseif (v86 == (2139 - (22 + 1707))) then
						local v4151 = 0 - 0;
						while true do
							if (v4151 == 0) then
								v83[v85[2]][v85[893 - (627 + 263)]] = v85[4];
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v4151 = 1 - 0;
							end
							if ((v4151 == (2 - 1)) or (4060 < 1319)) then
								v83[v85[2 - 0]] = v63[v85[1189 - (255 + 931)]];
								v77 = v77 + (2 - 1);
								v85 = v73[v77];
								v4151 = 1390 - (507 + 881);
							end
							if ((v4151 == (3 - 0)) or (2253 <= 286)) then
								v83[v85[3 - 1]] = v63[v85[3]];
								v77 = v77 + (3 - 2);
								v85 = v73[v77];
								v4151 = 1607 - (475 + 1128);
							end
							if ((v4151 == 4) or (81 >= 916)) then
								v83[v85[4 - 2]] = v83[v85[3]][v85[5 - 1]];
								break;
							end
							if ((6 - 4) == v4151) then
								v83[v85[2 + 0]][v85[3]] = v85[4];
								v77 = v77 + (358 - (110 + 247));
								v85 = v73[v77];
								v4151 = 1249 - (1109 + 137);
							end
						end
					else
						local v4152 = 0;
						local v4153;
						local v4154;
						local v4155;
						local v4156;
						local v4157;
						while true do
							if ((1462 > 1305) and (v4152 == 2)) then
								v83[v85[9 - 7]] = {};
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[2]] = v83[v85[3 + 0]][v83[v85[12 - 8]]];
								v77 = v77 + 1 + 0;
								v4152 = 3 + 0;
							end
							if (((2 + 3) == v4152) or (3850 == 1796)) then
								v4157 = v85[5 - 3];
								v4155, v4156 = v76(v83[v4157](v13(v83, v4157 + 1 + 0, v85[2 + 1])));
								v78 = (v4156 + v4157) - (1 + 0);
								v4154 = 0 + 0;
								for v6742 = v4157, v78 do
									local v6743 = 0 - 0;
									while true do
										if (v6743 == (0 + 0)) then
											v4154 = v4154 + 1 + 0;
											v83[v6742] = v4155[v4154];
											break;
										end
									end
								end
								v4152 = 23 - 17;
							end
							if ((v4152 == (205 - (192 + 13))) or (3352 < 1896)) then
								v4153 = nil;
								v4154 = nil;
								v4155, v4156 = nil;
								v4157 = nil;
								v83[v85[2]] = v83[v85[3]][v85[4]];
								v4152 = 758 - (585 + 172);
							end
							if ((2 - 1) == v4152) then
								v77 = v77 + 1;
								v85 = v73[v77];
								v83[v85[798 - (76 + 720)]] = v83[v85[7 - 4]] + v85[4];
								v77 = v77 + (133 - (45 + 87));
								v85 = v73[v77];
								v4152 = 2;
							end
							if (v4152 == (9 - 3)) then
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v4157 = v85[2 + 0];
								v4153 = v83[v4157];
								for v6744 = v4157 + (3 - 2), v78 do
									v7(v4153, v83[v6744]);
								end
								break;
							end
							if ((v4152 == (4 + 0)) or (4029 < 1944)) then
								v77 = v77 + 1 + 0;
								v85 = v73[v77];
								v83[v85[1285 - (61 + 1222)]] = v83[v85[1506 - (628 + 875)]][v83[v85[4 + 0]]];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v4152 = 14 - 9;
							end
							if (v4152 == 3) then
								v85 = v73[v77];
								v83[v85[1924 - (590 + 1332)]] = v83[v85[3]] + v85[4];
								v77 = v77 + (1 - 0);
								v85 = v73[v77];
								v83[v85[6 - 4]] = v83[v85[6 - 3]][v83[v85[1630 - (173 + 1453)]]];
								v4152 = 4;
							end
						end
					end
				elseif (v86 <= (1266 - (237 + 611))) then
					if (v86 <= 414) then
						if (v86 <= (161 + 251)) then
							local v881 = 0 + 0;
							local v882;
							local v883;
							local v884;
							while true do
								if ((v881 == (11 - 8)) or (957 >= 4783)) then
									v83[v85[1 + 1]] = #v83[v85[6 - 3]];
									v77 = v77 + 1;
									v85 = v73[v77];
									v881 = 4;
								end
								if ((4000 <= 4755) and ((13 - 8) == v881)) then
									v884 = v85[2];
									v883 = v83[v884];
									v882 = v83[v884 + (377 - (129 + 246))];
									v881 = 6;
								end
								if (v881 == (9 - 5)) then
									v83[v85[1094 - (83 + 1009)]] = v85[876 - (506 + 367)];
									v77 = v77 + (4 - 3);
									v85 = v73[v77];
									v881 = 1 + 4;
								end
								if (v881 == (359 - (72 + 286))) then
									v83[v85[2 + 0]] = v83[v85[137 - (107 + 27)]];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v881 = 3 - 1;
								end
								if ((v881 == 2) or (2206 <= 66)) then
									v83[v85[2]] = v85[14 - 11];
									v77 = v77 + 1 + 0;
									v85 = v73[v77];
									v881 = 3;
								end
								if ((v881 == (11 - 5)) or (3116 <= 2598)) then
									if (v882 > (0 - 0)) then
										if (v883 > v83[v884 + 1]) then
											v77 = v85[398 - (304 + 91)];
										else
											v83[v884 + 3] = v883;
										end
									elseif (v883 < v83[v884 + 1 + 0]) then
										v77 = v85[3];
									else
										v83[v884 + (11 - 8)] = v883;
									end
									break;
								end
								if (v881 == (0 + 0)) then
									v882 = nil;
									v883 = nil;
									v884 = nil;
									v881 = 1 - 0;
								end
							end
						elseif ((v86 == (1973 - (648 + 912))) or (1455 >= 3809)) then
							if ((v83[v85[5 - 3]] < v83[v85[11 - 7]]) or (358 == 529)) then
								v77 = v77 + (446 - (206 + 239));
							else
								v77 = v85[1423 - (956 + 464)];
							end
						else
							local v4158;
							local v4159;
							local v4160;
							v83[v85[270 - (159 + 109)]] = v85[3 + 0];
							v77 = v77 + (680 - (239 + 440));
							v85 = v73[v77];
							v83[v85[2]] = v85[8 - 5];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1730 - (1664 + 64)]] = {};
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v4160 = v85[2 + 0];
							v78 = (v4160 + v84) - (2 - 1);
							for v4794 = v4160, v78 do
								v4159 = v79[v4794 - v4160];
								v83[v4794] = v4159;
							end
							v77 = v77 + 1;
							v85 = v73[v77];
							v4160 = v85[2 + 0];
							v4158 = v83[v4160];
							for v4797 = v4160 + 1, v78 do
								v7(v4158, v83[v4797]);
							end
						end
					elseif (v86 <= (88 + 328)) then
						if (v86 == (1929 - (1421 + 93))) then
							v83[v85[7 - 5]] = v83[v85[1151 - (1049 + 99)]] * v85[4 + 0];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[2]] = v83[v85[1 + 2]] + v83[v85[1252 - (871 + 377)]];
							v77 = v77 + 1 + 0;
							v85 = v73[v77];
							v83[v85[1779 - (1238 + 539)]] = v83[v85[575 - (206 + 366)]] * v85[4];
							v77 = v77 + (527 - (489 + 37));
							v85 = v73[v77];
							v83[v85[4 - 2]] = v83[v85[1 + 2]] + v83[v85[4]];
							v77 = v77 + (1 - 0);
							v85 = v73[v77];
							v83[v85[1 + 1]] = v83[v85[2 + 1]] + v83[v85[7 - 3]];
							v77 = v77 + (3 - 2);
							v85 = v73[v77];
							do
								return v83[v85[1 + 1]];
							end
						else
							local v4175 = 0 + 0;
							while true do
								if (v4175 == (3 - 1)) then
									v85 = v73[v77];
									v83[v85[2]] = v83[v85[3]][v83[v85[1 + 3]]];
									v77 = v77 + (1288 - (254 + 1033));
									v85 = v73[v77];
									v4175 = 3 + 0;
								end
								if (v4175 == (1762 - (1099 + 663))) then
									v83[v85[809 - (504 + 303)]] = v83[v85[3 + 0]][v85[18 - 14]];
									v77 = v77 + (2 - 1);
									v85 = v73[v77];
									v83[v85[5 - 3]] = v83[v85[3]][v83[v85[243 - (155 + 84)]]];
									v4175 = 3 - 2;
								end
								if ((v4175 == (9 - 6)) or (4445 <= 4053)) then
									v83[v85[2 + 0]] = v83[v85[3]][v83[v85[4]]];
									v77 = v77 + (1426 - (557 + 868));
									v85 = v73[v77];
									v83[v85[609 - (33 + 574)]][v83[v85[1568 - (839 + 726)]]] = v83[v85[7 - 3]];
									v4175 = 4;
								end
								if (v4175 == 4) then
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v77 = v85[334 - (124 + 207)];
									break;
								end
								if ((v4175 == (1 - 0)) or (1913 > 3498)) then
									v77 = v77 + (3 - 2);
									v85 = v73[v77];
									v83[v85[2 - 0]] = v83[v85[10 - 7]][v85[8 - 4]];
									v77 = v77 + 1 + 0;
									v4175 = 2 + 0;
								end
							end
						end
					elseif ((4098 >= 505) and (v86 == (318 + 99))) then
						local v4176 = 0 + 0;
						while true do
							if (((0 - 0) == v4176) or (1668 > 3940)) then
								v83[v85[2 + 0]] = v85[3 + 0] ~= (0 - 0);
								v77 = v77 + (2 - 1);
								break;
							end
						end
					else
						local v4177;
						local v4178;
						v83[v85[1 + 1]] = v85[3];
						v77 = v77 + (1 - 0);
						v85 = v73[v77];
						v4178 = v85[2];
						v83[v4178](v13(v83, v4178 + 1 + 0, v85[1 + 2]));
						v77 = v77 + 1;
						v85 = v73[v77];
						v4178 = v85[4 - 2];
						v4177 = v83[v85[4 - 1]];
						v83[v4178 + (1011 - (15 + 995))] = v4177;
						v83[v4178] = v4177[v85[8 - 4]];
						v77 = v77 + 1;
						v85 = v73[v77];
						v4178 = v85[2 + 0];
						v83[v4178](v83[v4178 + 1 + 0]);
						v77 = v77 + 1 + 0;
						v85 = v73[v77];
						v83[v85[39 - (34 + 3)]] = v85[9 - 6];
						v77 = v77 + 1 + 0;
						v85 = v73[v77];
						v77 = v85[3];
					end
				elseif (v86 <= (1515 - 1094)) then
					if (v86 <= (1040 - (477 + 144))) then
						v83[v85[972 - (797 + 173)]] = v83[v85[3]][v85[1265 - (161 + 1100)]];
						v77 = v77 + 1;
						v85 = v73[v77];
						v83[v85[1338 - (1150 + 186)]] = v83[v85[3 + 0]][v85[3 + 1]];
						v77 = v77 + (30 - (12 + 17));
						v85 = v73[v77];
						v83[v85[2 - 0]] = v83[v85[3]][v85[2 + 2]];
						v77 = v77 + (282 - (68 + 213));
						v85 = v73[v77];
						v83[v85[4 - 2]] = v83[v85[1 + 2]][v85[4]];
						v77 = v77 + 1;
						v85 = v73[v77];
						v83[v85[1 + 1]] = v85[4 - 1];
					elseif (v86 == (368 + 52)) then
						local v4191;
						v83[v85[1384 - (349 + 1033)]] = v85[357 - (68 + 286)];
						v77 = v77 + 1;
						v85 = v73[v77];
						v83[v85[1 + 1]] = v63[v85[5 - 2]];
						v77 = v77 + (2 - 1);
						v85 = v73[v77];
						v83[v85[2 + 0]] = v83[v85[12 - 9]][v85[10 - 6]];
						v77 = v77 + (1 - 0);
						v85 = v73[v77];
						v83[v85[2]] = v85[8 - 5];
						v77 = v77 + 1 + 0;
						v85 = v73[v77];
						v83[v85[1199 - (1064 + 133)]] = v85[3];
						v77 = v77 + (3 - 2);
						v85 = v73[v77];
						v83[v85[2]] = v85[7 - 4];
						v77 = v77 + 1;
						v85 = v73[v77];
						v4191 = v85[1 + 1];
						v83[v4191] = v83[v4191](v13(v83, v4191 + 1 + 0, v85[3]));
						v77 = v77 + 1 + 0;
						v85 = v73[v77];
						v83[v85[5 - 3]][v83[v85[1636 - (670 + 963)]]] = v83[v85[1 + 3]];
						v77 = v77 + (1100 - (1034 + 65));
						v85 = v73[v77];
						v83[v85[51 - (5 + 44)]] = v63[v85[3]];
						v77 = v77 + 1 + 0;
						v85 = v73[v77];
						v83[v85[47 - (25 + 20)]] = v85[4 - 1];
					else
						local v4212 = 1975 - (1535 + 440);
						local v4213;
						while true do
							if (v4212 == (0 - 0)) then
								v4213 = nil;
								v83[v85[621 - (477 + 142)]] = v62[v85[3]];
								v77 = v77 + 1;
								v4212 = 1;
							end
							if (v4212 == (1351 - (1324 + 20))) then
								v77 = v77 + 1;
								v85 = v73[v77];
								v77 = v85[3 + 0];
								break;
							end
							if (v4212 == (7 - 5)) then
								v85 = v73[v77];
								v83[v85[2 + 0]] = v83[v85[7 - 4]][v83[v85[4]]];
								v77 = v77 + (1619 - (818 + 800));
								v4212 = 232 - (163 + 66);
							end
							if (v4212 == (19 - 15)) then
								v85 = v73[v77];
								v83[v85[2]] = v62[v85[90 - (40 + 47)]];
								v77 = v77 + (636 - (146 + 489));
								v4212 = 2 + 3;
							end
							if ((2672 == 2672) and (v4212 == (1390 - (499 + 888)))) then
								v85 = v73[v77];
								for v6745 = v85[2], v85[3] do
									v83[v6745] = nil;
								end
								v77 = v77 + 1 + 0;
								v4212 = 5 - 1;
							end
							if (v4212 == (10 - 5)) then
								v85 = v73[v77];
								v4213 = v85[7 - 5];
								v83[v4213] = v83[v4213](v13(v83, v4213 + (1 - 0), v85[3]));
								v4212 = 750 - (522 + 222);
							end
							if (v4212 == (1 + 0)) then
								v85 = v73[v77];
								v83[v85[1487 - (72 + 1413)]] = v83[v85[1206 - (216 + 987)]][v85[4 + 0]];
								v77 = v77 + 1;
								v4212 = 9 - 7;
							end
							if (v4212 == (1417 - (1300 + 111))) then
								v77 = v77 + (1082 - (1055 + 26));
								v85 = v73[v77];
								v83[v85[2]][v83[v85[3]]] = v83[v85[647 - (475 + 168)]];
								v4212 = 1374 - (302 + 1065);
							end
						end
					end
				elseif (v86 <= (226 + 197)) then
					if (v86 == (158 + 264)) then
						v83[v85[2 + 0]] = v83[v85[1321 - (917 + 401)]] - v83[v85[1274 - (631 + 639)]];
					else
						v83[v85[2]][v85[1703 - (654 + 1046)]] = v85[3 + 1];
						v77 = v77 + (1600 - (1007 + 592));
						v85 = v73[v77];
						v83[v85[9 - 7]] = v63[v85[5 - 2]];
						v77 = v77 + 1;
						v85 = v73[v77];
						v83[v85[2 + 0]][v85[12 - 9]] = v85[11 - 7];
						v77 = v77 + (3 - 2);
						v85 = v73[v77];
						v83[v85[324 - (26 + 296)]] = v63[v85[3]];
						v77 = v77 + 1 + 0;
						v85 = v73[v77];
						v83[v85[7 - 5]] = v83[v85[2 + 1]][v85[821 - (418 + 399)]];
					end
				elseif (v86 == 424) then
					v83[v85[4 - 2]] = v83[v85[1 + 2]][v85[711 - (314 + 393)]];
					v77 = v77 + (3 - 2);
					v85 = v73[v77];
					v83[v85[2]] = v83[v85[173 - (82 + 88)]][v85[4 + 0]];
					v77 = v77 + 1;
					v85 = v73[v77];
					v83[v85[149 - (95 + 52)]] = v83[v85[1 + 2]][v85[4 + 0]];
					v77 = v77 + (2 - 1);
					v85 = v73[v77];
					v83[v85[835 - (8 + 825)]] = v83[v85[2 + 1]][v85[4]];
					v77 = v77 + 1;
					v85 = v73[v77];
					v63[v85[1643 - (471 + 1169)]] = v83[v85[2]];
					v77 = v77 + 1;
					v85 = v73[v77];
					v77 = v85[3 + 0];
				else
					v83[v85[2]] = v83[v85[2 + 1]][v85[19 - 15]];
					v77 = v77 + (2 - 1);
					v85 = v73[v77];
					v83[v85[2 + 0]] = v83[v85[1 + 2]][v85[4]];
					v77 = v77 + 1;
					v85 = v73[v77];
					v83[v85[1 + 1]] = v83[v85[1 + 2]][v85[447 - (365 + 78)]];
					v77 = v77 + (224 - (200 + 23));
					v85 = v73[v77];
					v83[v85[2]] = v83[v85[3 + 0]][v85[1 + 3]];
					v77 = v77 + 1 + 0;
					v85 = v73[v77];
					v63[v85[382 - (373 + 6)]] = v83[v85[7 - 5]];
					v77 = v77 + 1;
					v85 = v73[v77];
					v77 = v85[3];
				end
				v77 = v77 + (1 - 0);
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);
